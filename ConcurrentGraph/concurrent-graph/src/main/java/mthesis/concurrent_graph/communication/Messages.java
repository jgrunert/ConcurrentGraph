// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Messages.proto

package mthesis.concurrent_graph.communication;

public final class Messages {
  private Messages() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code mthesis.concurrent_graph.communication.messages.ControlMessageType}
   */
  public enum ControlMessageType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Channel_Handshake = 1;</code>
     *
     * <pre>
     * Handshake at channel startup
     * </pre>
     */
    Channel_Handshake(0, 1),
    /**
     * <code>Worker_Superstep_Barrier = 2;</code>
     *
     * <pre>
     * Message from workers to workers to signal superstep barrier
     * </pre>
     */
    Worker_Superstep_Barrier(1, 2),
    /**
     * <code>Worker_Superstep_Finished = 3;</code>
     *
     * <pre>
     * Message from workers to signal master that a superstep is finished, including barrier and message sort
     * </pre>
     */
    Worker_Superstep_Finished(2, 3),
    /**
     * <code>Worker_Finished = 4;</code>
     *
     * <pre>
     * Message from workers to signal master that the worker is completely finished
     * </pre>
     */
    Worker_Finished(3, 4),
    /**
     * <code>Master_Next_Superstep = 5;</code>
     *
     * <pre>
     * Message to signal workers to start with next superstep
     * </pre>
     */
    Master_Next_Superstep(4, 5),
    /**
     * <code>Master_Finish = 6;</code>
     *
     * <pre>
     * Message to signal workers to finish, output and terminate
     * </pre>
     */
    Master_Finish(5, 6),
    ;

    /**
     * <code>Channel_Handshake = 1;</code>
     *
     * <pre>
     * Handshake at channel startup
     * </pre>
     */
    public static final int Channel_Handshake_VALUE = 1;
    /**
     * <code>Worker_Superstep_Barrier = 2;</code>
     *
     * <pre>
     * Message from workers to workers to signal superstep barrier
     * </pre>
     */
    public static final int Worker_Superstep_Barrier_VALUE = 2;
    /**
     * <code>Worker_Superstep_Finished = 3;</code>
     *
     * <pre>
     * Message from workers to signal master that a superstep is finished, including barrier and message sort
     * </pre>
     */
    public static final int Worker_Superstep_Finished_VALUE = 3;
    /**
     * <code>Worker_Finished = 4;</code>
     *
     * <pre>
     * Message from workers to signal master that the worker is completely finished
     * </pre>
     */
    public static final int Worker_Finished_VALUE = 4;
    /**
     * <code>Master_Next_Superstep = 5;</code>
     *
     * <pre>
     * Message to signal workers to start with next superstep
     * </pre>
     */
    public static final int Master_Next_Superstep_VALUE = 5;
    /**
     * <code>Master_Finish = 6;</code>
     *
     * <pre>
     * Message to signal workers to finish, output and terminate
     * </pre>
     */
    public static final int Master_Finish_VALUE = 6;


    public final int getNumber() { return value; }

    public static ControlMessageType valueOf(int value) {
      switch (value) {
        case 1: return Channel_Handshake;
        case 2: return Worker_Superstep_Barrier;
        case 3: return Worker_Superstep_Finished;
        case 4: return Worker_Finished;
        case 5: return Master_Next_Superstep;
        case 6: return Master_Finish;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ControlMessageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ControlMessageType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ControlMessageType>() {
            public ControlMessageType findValueByNumber(int number) {
              return ControlMessageType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mthesis.concurrent_graph.communication.Messages.getDescriptor().getEnumTypes().get(0);
    }

    private static final ControlMessageType[] VALUES = values();

    public static ControlMessageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ControlMessageType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mthesis.concurrent_graph.communication.messages.ControlMessageType)
  }

  public interface MessageEnvelopeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .mthesis.concurrent_graph.communication.messages.VertexMessage VertexMessage = 1;
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.VertexMessage VertexMessage = 1;</code>
     */
    boolean hasVertexMessage();
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.VertexMessage VertexMessage = 1;</code>
     */
    mthesis.concurrent_graph.communication.Messages.VertexMessage getVertexMessage();
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.VertexMessage VertexMessage = 1;</code>
     */
    mthesis.concurrent_graph.communication.Messages.VertexMessageOrBuilder getVertexMessageOrBuilder();

    // optional .mthesis.concurrent_graph.communication.messages.ControlMessage ControlMessage = 2;
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage ControlMessage = 2;</code>
     */
    boolean hasControlMessage();
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage ControlMessage = 2;</code>
     */
    mthesis.concurrent_graph.communication.Messages.ControlMessage getControlMessage();
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage ControlMessage = 2;</code>
     */
    mthesis.concurrent_graph.communication.Messages.ControlMessageOrBuilder getControlMessageOrBuilder();
  }
  /**
   * Protobuf type {@code mthesis.concurrent_graph.communication.messages.MessageEnvelope}
   */
  public static final class MessageEnvelope extends
      com.google.protobuf.GeneratedMessage
      implements MessageEnvelopeOrBuilder {
    // Use MessageEnvelope.newBuilder() to construct.
    private MessageEnvelope(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MessageEnvelope(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MessageEnvelope defaultInstance;
    public static MessageEnvelope getDefaultInstance() {
      return defaultInstance;
    }

    public MessageEnvelope getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MessageEnvelope(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              mthesis.concurrent_graph.communication.Messages.VertexMessage.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = vertexMessage_.toBuilder();
              }
              vertexMessage_ = input.readMessage(mthesis.concurrent_graph.communication.Messages.VertexMessage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(vertexMessage_);
                vertexMessage_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              mthesis.concurrent_graph.communication.Messages.ControlMessage.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = controlMessage_.toBuilder();
              }
              controlMessage_ = input.readMessage(mthesis.concurrent_graph.communication.Messages.ControlMessage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(controlMessage_);
                controlMessage_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_MessageEnvelope_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_MessageEnvelope_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              mthesis.concurrent_graph.communication.Messages.MessageEnvelope.class, mthesis.concurrent_graph.communication.Messages.MessageEnvelope.Builder.class);
    }

    public static com.google.protobuf.Parser<MessageEnvelope> PARSER =
        new com.google.protobuf.AbstractParser<MessageEnvelope>() {
      public MessageEnvelope parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MessageEnvelope(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MessageEnvelope> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .mthesis.concurrent_graph.communication.messages.VertexMessage VertexMessage = 1;
    public static final int VERTEXMESSAGE_FIELD_NUMBER = 1;
    private mthesis.concurrent_graph.communication.Messages.VertexMessage vertexMessage_;
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.VertexMessage VertexMessage = 1;</code>
     */
    public boolean hasVertexMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.VertexMessage VertexMessage = 1;</code>
     */
    public mthesis.concurrent_graph.communication.Messages.VertexMessage getVertexMessage() {
      return vertexMessage_;
    }
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.VertexMessage VertexMessage = 1;</code>
     */
    public mthesis.concurrent_graph.communication.Messages.VertexMessageOrBuilder getVertexMessageOrBuilder() {
      return vertexMessage_;
    }

    // optional .mthesis.concurrent_graph.communication.messages.ControlMessage ControlMessage = 2;
    public static final int CONTROLMESSAGE_FIELD_NUMBER = 2;
    private mthesis.concurrent_graph.communication.Messages.ControlMessage controlMessage_;
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage ControlMessage = 2;</code>
     */
    public boolean hasControlMessage() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage ControlMessage = 2;</code>
     */
    public mthesis.concurrent_graph.communication.Messages.ControlMessage getControlMessage() {
      return controlMessage_;
    }
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage ControlMessage = 2;</code>
     */
    public mthesis.concurrent_graph.communication.Messages.ControlMessageOrBuilder getControlMessageOrBuilder() {
      return controlMessage_;
    }

    private void initFields() {
      vertexMessage_ = mthesis.concurrent_graph.communication.Messages.VertexMessage.getDefaultInstance();
      controlMessage_ = mthesis.concurrent_graph.communication.Messages.ControlMessage.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, vertexMessage_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, controlMessage_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, vertexMessage_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, controlMessage_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static mthesis.concurrent_graph.communication.Messages.MessageEnvelope parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mthesis.concurrent_graph.communication.Messages.MessageEnvelope parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mthesis.concurrent_graph.communication.Messages.MessageEnvelope parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mthesis.concurrent_graph.communication.Messages.MessageEnvelope parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mthesis.concurrent_graph.communication.Messages.MessageEnvelope parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static mthesis.concurrent_graph.communication.Messages.MessageEnvelope parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static mthesis.concurrent_graph.communication.Messages.MessageEnvelope parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static mthesis.concurrent_graph.communication.Messages.MessageEnvelope parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static mthesis.concurrent_graph.communication.Messages.MessageEnvelope parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static mthesis.concurrent_graph.communication.Messages.MessageEnvelope parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mthesis.concurrent_graph.communication.Messages.MessageEnvelope prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mthesis.concurrent_graph.communication.messages.MessageEnvelope}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mthesis.concurrent_graph.communication.Messages.MessageEnvelopeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_MessageEnvelope_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_MessageEnvelope_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mthesis.concurrent_graph.communication.Messages.MessageEnvelope.class, mthesis.concurrent_graph.communication.Messages.MessageEnvelope.Builder.class);
      }

      // Construct using mthesis.concurrent_graph.communication.Messages.MessageEnvelope.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getVertexMessageFieldBuilder();
          getControlMessageFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (vertexMessageBuilder_ == null) {
          vertexMessage_ = mthesis.concurrent_graph.communication.Messages.VertexMessage.getDefaultInstance();
        } else {
          vertexMessageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (controlMessageBuilder_ == null) {
          controlMessage_ = mthesis.concurrent_graph.communication.Messages.ControlMessage.getDefaultInstance();
        } else {
          controlMessageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_MessageEnvelope_descriptor;
      }

      public mthesis.concurrent_graph.communication.Messages.MessageEnvelope getDefaultInstanceForType() {
        return mthesis.concurrent_graph.communication.Messages.MessageEnvelope.getDefaultInstance();
      }

      public mthesis.concurrent_graph.communication.Messages.MessageEnvelope build() {
        mthesis.concurrent_graph.communication.Messages.MessageEnvelope result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public mthesis.concurrent_graph.communication.Messages.MessageEnvelope buildPartial() {
        mthesis.concurrent_graph.communication.Messages.MessageEnvelope result = new mthesis.concurrent_graph.communication.Messages.MessageEnvelope(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (vertexMessageBuilder_ == null) {
          result.vertexMessage_ = vertexMessage_;
        } else {
          result.vertexMessage_ = vertexMessageBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (controlMessageBuilder_ == null) {
          result.controlMessage_ = controlMessage_;
        } else {
          result.controlMessage_ = controlMessageBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mthesis.concurrent_graph.communication.Messages.MessageEnvelope) {
          return mergeFrom((mthesis.concurrent_graph.communication.Messages.MessageEnvelope)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(mthesis.concurrent_graph.communication.Messages.MessageEnvelope other) {
        if (other == mthesis.concurrent_graph.communication.Messages.MessageEnvelope.getDefaultInstance()) return this;
        if (other.hasVertexMessage()) {
          mergeVertexMessage(other.getVertexMessage());
        }
        if (other.hasControlMessage()) {
          mergeControlMessage(other.getControlMessage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        mthesis.concurrent_graph.communication.Messages.MessageEnvelope parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mthesis.concurrent_graph.communication.Messages.MessageEnvelope) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .mthesis.concurrent_graph.communication.messages.VertexMessage VertexMessage = 1;
      private mthesis.concurrent_graph.communication.Messages.VertexMessage vertexMessage_ = mthesis.concurrent_graph.communication.Messages.VertexMessage.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          mthesis.concurrent_graph.communication.Messages.VertexMessage, mthesis.concurrent_graph.communication.Messages.VertexMessage.Builder, mthesis.concurrent_graph.communication.Messages.VertexMessageOrBuilder> vertexMessageBuilder_;
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.VertexMessage VertexMessage = 1;</code>
       */
      public boolean hasVertexMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.VertexMessage VertexMessage = 1;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.VertexMessage getVertexMessage() {
        if (vertexMessageBuilder_ == null) {
          return vertexMessage_;
        } else {
          return vertexMessageBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.VertexMessage VertexMessage = 1;</code>
       */
      public Builder setVertexMessage(mthesis.concurrent_graph.communication.Messages.VertexMessage value) {
        if (vertexMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          vertexMessage_ = value;
          onChanged();
        } else {
          vertexMessageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.VertexMessage VertexMessage = 1;</code>
       */
      public Builder setVertexMessage(
          mthesis.concurrent_graph.communication.Messages.VertexMessage.Builder builderForValue) {
        if (vertexMessageBuilder_ == null) {
          vertexMessage_ = builderForValue.build();
          onChanged();
        } else {
          vertexMessageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.VertexMessage VertexMessage = 1;</code>
       */
      public Builder mergeVertexMessage(mthesis.concurrent_graph.communication.Messages.VertexMessage value) {
        if (vertexMessageBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              vertexMessage_ != mthesis.concurrent_graph.communication.Messages.VertexMessage.getDefaultInstance()) {
            vertexMessage_ =
              mthesis.concurrent_graph.communication.Messages.VertexMessage.newBuilder(vertexMessage_).mergeFrom(value).buildPartial();
          } else {
            vertexMessage_ = value;
          }
          onChanged();
        } else {
          vertexMessageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.VertexMessage VertexMessage = 1;</code>
       */
      public Builder clearVertexMessage() {
        if (vertexMessageBuilder_ == null) {
          vertexMessage_ = mthesis.concurrent_graph.communication.Messages.VertexMessage.getDefaultInstance();
          onChanged();
        } else {
          vertexMessageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.VertexMessage VertexMessage = 1;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.VertexMessage.Builder getVertexMessageBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getVertexMessageFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.VertexMessage VertexMessage = 1;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.VertexMessageOrBuilder getVertexMessageOrBuilder() {
        if (vertexMessageBuilder_ != null) {
          return vertexMessageBuilder_.getMessageOrBuilder();
        } else {
          return vertexMessage_;
        }
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.VertexMessage VertexMessage = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          mthesis.concurrent_graph.communication.Messages.VertexMessage, mthesis.concurrent_graph.communication.Messages.VertexMessage.Builder, mthesis.concurrent_graph.communication.Messages.VertexMessageOrBuilder> 
          getVertexMessageFieldBuilder() {
        if (vertexMessageBuilder_ == null) {
          vertexMessageBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              mthesis.concurrent_graph.communication.Messages.VertexMessage, mthesis.concurrent_graph.communication.Messages.VertexMessage.Builder, mthesis.concurrent_graph.communication.Messages.VertexMessageOrBuilder>(
                  vertexMessage_,
                  getParentForChildren(),
                  isClean());
          vertexMessage_ = null;
        }
        return vertexMessageBuilder_;
      }

      // optional .mthesis.concurrent_graph.communication.messages.ControlMessage ControlMessage = 2;
      private mthesis.concurrent_graph.communication.Messages.ControlMessage controlMessage_ = mthesis.concurrent_graph.communication.Messages.ControlMessage.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          mthesis.concurrent_graph.communication.Messages.ControlMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessageOrBuilder> controlMessageBuilder_;
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage ControlMessage = 2;</code>
       */
      public boolean hasControlMessage() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage ControlMessage = 2;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessage getControlMessage() {
        if (controlMessageBuilder_ == null) {
          return controlMessage_;
        } else {
          return controlMessageBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage ControlMessage = 2;</code>
       */
      public Builder setControlMessage(mthesis.concurrent_graph.communication.Messages.ControlMessage value) {
        if (controlMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          controlMessage_ = value;
          onChanged();
        } else {
          controlMessageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage ControlMessage = 2;</code>
       */
      public Builder setControlMessage(
          mthesis.concurrent_graph.communication.Messages.ControlMessage.Builder builderForValue) {
        if (controlMessageBuilder_ == null) {
          controlMessage_ = builderForValue.build();
          onChanged();
        } else {
          controlMessageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage ControlMessage = 2;</code>
       */
      public Builder mergeControlMessage(mthesis.concurrent_graph.communication.Messages.ControlMessage value) {
        if (controlMessageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              controlMessage_ != mthesis.concurrent_graph.communication.Messages.ControlMessage.getDefaultInstance()) {
            controlMessage_ =
              mthesis.concurrent_graph.communication.Messages.ControlMessage.newBuilder(controlMessage_).mergeFrom(value).buildPartial();
          } else {
            controlMessage_ = value;
          }
          onChanged();
        } else {
          controlMessageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage ControlMessage = 2;</code>
       */
      public Builder clearControlMessage() {
        if (controlMessageBuilder_ == null) {
          controlMessage_ = mthesis.concurrent_graph.communication.Messages.ControlMessage.getDefaultInstance();
          onChanged();
        } else {
          controlMessageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage ControlMessage = 2;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessage.Builder getControlMessageBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getControlMessageFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage ControlMessage = 2;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessageOrBuilder getControlMessageOrBuilder() {
        if (controlMessageBuilder_ != null) {
          return controlMessageBuilder_.getMessageOrBuilder();
        } else {
          return controlMessage_;
        }
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage ControlMessage = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          mthesis.concurrent_graph.communication.Messages.ControlMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessageOrBuilder> 
          getControlMessageFieldBuilder() {
        if (controlMessageBuilder_ == null) {
          controlMessageBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              mthesis.concurrent_graph.communication.Messages.ControlMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessageOrBuilder>(
                  controlMessage_,
                  getParentForChildren(),
                  isClean());
          controlMessage_ = null;
        }
        return controlMessageBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:mthesis.concurrent_graph.communication.messages.MessageEnvelope)
    }

    static {
      defaultInstance = new MessageEnvelope(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mthesis.concurrent_graph.communication.messages.MessageEnvelope)
  }

  public interface VertexMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 SuperstepNo = 1;
    /**
     * <code>optional int32 SuperstepNo = 1;</code>
     */
    boolean hasSuperstepNo();
    /**
     * <code>optional int32 SuperstepNo = 1;</code>
     */
    int getSuperstepNo();

    // optional int32 FromNode = 2;
    /**
     * <code>optional int32 FromNode = 2;</code>
     *
     * <pre>
     * TODO ToNode?
     * </pre>
     */
    boolean hasFromNode();
    /**
     * <code>optional int32 FromNode = 2;</code>
     *
     * <pre>
     * TODO ToNode?
     * </pre>
     */
    int getFromNode();

    // optional int32 FromVertex = 3;
    /**
     * <code>optional int32 FromVertex = 3;</code>
     */
    boolean hasFromVertex();
    /**
     * <code>optional int32 FromVertex = 3;</code>
     */
    int getFromVertex();

    // optional int32 ToVertex = 4;
    /**
     * <code>optional int32 ToVertex = 4;</code>
     */
    boolean hasToVertex();
    /**
     * <code>optional int32 ToVertex = 4;</code>
     */
    int getToVertex();

    // optional int32 Content = 5;
    /**
     * <code>optional int32 Content = 5;</code>
     *
     * <pre>
     * TODO Type
     * </pre>
     */
    boolean hasContent();
    /**
     * <code>optional int32 Content = 5;</code>
     *
     * <pre>
     * TODO Type
     * </pre>
     */
    int getContent();
  }
  /**
   * Protobuf type {@code mthesis.concurrent_graph.communication.messages.VertexMessage}
   */
  public static final class VertexMessage extends
      com.google.protobuf.GeneratedMessage
      implements VertexMessageOrBuilder {
    // Use VertexMessage.newBuilder() to construct.
    private VertexMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private VertexMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final VertexMessage defaultInstance;
    public static VertexMessage getDefaultInstance() {
      return defaultInstance;
    }

    public VertexMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private VertexMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              superstepNo_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              fromNode_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              fromVertex_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              toVertex_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              content_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_VertexMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_VertexMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              mthesis.concurrent_graph.communication.Messages.VertexMessage.class, mthesis.concurrent_graph.communication.Messages.VertexMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<VertexMessage> PARSER =
        new com.google.protobuf.AbstractParser<VertexMessage>() {
      public VertexMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VertexMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<VertexMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 SuperstepNo = 1;
    public static final int SUPERSTEPNO_FIELD_NUMBER = 1;
    private int superstepNo_;
    /**
     * <code>optional int32 SuperstepNo = 1;</code>
     */
    public boolean hasSuperstepNo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 SuperstepNo = 1;</code>
     */
    public int getSuperstepNo() {
      return superstepNo_;
    }

    // optional int32 FromNode = 2;
    public static final int FROMNODE_FIELD_NUMBER = 2;
    private int fromNode_;
    /**
     * <code>optional int32 FromNode = 2;</code>
     *
     * <pre>
     * TODO ToNode?
     * </pre>
     */
    public boolean hasFromNode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 FromNode = 2;</code>
     *
     * <pre>
     * TODO ToNode?
     * </pre>
     */
    public int getFromNode() {
      return fromNode_;
    }

    // optional int32 FromVertex = 3;
    public static final int FROMVERTEX_FIELD_NUMBER = 3;
    private int fromVertex_;
    /**
     * <code>optional int32 FromVertex = 3;</code>
     */
    public boolean hasFromVertex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 FromVertex = 3;</code>
     */
    public int getFromVertex() {
      return fromVertex_;
    }

    // optional int32 ToVertex = 4;
    public static final int TOVERTEX_FIELD_NUMBER = 4;
    private int toVertex_;
    /**
     * <code>optional int32 ToVertex = 4;</code>
     */
    public boolean hasToVertex() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 ToVertex = 4;</code>
     */
    public int getToVertex() {
      return toVertex_;
    }

    // optional int32 Content = 5;
    public static final int CONTENT_FIELD_NUMBER = 5;
    private int content_;
    /**
     * <code>optional int32 Content = 5;</code>
     *
     * <pre>
     * TODO Type
     * </pre>
     */
    public boolean hasContent() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 Content = 5;</code>
     *
     * <pre>
     * TODO Type
     * </pre>
     */
    public int getContent() {
      return content_;
    }

    private void initFields() {
      superstepNo_ = 0;
      fromNode_ = 0;
      fromVertex_ = 0;
      toVertex_ = 0;
      content_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, superstepNo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, fromNode_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, fromVertex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, toVertex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, content_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, superstepNo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, fromNode_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, fromVertex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, toVertex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, content_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static mthesis.concurrent_graph.communication.Messages.VertexMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mthesis.concurrent_graph.communication.Messages.VertexMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mthesis.concurrent_graph.communication.Messages.VertexMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mthesis.concurrent_graph.communication.Messages.VertexMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mthesis.concurrent_graph.communication.Messages.VertexMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static mthesis.concurrent_graph.communication.Messages.VertexMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static mthesis.concurrent_graph.communication.Messages.VertexMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static mthesis.concurrent_graph.communication.Messages.VertexMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static mthesis.concurrent_graph.communication.Messages.VertexMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static mthesis.concurrent_graph.communication.Messages.VertexMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mthesis.concurrent_graph.communication.Messages.VertexMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mthesis.concurrent_graph.communication.messages.VertexMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mthesis.concurrent_graph.communication.Messages.VertexMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_VertexMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_VertexMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mthesis.concurrent_graph.communication.Messages.VertexMessage.class, mthesis.concurrent_graph.communication.Messages.VertexMessage.Builder.class);
      }

      // Construct using mthesis.concurrent_graph.communication.Messages.VertexMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        superstepNo_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        fromNode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        fromVertex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        toVertex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        content_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_VertexMessage_descriptor;
      }

      public mthesis.concurrent_graph.communication.Messages.VertexMessage getDefaultInstanceForType() {
        return mthesis.concurrent_graph.communication.Messages.VertexMessage.getDefaultInstance();
      }

      public mthesis.concurrent_graph.communication.Messages.VertexMessage build() {
        mthesis.concurrent_graph.communication.Messages.VertexMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public mthesis.concurrent_graph.communication.Messages.VertexMessage buildPartial() {
        mthesis.concurrent_graph.communication.Messages.VertexMessage result = new mthesis.concurrent_graph.communication.Messages.VertexMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.superstepNo_ = superstepNo_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fromNode_ = fromNode_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fromVertex_ = fromVertex_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.toVertex_ = toVertex_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.content_ = content_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mthesis.concurrent_graph.communication.Messages.VertexMessage) {
          return mergeFrom((mthesis.concurrent_graph.communication.Messages.VertexMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(mthesis.concurrent_graph.communication.Messages.VertexMessage other) {
        if (other == mthesis.concurrent_graph.communication.Messages.VertexMessage.getDefaultInstance()) return this;
        if (other.hasSuperstepNo()) {
          setSuperstepNo(other.getSuperstepNo());
        }
        if (other.hasFromNode()) {
          setFromNode(other.getFromNode());
        }
        if (other.hasFromVertex()) {
          setFromVertex(other.getFromVertex());
        }
        if (other.hasToVertex()) {
          setToVertex(other.getToVertex());
        }
        if (other.hasContent()) {
          setContent(other.getContent());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        mthesis.concurrent_graph.communication.Messages.VertexMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mthesis.concurrent_graph.communication.Messages.VertexMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 SuperstepNo = 1;
      private int superstepNo_ ;
      /**
       * <code>optional int32 SuperstepNo = 1;</code>
       */
      public boolean hasSuperstepNo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 SuperstepNo = 1;</code>
       */
      public int getSuperstepNo() {
        return superstepNo_;
      }
      /**
       * <code>optional int32 SuperstepNo = 1;</code>
       */
      public Builder setSuperstepNo(int value) {
        bitField0_ |= 0x00000001;
        superstepNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 SuperstepNo = 1;</code>
       */
      public Builder clearSuperstepNo() {
        bitField0_ = (bitField0_ & ~0x00000001);
        superstepNo_ = 0;
        onChanged();
        return this;
      }

      // optional int32 FromNode = 2;
      private int fromNode_ ;
      /**
       * <code>optional int32 FromNode = 2;</code>
       *
       * <pre>
       * TODO ToNode?
       * </pre>
       */
      public boolean hasFromNode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 FromNode = 2;</code>
       *
       * <pre>
       * TODO ToNode?
       * </pre>
       */
      public int getFromNode() {
        return fromNode_;
      }
      /**
       * <code>optional int32 FromNode = 2;</code>
       *
       * <pre>
       * TODO ToNode?
       * </pre>
       */
      public Builder setFromNode(int value) {
        bitField0_ |= 0x00000002;
        fromNode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 FromNode = 2;</code>
       *
       * <pre>
       * TODO ToNode?
       * </pre>
       */
      public Builder clearFromNode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fromNode_ = 0;
        onChanged();
        return this;
      }

      // optional int32 FromVertex = 3;
      private int fromVertex_ ;
      /**
       * <code>optional int32 FromVertex = 3;</code>
       */
      public boolean hasFromVertex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 FromVertex = 3;</code>
       */
      public int getFromVertex() {
        return fromVertex_;
      }
      /**
       * <code>optional int32 FromVertex = 3;</code>
       */
      public Builder setFromVertex(int value) {
        bitField0_ |= 0x00000004;
        fromVertex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 FromVertex = 3;</code>
       */
      public Builder clearFromVertex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fromVertex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 ToVertex = 4;
      private int toVertex_ ;
      /**
       * <code>optional int32 ToVertex = 4;</code>
       */
      public boolean hasToVertex() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 ToVertex = 4;</code>
       */
      public int getToVertex() {
        return toVertex_;
      }
      /**
       * <code>optional int32 ToVertex = 4;</code>
       */
      public Builder setToVertex(int value) {
        bitField0_ |= 0x00000008;
        toVertex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ToVertex = 4;</code>
       */
      public Builder clearToVertex() {
        bitField0_ = (bitField0_ & ~0x00000008);
        toVertex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 Content = 5;
      private int content_ ;
      /**
       * <code>optional int32 Content = 5;</code>
       *
       * <pre>
       * TODO Type
       * </pre>
       */
      public boolean hasContent() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 Content = 5;</code>
       *
       * <pre>
       * TODO Type
       * </pre>
       */
      public int getContent() {
        return content_;
      }
      /**
       * <code>optional int32 Content = 5;</code>
       *
       * <pre>
       * TODO Type
       * </pre>
       */
      public Builder setContent(int value) {
        bitField0_ |= 0x00000010;
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Content = 5;</code>
       *
       * <pre>
       * TODO Type
       * </pre>
       */
      public Builder clearContent() {
        bitField0_ = (bitField0_ & ~0x00000010);
        content_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mthesis.concurrent_graph.communication.messages.VertexMessage)
    }

    static {
      defaultInstance = new VertexMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mthesis.concurrent_graph.communication.messages.VertexMessage)
  }

  public interface ControlMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .mthesis.concurrent_graph.communication.messages.ControlMessageType Type = 1;
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessageType Type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessageType Type = 1;</code>
     */
    mthesis.concurrent_graph.communication.Messages.ControlMessageType getType();

    // optional int32 SuperstepNo = 2;
    /**
     * <code>optional int32 SuperstepNo = 2;</code>
     */
    boolean hasSuperstepNo();
    /**
     * <code>optional int32 SuperstepNo = 2;</code>
     */
    int getSuperstepNo();

    // optional int32 FromNode = 3;
    /**
     * <code>optional int32 FromNode = 3;</code>
     */
    boolean hasFromNode();
    /**
     * <code>optional int32 FromNode = 3;</code>
     */
    int getFromNode();

    // optional int32 Content1 = 4;
    /**
     * <code>optional int32 Content1 = 4;</code>
     *
     * <pre>
     *TODO Type
     * </pre>
     */
    boolean hasContent1();
    /**
     * <code>optional int32 Content1 = 4;</code>
     *
     * <pre>
     *TODO Type
     * </pre>
     */
    int getContent1();

    // optional int32 Content2 = 5;
    /**
     * <code>optional int32 Content2 = 5;</code>
     *
     * <pre>
     *TODO Type
     * </pre>
     */
    boolean hasContent2();
    /**
     * <code>optional int32 Content2 = 5;</code>
     *
     * <pre>
     *TODO Type
     * </pre>
     */
    int getContent2();
  }
  /**
   * Protobuf type {@code mthesis.concurrent_graph.communication.messages.ControlMessage}
   */
  public static final class ControlMessage extends
      com.google.protobuf.GeneratedMessage
      implements ControlMessageOrBuilder {
    // Use ControlMessage.newBuilder() to construct.
    private ControlMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ControlMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ControlMessage defaultInstance;
    public static ControlMessage getDefaultInstance() {
      return defaultInstance;
    }

    public ControlMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ControlMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              mthesis.concurrent_graph.communication.Messages.ControlMessageType value = mthesis.concurrent_graph.communication.Messages.ControlMessageType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              superstepNo_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              fromNode_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              content1_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              content2_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              mthesis.concurrent_graph.communication.Messages.ControlMessage.class, mthesis.concurrent_graph.communication.Messages.ControlMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<ControlMessage> PARSER =
        new com.google.protobuf.AbstractParser<ControlMessage>() {
      public ControlMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ControlMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ControlMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .mthesis.concurrent_graph.communication.messages.ControlMessageType Type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private mthesis.concurrent_graph.communication.Messages.ControlMessageType type_;
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessageType Type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessageType Type = 1;</code>
     */
    public mthesis.concurrent_graph.communication.Messages.ControlMessageType getType() {
      return type_;
    }

    // optional int32 SuperstepNo = 2;
    public static final int SUPERSTEPNO_FIELD_NUMBER = 2;
    private int superstepNo_;
    /**
     * <code>optional int32 SuperstepNo = 2;</code>
     */
    public boolean hasSuperstepNo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 SuperstepNo = 2;</code>
     */
    public int getSuperstepNo() {
      return superstepNo_;
    }

    // optional int32 FromNode = 3;
    public static final int FROMNODE_FIELD_NUMBER = 3;
    private int fromNode_;
    /**
     * <code>optional int32 FromNode = 3;</code>
     */
    public boolean hasFromNode() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 FromNode = 3;</code>
     */
    public int getFromNode() {
      return fromNode_;
    }

    // optional int32 Content1 = 4;
    public static final int CONTENT1_FIELD_NUMBER = 4;
    private int content1_;
    /**
     * <code>optional int32 Content1 = 4;</code>
     *
     * <pre>
     *TODO Type
     * </pre>
     */
    public boolean hasContent1() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 Content1 = 4;</code>
     *
     * <pre>
     *TODO Type
     * </pre>
     */
    public int getContent1() {
      return content1_;
    }

    // optional int32 Content2 = 5;
    public static final int CONTENT2_FIELD_NUMBER = 5;
    private int content2_;
    /**
     * <code>optional int32 Content2 = 5;</code>
     *
     * <pre>
     *TODO Type
     * </pre>
     */
    public boolean hasContent2() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 Content2 = 5;</code>
     *
     * <pre>
     *TODO Type
     * </pre>
     */
    public int getContent2() {
      return content2_;
    }

    private void initFields() {
      type_ = mthesis.concurrent_graph.communication.Messages.ControlMessageType.Channel_Handshake;
      superstepNo_ = 0;
      fromNode_ = 0;
      content1_ = 0;
      content2_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, superstepNo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, fromNode_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, content1_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, content2_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, superstepNo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, fromNode_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, content1_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, content2_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static mthesis.concurrent_graph.communication.Messages.ControlMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mthesis.concurrent_graph.communication.Messages.ControlMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mthesis.concurrent_graph.communication.Messages.ControlMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mthesis.concurrent_graph.communication.Messages.ControlMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mthesis.concurrent_graph.communication.Messages.ControlMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static mthesis.concurrent_graph.communication.Messages.ControlMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static mthesis.concurrent_graph.communication.Messages.ControlMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static mthesis.concurrent_graph.communication.Messages.ControlMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static mthesis.concurrent_graph.communication.Messages.ControlMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static mthesis.concurrent_graph.communication.Messages.ControlMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mthesis.concurrent_graph.communication.Messages.ControlMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mthesis.concurrent_graph.communication.messages.ControlMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mthesis.concurrent_graph.communication.Messages.ControlMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mthesis.concurrent_graph.communication.Messages.ControlMessage.class, mthesis.concurrent_graph.communication.Messages.ControlMessage.Builder.class);
      }

      // Construct using mthesis.concurrent_graph.communication.Messages.ControlMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = mthesis.concurrent_graph.communication.Messages.ControlMessageType.Channel_Handshake;
        bitField0_ = (bitField0_ & ~0x00000001);
        superstepNo_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        fromNode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        content1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        content2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_descriptor;
      }

      public mthesis.concurrent_graph.communication.Messages.ControlMessage getDefaultInstanceForType() {
        return mthesis.concurrent_graph.communication.Messages.ControlMessage.getDefaultInstance();
      }

      public mthesis.concurrent_graph.communication.Messages.ControlMessage build() {
        mthesis.concurrent_graph.communication.Messages.ControlMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public mthesis.concurrent_graph.communication.Messages.ControlMessage buildPartial() {
        mthesis.concurrent_graph.communication.Messages.ControlMessage result = new mthesis.concurrent_graph.communication.Messages.ControlMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.superstepNo_ = superstepNo_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fromNode_ = fromNode_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.content1_ = content1_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.content2_ = content2_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mthesis.concurrent_graph.communication.Messages.ControlMessage) {
          return mergeFrom((mthesis.concurrent_graph.communication.Messages.ControlMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(mthesis.concurrent_graph.communication.Messages.ControlMessage other) {
        if (other == mthesis.concurrent_graph.communication.Messages.ControlMessage.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasSuperstepNo()) {
          setSuperstepNo(other.getSuperstepNo());
        }
        if (other.hasFromNode()) {
          setFromNode(other.getFromNode());
        }
        if (other.hasContent1()) {
          setContent1(other.getContent1());
        }
        if (other.hasContent2()) {
          setContent2(other.getContent2());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        mthesis.concurrent_graph.communication.Messages.ControlMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mthesis.concurrent_graph.communication.Messages.ControlMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .mthesis.concurrent_graph.communication.messages.ControlMessageType Type = 1;
      private mthesis.concurrent_graph.communication.Messages.ControlMessageType type_ = mthesis.concurrent_graph.communication.Messages.ControlMessageType.Channel_Handshake;
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessageType Type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessageType Type = 1;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessageType getType() {
        return type_;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessageType Type = 1;</code>
       */
      public Builder setType(mthesis.concurrent_graph.communication.Messages.ControlMessageType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessageType Type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = mthesis.concurrent_graph.communication.Messages.ControlMessageType.Channel_Handshake;
        onChanged();
        return this;
      }

      // optional int32 SuperstepNo = 2;
      private int superstepNo_ ;
      /**
       * <code>optional int32 SuperstepNo = 2;</code>
       */
      public boolean hasSuperstepNo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 SuperstepNo = 2;</code>
       */
      public int getSuperstepNo() {
        return superstepNo_;
      }
      /**
       * <code>optional int32 SuperstepNo = 2;</code>
       */
      public Builder setSuperstepNo(int value) {
        bitField0_ |= 0x00000002;
        superstepNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 SuperstepNo = 2;</code>
       */
      public Builder clearSuperstepNo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        superstepNo_ = 0;
        onChanged();
        return this;
      }

      // optional int32 FromNode = 3;
      private int fromNode_ ;
      /**
       * <code>optional int32 FromNode = 3;</code>
       */
      public boolean hasFromNode() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 FromNode = 3;</code>
       */
      public int getFromNode() {
        return fromNode_;
      }
      /**
       * <code>optional int32 FromNode = 3;</code>
       */
      public Builder setFromNode(int value) {
        bitField0_ |= 0x00000004;
        fromNode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 FromNode = 3;</code>
       */
      public Builder clearFromNode() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fromNode_ = 0;
        onChanged();
        return this;
      }

      // optional int32 Content1 = 4;
      private int content1_ ;
      /**
       * <code>optional int32 Content1 = 4;</code>
       *
       * <pre>
       *TODO Type
       * </pre>
       */
      public boolean hasContent1() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 Content1 = 4;</code>
       *
       * <pre>
       *TODO Type
       * </pre>
       */
      public int getContent1() {
        return content1_;
      }
      /**
       * <code>optional int32 Content1 = 4;</code>
       *
       * <pre>
       *TODO Type
       * </pre>
       */
      public Builder setContent1(int value) {
        bitField0_ |= 0x00000008;
        content1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Content1 = 4;</code>
       *
       * <pre>
       *TODO Type
       * </pre>
       */
      public Builder clearContent1() {
        bitField0_ = (bitField0_ & ~0x00000008);
        content1_ = 0;
        onChanged();
        return this;
      }

      // optional int32 Content2 = 5;
      private int content2_ ;
      /**
       * <code>optional int32 Content2 = 5;</code>
       *
       * <pre>
       *TODO Type
       * </pre>
       */
      public boolean hasContent2() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 Content2 = 5;</code>
       *
       * <pre>
       *TODO Type
       * </pre>
       */
      public int getContent2() {
        return content2_;
      }
      /**
       * <code>optional int32 Content2 = 5;</code>
       *
       * <pre>
       *TODO Type
       * </pre>
       */
      public Builder setContent2(int value) {
        bitField0_ |= 0x00000010;
        content2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Content2 = 5;</code>
       *
       * <pre>
       *TODO Type
       * </pre>
       */
      public Builder clearContent2() {
        bitField0_ = (bitField0_ & ~0x00000010);
        content2_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mthesis.concurrent_graph.communication.messages.ControlMessage)
    }

    static {
      defaultInstance = new ControlMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mthesis.concurrent_graph.communication.messages.ControlMessage)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mthesis_concurrent_graph_communication_messages_MessageEnvelope_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mthesis_concurrent_graph_communication_messages_MessageEnvelope_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mthesis_concurrent_graph_communication_messages_VertexMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mthesis_concurrent_graph_communication_messages_VertexMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016Messages.proto\022/mthesis.concurrent_gra" +
      "ph.communication.messages\"\301\001\n\017MessageEnv" +
      "elope\022U\n\rVertexMessage\030\001 \001(\0132>.mthesis.c" +
      "oncurrent_graph.communication.messages.V" +
      "ertexMessage\022W\n\016ControlMessage\030\002 \001(\0132?.m" +
      "thesis.concurrent_graph.communication.me" +
      "ssages.ControlMessage\"m\n\rVertexMessage\022\023" +
      "\n\013SuperstepNo\030\001 \001(\005\022\020\n\010FromNode\030\002 \001(\005\022\022\n" +
      "\nFromVertex\030\003 \001(\005\022\020\n\010ToVertex\030\004 \001(\005\022\017\n\007C" +
      "ontent\030\005 \001(\005\"\256\001\n\016ControlMessage\022Q\n\004Type\030",
      "\001 \001(\0162C.mthesis.concurrent_graph.communi" +
      "cation.messages.ControlMessageType\022\023\n\013Su" +
      "perstepNo\030\002 \001(\005\022\020\n\010FromNode\030\003 \001(\005\022\020\n\010Con" +
      "tent1\030\004 \001(\005\022\020\n\010Content2\030\005 \001(\005*\253\001\n\022Contro" +
      "lMessageType\022\025\n\021Channel_Handshake\020\001\022\034\n\030W" +
      "orker_Superstep_Barrier\020\002\022\035\n\031Worker_Supe" +
      "rstep_Finished\020\003\022\023\n\017Worker_Finished\020\004\022\031\n" +
      "\025Master_Next_Superstep\020\005\022\021\n\rMaster_Finis" +
      "h\020\006B2\n&mthesis.concurrent_graph.communic" +
      "ationB\010Messages"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_mthesis_concurrent_graph_communication_messages_MessageEnvelope_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_mthesis_concurrent_graph_communication_messages_MessageEnvelope_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mthesis_concurrent_graph_communication_messages_MessageEnvelope_descriptor,
              new java.lang.String[] { "VertexMessage", "ControlMessage", });
          internal_static_mthesis_concurrent_graph_communication_messages_VertexMessage_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_mthesis_concurrent_graph_communication_messages_VertexMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mthesis_concurrent_graph_communication_messages_VertexMessage_descriptor,
              new java.lang.String[] { "SuperstepNo", "FromNode", "FromVertex", "ToVertex", "Content", });
          internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_descriptor,
              new java.lang.String[] { "Type", "SuperstepNo", "FromNode", "Content1", "Content2", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
