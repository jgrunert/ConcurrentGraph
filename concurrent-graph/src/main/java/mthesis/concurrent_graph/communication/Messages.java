// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Messages.proto

package mthesis.concurrent_graph.communication;

public final class Messages {
  private Messages() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code mthesis.concurrent_graph.communication.messages.ControlMessageType}
   */
  public enum ControlMessageType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Handshake at channel startup
     * </pre>
     *
     * <code>Channel_Handshake = 1;</code>
     */
    Channel_Handshake(1),
    /**
     * <pre>
     * Message from worker to master when finished initializing and ready now
     * </pre>
     *
     * <code>Worker_Initialized = 2;</code>
     */
    Worker_Initialized(2),
    /**
     * <pre>
     * Message from workers to workers to signal query superstep barrier
     * </pre>
     *
     * <code>Worker_Query_Superstep_Barrier = 3;</code>
     */
    Worker_Query_Superstep_Barrier(3),
    /**
     * <pre>
     * Message from workers to signal master that a query superstep is finished, including barrier and message sort
     * </pre>
     *
     * <code>Worker_Query_Superstep_Finished = 4;</code>
     */
    Worker_Query_Superstep_Finished(4),
    /**
     * <pre>
     * Message from workers to signal master that a query is finished
     * </pre>
     *
     * <code>Worker_Query_Finished = 5;</code>
     */
    Worker_Query_Finished(5),
    /**
     * <pre>
     * Message from workers to other workers to signal barrier started
     * </pre>
     *
     * <code>Worker_Barrier_Started = 12;</code>
     */
    Worker_Barrier_Started(12),
    /**
     * <pre>
     * Message from workers to other workers to signal vertex sending/receivinf finished
     * </pre>
     *
     * <code>Worker_Barrier_Receive_Finished = 15;</code>
     */
    Worker_Barrier_Receive_Finished(15),
    /**
     * <pre>
     * Message from workers to other workers to signal barrier finished
     * </pre>
     *
     * <code>Worker_Barrier_Finished = 13;</code>
     */
    Worker_Barrier_Finished(13),
    /**
     * <pre>
     * Message from master to workers to initialize, assigning partition
     * </pre>
     *
     * <code>Master_Worker_Initialize = 6;</code>
     */
    Master_Worker_Initialize(6),
    /**
     * <pre>
     * Message from master to workers to start a query
     * </pre>
     *
     * <code>Master_Query_Start = 7;</code>
     */
    Master_Query_Start(7),
    /**
     * <pre>
     * Message to signal workers to start with next query superstep
     * </pre>
     *
     * <code>Master_Query_Next_Superstep = 8;</code>
     */
    Master_Query_Next_Superstep(8),
    /**
     * <pre>
     * Message to signal workers to finish a query, output and terminate
     * </pre>
     *
     * <code>Master_Query_Finished = 9;</code>
     */
    Master_Query_Finished(9),
    /**
     * <pre>
     * Message to signal the system to shutdown
     * </pre>
     *
     * <code>Master_Shutdown = 10;</code>
     */
    Master_Shutdown(10),
    /**
     * <pre>
     * Message to signal workers to make a system wide barrier to perform tasks
     * </pre>
     *
     * <code>Master_Start_Barrier = 11;</code>
     */
    Master_Start_Barrier(11),
    /**
     * <code>Worker_Query_Vertex_Chunks = 14;</code>
     */
    Worker_Query_Vertex_Chunks(14),
    ;

    /**
     * <pre>
     * Handshake at channel startup
     * </pre>
     *
     * <code>Channel_Handshake = 1;</code>
     */
    public static final int Channel_Handshake_VALUE = 1;
    /**
     * <pre>
     * Message from worker to master when finished initializing and ready now
     * </pre>
     *
     * <code>Worker_Initialized = 2;</code>
     */
    public static final int Worker_Initialized_VALUE = 2;
    /**
     * <pre>
     * Message from workers to workers to signal query superstep barrier
     * </pre>
     *
     * <code>Worker_Query_Superstep_Barrier = 3;</code>
     */
    public static final int Worker_Query_Superstep_Barrier_VALUE = 3;
    /**
     * <pre>
     * Message from workers to signal master that a query superstep is finished, including barrier and message sort
     * </pre>
     *
     * <code>Worker_Query_Superstep_Finished = 4;</code>
     */
    public static final int Worker_Query_Superstep_Finished_VALUE = 4;
    /**
     * <pre>
     * Message from workers to signal master that a query is finished
     * </pre>
     *
     * <code>Worker_Query_Finished = 5;</code>
     */
    public static final int Worker_Query_Finished_VALUE = 5;
    /**
     * <pre>
     * Message from workers to other workers to signal barrier started
     * </pre>
     *
     * <code>Worker_Barrier_Started = 12;</code>
     */
    public static final int Worker_Barrier_Started_VALUE = 12;
    /**
     * <pre>
     * Message from workers to other workers to signal vertex sending/receivinf finished
     * </pre>
     *
     * <code>Worker_Barrier_Receive_Finished = 15;</code>
     */
    public static final int Worker_Barrier_Receive_Finished_VALUE = 15;
    /**
     * <pre>
     * Message from workers to other workers to signal barrier finished
     * </pre>
     *
     * <code>Worker_Barrier_Finished = 13;</code>
     */
    public static final int Worker_Barrier_Finished_VALUE = 13;
    /**
     * <pre>
     * Message from master to workers to initialize, assigning partition
     * </pre>
     *
     * <code>Master_Worker_Initialize = 6;</code>
     */
    public static final int Master_Worker_Initialize_VALUE = 6;
    /**
     * <pre>
     * Message from master to workers to start a query
     * </pre>
     *
     * <code>Master_Query_Start = 7;</code>
     */
    public static final int Master_Query_Start_VALUE = 7;
    /**
     * <pre>
     * Message to signal workers to start with next query superstep
     * </pre>
     *
     * <code>Master_Query_Next_Superstep = 8;</code>
     */
    public static final int Master_Query_Next_Superstep_VALUE = 8;
    /**
     * <pre>
     * Message to signal workers to finish a query, output and terminate
     * </pre>
     *
     * <code>Master_Query_Finished = 9;</code>
     */
    public static final int Master_Query_Finished_VALUE = 9;
    /**
     * <pre>
     * Message to signal the system to shutdown
     * </pre>
     *
     * <code>Master_Shutdown = 10;</code>
     */
    public static final int Master_Shutdown_VALUE = 10;
    /**
     * <pre>
     * Message to signal workers to make a system wide barrier to perform tasks
     * </pre>
     *
     * <code>Master_Start_Barrier = 11;</code>
     */
    public static final int Master_Start_Barrier_VALUE = 11;
    /**
     * <code>Worker_Query_Vertex_Chunks = 14;</code>
     */
    public static final int Worker_Query_Vertex_Chunks_VALUE = 14;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ControlMessageType valueOf(int value) {
      return forNumber(value);
    }

    public static ControlMessageType forNumber(int value) {
      switch (value) {
        case 1: return Channel_Handshake;
        case 2: return Worker_Initialized;
        case 3: return Worker_Query_Superstep_Barrier;
        case 4: return Worker_Query_Superstep_Finished;
        case 5: return Worker_Query_Finished;
        case 12: return Worker_Barrier_Started;
        case 15: return Worker_Barrier_Receive_Finished;
        case 13: return Worker_Barrier_Finished;
        case 6: return Master_Worker_Initialize;
        case 7: return Master_Query_Start;
        case 8: return Master_Query_Next_Superstep;
        case 9: return Master_Query_Finished;
        case 10: return Master_Shutdown;
        case 11: return Master_Start_Barrier;
        case 14: return Worker_Query_Vertex_Chunks;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ControlMessageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ControlMessageType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ControlMessageType>() {
            public ControlMessageType findValueByNumber(int number) {
              return ControlMessageType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mthesis.concurrent_graph.communication.Messages.getDescriptor().getEnumTypes().get(0);
    }

    private static final ControlMessageType[] VALUES = values();

    public static ControlMessageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ControlMessageType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mthesis.concurrent_graph.communication.messages.ControlMessageType)
  }

  /**
   * Protobuf enum {@code mthesis.concurrent_graph.communication.messages.WorkerQueryExecutionMode}
   */
  public enum WorkerQueryExecutionMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Normal non-local superstep execution
     * </pre>
     *
     * <code>NonLocal = 1;</code>
     */
    NonLocal(1),
    /**
     * <pre>
     * Non-local superstep execution with skipping superstep on this machine
     * </pre>
     *
     * <code>NonLocalSkip = 2;</code>
     */
    NonLocalSkip(2),
    /**
     * <pre>
     * Run in local mode on this machine
     * </pre>
     *
     * <code>LocalOnThis = 3;</code>
     */
    LocalOnThis(3),
    /**
     * <pre>
     * Query runs on other machine in localmode
     * </pre>
     *
     * <code>LocalOnOther = 4;</code>
     */
    LocalOnOther(4),
    ;

    /**
     * <pre>
     * Normal non-local superstep execution
     * </pre>
     *
     * <code>NonLocal = 1;</code>
     */
    public static final int NonLocal_VALUE = 1;
    /**
     * <pre>
     * Non-local superstep execution with skipping superstep on this machine
     * </pre>
     *
     * <code>NonLocalSkip = 2;</code>
     */
    public static final int NonLocalSkip_VALUE = 2;
    /**
     * <pre>
     * Run in local mode on this machine
     * </pre>
     *
     * <code>LocalOnThis = 3;</code>
     */
    public static final int LocalOnThis_VALUE = 3;
    /**
     * <pre>
     * Query runs on other machine in localmode
     * </pre>
     *
     * <code>LocalOnOther = 4;</code>
     */
    public static final int LocalOnOther_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static WorkerQueryExecutionMode valueOf(int value) {
      return forNumber(value);
    }

    public static WorkerQueryExecutionMode forNumber(int value) {
      switch (value) {
        case 1: return NonLocal;
        case 2: return NonLocalSkip;
        case 3: return LocalOnThis;
        case 4: return LocalOnOther;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<WorkerQueryExecutionMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        WorkerQueryExecutionMode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<WorkerQueryExecutionMode>() {
            public WorkerQueryExecutionMode findValueByNumber(int number) {
              return WorkerQueryExecutionMode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mthesis.concurrent_graph.communication.Messages.getDescriptor().getEnumTypes().get(1);
    }

    private static final WorkerQueryExecutionMode[] VALUES = values();

    public static WorkerQueryExecutionMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private WorkerQueryExecutionMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mthesis.concurrent_graph.communication.messages.WorkerQueryExecutionMode)
  }

  public interface MessageEnvelopeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mthesis.concurrent_graph.communication.messages.MessageEnvelope)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage ControlMessage = 1;</code>
     */
    boolean hasControlMessage();
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage ControlMessage = 1;</code>
     */
    mthesis.concurrent_graph.communication.Messages.ControlMessage getControlMessage();
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage ControlMessage = 1;</code>
     */
    mthesis.concurrent_graph.communication.Messages.ControlMessageOrBuilder getControlMessageOrBuilder();
  }
  /**
   * Protobuf type {@code mthesis.concurrent_graph.communication.messages.MessageEnvelope}
   */
  public  static final class MessageEnvelope extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:mthesis.concurrent_graph.communication.messages.MessageEnvelope)
      MessageEnvelopeOrBuilder {
    // Use MessageEnvelope.newBuilder() to construct.
    private MessageEnvelope(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MessageEnvelope() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MessageEnvelope(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              mthesis.concurrent_graph.communication.Messages.ControlMessage.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = controlMessage_.toBuilder();
              }
              controlMessage_ = input.readMessage(mthesis.concurrent_graph.communication.Messages.ControlMessage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(controlMessage_);
                controlMessage_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_MessageEnvelope_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_MessageEnvelope_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              mthesis.concurrent_graph.communication.Messages.MessageEnvelope.class, mthesis.concurrent_graph.communication.Messages.MessageEnvelope.Builder.class);
    }

    private int bitField0_;
    public static final int CONTROLMESSAGE_FIELD_NUMBER = 1;
    private mthesis.concurrent_graph.communication.Messages.ControlMessage controlMessage_;
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage ControlMessage = 1;</code>
     */
    public boolean hasControlMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage ControlMessage = 1;</code>
     */
    public mthesis.concurrent_graph.communication.Messages.ControlMessage getControlMessage() {
      return controlMessage_ == null ? mthesis.concurrent_graph.communication.Messages.ControlMessage.getDefaultInstance() : controlMessage_;
    }
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage ControlMessage = 1;</code>
     */
    public mthesis.concurrent_graph.communication.Messages.ControlMessageOrBuilder getControlMessageOrBuilder() {
      return controlMessage_ == null ? mthesis.concurrent_graph.communication.Messages.ControlMessage.getDefaultInstance() : controlMessage_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getControlMessage());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getControlMessage());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof mthesis.concurrent_graph.communication.Messages.MessageEnvelope)) {
        return super.equals(obj);
      }
      mthesis.concurrent_graph.communication.Messages.MessageEnvelope other = (mthesis.concurrent_graph.communication.Messages.MessageEnvelope) obj;

      boolean result = true;
      result = result && (hasControlMessage() == other.hasControlMessage());
      if (hasControlMessage()) {
        result = result && getControlMessage()
            .equals(other.getControlMessage());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasControlMessage()) {
        hash = (37 * hash) + CONTROLMESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getControlMessage().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static mthesis.concurrent_graph.communication.Messages.MessageEnvelope parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mthesis.concurrent_graph.communication.Messages.MessageEnvelope parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mthesis.concurrent_graph.communication.Messages.MessageEnvelope parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mthesis.concurrent_graph.communication.Messages.MessageEnvelope parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mthesis.concurrent_graph.communication.Messages.MessageEnvelope parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static mthesis.concurrent_graph.communication.Messages.MessageEnvelope parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static mthesis.concurrent_graph.communication.Messages.MessageEnvelope parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static mthesis.concurrent_graph.communication.Messages.MessageEnvelope parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static mthesis.concurrent_graph.communication.Messages.MessageEnvelope parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static mthesis.concurrent_graph.communication.Messages.MessageEnvelope parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mthesis.concurrent_graph.communication.Messages.MessageEnvelope prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mthesis.concurrent_graph.communication.messages.MessageEnvelope}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:mthesis.concurrent_graph.communication.messages.MessageEnvelope)
        mthesis.concurrent_graph.communication.Messages.MessageEnvelopeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_MessageEnvelope_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_MessageEnvelope_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mthesis.concurrent_graph.communication.Messages.MessageEnvelope.class, mthesis.concurrent_graph.communication.Messages.MessageEnvelope.Builder.class);
      }

      // Construct using mthesis.concurrent_graph.communication.Messages.MessageEnvelope.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getControlMessageFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (controlMessageBuilder_ == null) {
          controlMessage_ = null;
        } else {
          controlMessageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_MessageEnvelope_descriptor;
      }

      public mthesis.concurrent_graph.communication.Messages.MessageEnvelope getDefaultInstanceForType() {
        return mthesis.concurrent_graph.communication.Messages.MessageEnvelope.getDefaultInstance();
      }

      public mthesis.concurrent_graph.communication.Messages.MessageEnvelope build() {
        mthesis.concurrent_graph.communication.Messages.MessageEnvelope result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public mthesis.concurrent_graph.communication.Messages.MessageEnvelope buildPartial() {
        mthesis.concurrent_graph.communication.Messages.MessageEnvelope result = new mthesis.concurrent_graph.communication.Messages.MessageEnvelope(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (controlMessageBuilder_ == null) {
          result.controlMessage_ = controlMessage_;
        } else {
          result.controlMessage_ = controlMessageBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mthesis.concurrent_graph.communication.Messages.MessageEnvelope) {
          return mergeFrom((mthesis.concurrent_graph.communication.Messages.MessageEnvelope)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(mthesis.concurrent_graph.communication.Messages.MessageEnvelope other) {
        if (other == mthesis.concurrent_graph.communication.Messages.MessageEnvelope.getDefaultInstance()) return this;
        if (other.hasControlMessage()) {
          mergeControlMessage(other.getControlMessage());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        mthesis.concurrent_graph.communication.Messages.MessageEnvelope parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mthesis.concurrent_graph.communication.Messages.MessageEnvelope) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private mthesis.concurrent_graph.communication.Messages.ControlMessage controlMessage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          mthesis.concurrent_graph.communication.Messages.ControlMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessageOrBuilder> controlMessageBuilder_;
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage ControlMessage = 1;</code>
       */
      public boolean hasControlMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage ControlMessage = 1;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessage getControlMessage() {
        if (controlMessageBuilder_ == null) {
          return controlMessage_ == null ? mthesis.concurrent_graph.communication.Messages.ControlMessage.getDefaultInstance() : controlMessage_;
        } else {
          return controlMessageBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage ControlMessage = 1;</code>
       */
      public Builder setControlMessage(mthesis.concurrent_graph.communication.Messages.ControlMessage value) {
        if (controlMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          controlMessage_ = value;
          onChanged();
        } else {
          controlMessageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage ControlMessage = 1;</code>
       */
      public Builder setControlMessage(
          mthesis.concurrent_graph.communication.Messages.ControlMessage.Builder builderForValue) {
        if (controlMessageBuilder_ == null) {
          controlMessage_ = builderForValue.build();
          onChanged();
        } else {
          controlMessageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage ControlMessage = 1;</code>
       */
      public Builder mergeControlMessage(mthesis.concurrent_graph.communication.Messages.ControlMessage value) {
        if (controlMessageBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              controlMessage_ != null &&
              controlMessage_ != mthesis.concurrent_graph.communication.Messages.ControlMessage.getDefaultInstance()) {
            controlMessage_ =
              mthesis.concurrent_graph.communication.Messages.ControlMessage.newBuilder(controlMessage_).mergeFrom(value).buildPartial();
          } else {
            controlMessage_ = value;
          }
          onChanged();
        } else {
          controlMessageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage ControlMessage = 1;</code>
       */
      public Builder clearControlMessage() {
        if (controlMessageBuilder_ == null) {
          controlMessage_ = null;
          onChanged();
        } else {
          controlMessageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage ControlMessage = 1;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessage.Builder getControlMessageBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getControlMessageFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage ControlMessage = 1;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessageOrBuilder getControlMessageOrBuilder() {
        if (controlMessageBuilder_ != null) {
          return controlMessageBuilder_.getMessageOrBuilder();
        } else {
          return controlMessage_ == null ?
              mthesis.concurrent_graph.communication.Messages.ControlMessage.getDefaultInstance() : controlMessage_;
        }
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage ControlMessage = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          mthesis.concurrent_graph.communication.Messages.ControlMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessageOrBuilder> 
          getControlMessageFieldBuilder() {
        if (controlMessageBuilder_ == null) {
          controlMessageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              mthesis.concurrent_graph.communication.Messages.ControlMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessageOrBuilder>(
                  getControlMessage(),
                  getParentForChildren(),
                  isClean());
          controlMessage_ = null;
        }
        return controlMessageBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:mthesis.concurrent_graph.communication.messages.MessageEnvelope)
    }

    // @@protoc_insertion_point(class_scope:mthesis.concurrent_graph.communication.messages.MessageEnvelope)
    private static final mthesis.concurrent_graph.communication.Messages.MessageEnvelope DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new mthesis.concurrent_graph.communication.Messages.MessageEnvelope();
    }

    public static mthesis.concurrent_graph.communication.Messages.MessageEnvelope getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<MessageEnvelope>
        PARSER = new com.google.protobuf.AbstractParser<MessageEnvelope>() {
      public MessageEnvelope parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new MessageEnvelope(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MessageEnvelope> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MessageEnvelope> getParserForType() {
      return PARSER;
    }

    public mthesis.concurrent_graph.communication.Messages.MessageEnvelope getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ControlMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mthesis.concurrent_graph.communication.messages.ControlMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessageType Type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessageType Type = 1;</code>
     */
    mthesis.concurrent_graph.communication.Messages.ControlMessageType getType();

    /**
     * <code>optional int32 SuperstepNo = 2;</code>
     */
    boolean hasSuperstepNo();
    /**
     * <code>optional int32 SuperstepNo = 2;</code>
     */
    int getSuperstepNo();

    /**
     * <code>optional int32 SrcMachine = 3;</code>
     */
    boolean hasSrcMachine();
    /**
     * <code>optional int32 SrcMachine = 3;</code>
     */
    int getSrcMachine();

    /**
     * <pre>
     *optional WorkerStatsMessage WorkerStats = 4;
     * </pre>
     *
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.AssignPartitionsMessage AssignPartitions = 5;</code>
     */
    boolean hasAssignPartitions();
    /**
     * <pre>
     *optional WorkerStatsMessage WorkerStats = 4;
     * </pre>
     *
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.AssignPartitionsMessage AssignPartitions = 5;</code>
     */
    mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage getAssignPartitions();
    /**
     * <pre>
     *optional WorkerStatsMessage WorkerStats = 4;
     * </pre>
     *
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.AssignPartitionsMessage AssignPartitions = 5;</code>
     */
    mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessageOrBuilder getAssignPartitionsOrBuilder();

    /**
     * <code>optional bytes QueryValues = 6;</code>
     */
    boolean hasQueryValues();
    /**
     * <code>optional bytes QueryValues = 6;</code>
     */
    com.google.protobuf.ByteString getQueryValues();

    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerInitializedMessage WorkerInitialized = 7;</code>
     */
    boolean hasWorkerInitialized();
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerInitializedMessage WorkerInitialized = 7;</code>
     */
    mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage getWorkerInitialized();
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerInitializedMessage WorkerInitialized = 7;</code>
     */
    mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessageOrBuilder getWorkerInitializedOrBuilder();

    /**
     * <pre>
     *optional QueriesIntersectionsMessage QueriesIntersections = 8;
     *optional SendQueryVerticesMessage SendQueryVertices = 9;
     *optional ReceiveQueryVerticesMessage ReceiveQueryVertices = 10;
     * </pre>
     *
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage StartBarrier = 11;</code>
     */
    boolean hasStartBarrier();
    /**
     * <pre>
     *optional QueriesIntersectionsMessage QueriesIntersections = 8;
     *optional SendQueryVerticesMessage SendQueryVertices = 9;
     *optional ReceiveQueryVerticesMessage ReceiveQueryVertices = 10;
     * </pre>
     *
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage StartBarrier = 11;</code>
     */
    mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage getStartBarrier();
    /**
     * <pre>
     *optional QueriesIntersectionsMessage QueriesIntersections = 8;
     *optional SendQueryVerticesMessage SendQueryVertices = 9;
     *optional ReceiveQueryVerticesMessage ReceiveQueryVertices = 10;
     * </pre>
     *
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage StartBarrier = 11;</code>
     */
    mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessageOrBuilder getStartBarrierOrBuilder();

    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage WorkerStats = 12;</code>
     */
    boolean hasWorkerStats();
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage WorkerStats = 12;</code>
     */
    mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage getWorkerStats();
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage WorkerStats = 12;</code>
     */
    mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessageOrBuilder getWorkerStatsOrBuilder();

    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.StartSuperstepMessage StartSuperstep = 13;</code>
     */
    boolean hasStartSuperstep();
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.StartSuperstepMessage StartSuperstep = 13;</code>
     */
    mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage getStartSuperstep();
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.StartSuperstepMessage StartSuperstep = 13;</code>
     */
    mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessageOrBuilder getStartSuperstepOrBuilder();

    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMessage QueryVertexChunks = 14;</code>
     */
    boolean hasQueryVertexChunks();
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMessage QueryVertexChunks = 14;</code>
     */
    mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage getQueryVertexChunks();
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMessage QueryVertexChunks = 14;</code>
     */
    mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessageOrBuilder getQueryVertexChunksOrBuilder();

    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.WorkerQueryExecutionMode SuperstepQueryExecution = 15;</code>
     */
    boolean hasSuperstepQueryExecution();
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.WorkerQueryExecutionMode SuperstepQueryExecution = 15;</code>
     */
    mthesis.concurrent_graph.communication.Messages.WorkerQueryExecutionMode getSuperstepQueryExecution();
  }
  /**
   * Protobuf type {@code mthesis.concurrent_graph.communication.messages.ControlMessage}
   */
  public  static final class ControlMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:mthesis.concurrent_graph.communication.messages.ControlMessage)
      ControlMessageOrBuilder {
    // Use ControlMessage.newBuilder() to construct.
    private ControlMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ControlMessage() {
      type_ = 1;
      superstepNo_ = 0;
      srcMachine_ = 0;
      queryValues_ = com.google.protobuf.ByteString.EMPTY;
      superstepQueryExecution_ = 1;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ControlMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              mthesis.concurrent_graph.communication.Messages.ControlMessageType value = mthesis.concurrent_graph.communication.Messages.ControlMessageType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = rawValue;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              superstepNo_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              srcMachine_ = input.readInt32();
              break;
            }
            case 42: {
              mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = assignPartitions_.toBuilder();
              }
              assignPartitions_ = input.readMessage(mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(assignPartitions_);
                assignPartitions_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 50: {
              bitField0_ |= 0x00000010;
              queryValues_ = input.readBytes();
              break;
            }
            case 58: {
              mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = workerInitialized_.toBuilder();
              }
              workerInitialized_ = input.readMessage(mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(workerInitialized_);
                workerInitialized_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 90: {
              mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = startBarrier_.toBuilder();
              }
              startBarrier_ = input.readMessage(mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(startBarrier_);
                startBarrier_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 98: {
              mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = workerStats_.toBuilder();
              }
              workerStats_ = input.readMessage(mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(workerStats_);
                workerStats_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 106: {
              mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = startSuperstep_.toBuilder();
              }
              startSuperstep_ = input.readMessage(mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(startSuperstep_);
                startSuperstep_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 114: {
              mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                subBuilder = queryVertexChunks_.toBuilder();
              }
              queryVertexChunks_ = input.readMessage(mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(queryVertexChunks_);
                queryVertexChunks_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
            case 120: {
              int rawValue = input.readEnum();
              mthesis.concurrent_graph.communication.Messages.WorkerQueryExecutionMode value = mthesis.concurrent_graph.communication.Messages.WorkerQueryExecutionMode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(15, rawValue);
              } else {
                bitField0_ |= 0x00000400;
                superstepQueryExecution_ = rawValue;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              mthesis.concurrent_graph.communication.Messages.ControlMessage.class, mthesis.concurrent_graph.communication.Messages.ControlMessage.Builder.class);
    }

    public interface AssignPartitionsMessageOrBuilder extends
        // @@protoc_insertion_point(interface_extends:mthesis.concurrent_graph.communication.messages.ControlMessage.AssignPartitionsMessage)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int64 MasterStartTime = 1;</code>
       */
      boolean hasMasterStartTime();
      /**
       * <code>optional int64 MasterStartTime = 1;</code>
       */
      long getMasterStartTime();

      /**
       * <code>repeated string PartitionFiles = 2;</code>
       */
      java.util.List<java.lang.String>
          getPartitionFilesList();
      /**
       * <code>repeated string PartitionFiles = 2;</code>
       */
      int getPartitionFilesCount();
      /**
       * <code>repeated string PartitionFiles = 2;</code>
       */
      java.lang.String getPartitionFiles(int index);
      /**
       * <code>repeated string PartitionFiles = 2;</code>
       */
      com.google.protobuf.ByteString
          getPartitionFilesBytes(int index);
    }
    /**
     * Protobuf type {@code mthesis.concurrent_graph.communication.messages.ControlMessage.AssignPartitionsMessage}
     */
    public  static final class AssignPartitionsMessage extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:mthesis.concurrent_graph.communication.messages.ControlMessage.AssignPartitionsMessage)
        AssignPartitionsMessageOrBuilder {
      // Use AssignPartitionsMessage.newBuilder() to construct.
      private AssignPartitionsMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private AssignPartitionsMessage() {
        masterStartTime_ = 0L;
        partitionFiles_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private AssignPartitionsMessage(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                masterStartTime_ = input.readInt64();
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  partitionFiles_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000002;
                }
                partitionFiles_.add(bs);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            partitionFiles_ = partitionFiles_.getUnmodifiableView();
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_AssignPartitionsMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_AssignPartitionsMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage.class, mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage.Builder.class);
      }

      private int bitField0_;
      public static final int MASTERSTARTTIME_FIELD_NUMBER = 1;
      private long masterStartTime_;
      /**
       * <code>optional int64 MasterStartTime = 1;</code>
       */
      public boolean hasMasterStartTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 MasterStartTime = 1;</code>
       */
      public long getMasterStartTime() {
        return masterStartTime_;
      }

      public static final int PARTITIONFILES_FIELD_NUMBER = 2;
      private com.google.protobuf.LazyStringList partitionFiles_;
      /**
       * <code>repeated string PartitionFiles = 2;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getPartitionFilesList() {
        return partitionFiles_;
      }
      /**
       * <code>repeated string PartitionFiles = 2;</code>
       */
      public int getPartitionFilesCount() {
        return partitionFiles_.size();
      }
      /**
       * <code>repeated string PartitionFiles = 2;</code>
       */
      public java.lang.String getPartitionFiles(int index) {
        return partitionFiles_.get(index);
      }
      /**
       * <code>repeated string PartitionFiles = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPartitionFilesBytes(int index) {
        return partitionFiles_.getByteString(index);
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt64(1, masterStartTime_);
        }
        for (int i = 0; i < partitionFiles_.size(); i++) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, partitionFiles_.getRaw(i));
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, masterStartTime_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < partitionFiles_.size(); i++) {
            dataSize += computeStringSizeNoTag(partitionFiles_.getRaw(i));
          }
          size += dataSize;
          size += 1 * getPartitionFilesList().size();
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage)) {
          return super.equals(obj);
        }
        mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage other = (mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage) obj;

        boolean result = true;
        result = result && (hasMasterStartTime() == other.hasMasterStartTime());
        if (hasMasterStartTime()) {
          result = result && (getMasterStartTime()
              == other.getMasterStartTime());
        }
        result = result && getPartitionFilesList()
            .equals(other.getPartitionFilesList());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        if (hasMasterStartTime()) {
          hash = (37 * hash) + MASTERSTARTTIME_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getMasterStartTime());
        }
        if (getPartitionFilesCount() > 0) {
          hash = (37 * hash) + PARTITIONFILES_FIELD_NUMBER;
          hash = (53 * hash) + getPartitionFilesList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code mthesis.concurrent_graph.communication.messages.ControlMessage.AssignPartitionsMessage}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:mthesis.concurrent_graph.communication.messages.ControlMessage.AssignPartitionsMessage)
          mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessageOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_AssignPartitionsMessage_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_AssignPartitionsMessage_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage.class, mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage.Builder.class);
        }

        // Construct using mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          masterStartTime_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          partitionFiles_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_AssignPartitionsMessage_descriptor;
        }

        public mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage getDefaultInstanceForType() {
          return mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage.getDefaultInstance();
        }

        public mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage build() {
          mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage buildPartial() {
          mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage result = new mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.masterStartTime_ = masterStartTime_;
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            partitionFiles_ = partitionFiles_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.partitionFiles_ = partitionFiles_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage) {
            return mergeFrom((mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage other) {
          if (other == mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage.getDefaultInstance()) return this;
          if (other.hasMasterStartTime()) {
            setMasterStartTime(other.getMasterStartTime());
          }
          if (!other.partitionFiles_.isEmpty()) {
            if (partitionFiles_.isEmpty()) {
              partitionFiles_ = other.partitionFiles_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePartitionFilesIsMutable();
              partitionFiles_.addAll(other.partitionFiles_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long masterStartTime_ ;
        /**
         * <code>optional int64 MasterStartTime = 1;</code>
         */
        public boolean hasMasterStartTime() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int64 MasterStartTime = 1;</code>
         */
        public long getMasterStartTime() {
          return masterStartTime_;
        }
        /**
         * <code>optional int64 MasterStartTime = 1;</code>
         */
        public Builder setMasterStartTime(long value) {
          bitField0_ |= 0x00000001;
          masterStartTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 MasterStartTime = 1;</code>
         */
        public Builder clearMasterStartTime() {
          bitField0_ = (bitField0_ & ~0x00000001);
          masterStartTime_ = 0L;
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList partitionFiles_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensurePartitionFilesIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            partitionFiles_ = new com.google.protobuf.LazyStringArrayList(partitionFiles_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <code>repeated string PartitionFiles = 2;</code>
         */
        public com.google.protobuf.ProtocolStringList
            getPartitionFilesList() {
          return partitionFiles_.getUnmodifiableView();
        }
        /**
         * <code>repeated string PartitionFiles = 2;</code>
         */
        public int getPartitionFilesCount() {
          return partitionFiles_.size();
        }
        /**
         * <code>repeated string PartitionFiles = 2;</code>
         */
        public java.lang.String getPartitionFiles(int index) {
          return partitionFiles_.get(index);
        }
        /**
         * <code>repeated string PartitionFiles = 2;</code>
         */
        public com.google.protobuf.ByteString
            getPartitionFilesBytes(int index) {
          return partitionFiles_.getByteString(index);
        }
        /**
         * <code>repeated string PartitionFiles = 2;</code>
         */
        public Builder setPartitionFiles(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensurePartitionFilesIsMutable();
          partitionFiles_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string PartitionFiles = 2;</code>
         */
        public Builder addPartitionFiles(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensurePartitionFilesIsMutable();
          partitionFiles_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string PartitionFiles = 2;</code>
         */
        public Builder addAllPartitionFiles(
            java.lang.Iterable<java.lang.String> values) {
          ensurePartitionFilesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, partitionFiles_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string PartitionFiles = 2;</code>
         */
        public Builder clearPartitionFiles() {
          partitionFiles_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string PartitionFiles = 2;</code>
         */
        public Builder addPartitionFilesBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensurePartitionFilesIsMutable();
          partitionFiles_.add(value);
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:mthesis.concurrent_graph.communication.messages.ControlMessage.AssignPartitionsMessage)
      }

      // @@protoc_insertion_point(class_scope:mthesis.concurrent_graph.communication.messages.ControlMessage.AssignPartitionsMessage)
      private static final mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage();
      }

      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<AssignPartitionsMessage>
          PARSER = new com.google.protobuf.AbstractParser<AssignPartitionsMessage>() {
        public AssignPartitionsMessage parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new AssignPartitionsMessage(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<AssignPartitionsMessage> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<AssignPartitionsMessage> getParserForType() {
        return PARSER;
      }

      public mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface WorkerInitializedMessageOrBuilder extends
        // @@protoc_insertion_point(interface_extends:mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerInitializedMessage)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 VertexCount = 1;</code>
       */
      boolean hasVertexCount();
      /**
       * <code>optional int32 VertexCount = 1;</code>
       */
      int getVertexCount();
    }
    /**
     * Protobuf type {@code mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerInitializedMessage}
     */
    public  static final class WorkerInitializedMessage extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerInitializedMessage)
        WorkerInitializedMessageOrBuilder {
      // Use WorkerInitializedMessage.newBuilder() to construct.
      private WorkerInitializedMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private WorkerInitializedMessage() {
        vertexCount_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private WorkerInitializedMessage(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                vertexCount_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_WorkerInitializedMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_WorkerInitializedMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage.class, mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage.Builder.class);
      }

      private int bitField0_;
      public static final int VERTEXCOUNT_FIELD_NUMBER = 1;
      private int vertexCount_;
      /**
       * <code>optional int32 VertexCount = 1;</code>
       */
      public boolean hasVertexCount() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 VertexCount = 1;</code>
       */
      public int getVertexCount() {
        return vertexCount_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, vertexCount_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, vertexCount_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage)) {
          return super.equals(obj);
        }
        mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage other = (mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage) obj;

        boolean result = true;
        result = result && (hasVertexCount() == other.hasVertexCount());
        if (hasVertexCount()) {
          result = result && (getVertexCount()
              == other.getVertexCount());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        if (hasVertexCount()) {
          hash = (37 * hash) + VERTEXCOUNT_FIELD_NUMBER;
          hash = (53 * hash) + getVertexCount();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerInitializedMessage}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerInitializedMessage)
          mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessageOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_WorkerInitializedMessage_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_WorkerInitializedMessage_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage.class, mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage.Builder.class);
        }

        // Construct using mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          vertexCount_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_WorkerInitializedMessage_descriptor;
        }

        public mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage getDefaultInstanceForType() {
          return mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage.getDefaultInstance();
        }

        public mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage build() {
          mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage buildPartial() {
          mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage result = new mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.vertexCount_ = vertexCount_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage) {
            return mergeFrom((mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage other) {
          if (other == mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage.getDefaultInstance()) return this;
          if (other.hasVertexCount()) {
            setVertexCount(other.getVertexCount());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int vertexCount_ ;
        /**
         * <code>optional int32 VertexCount = 1;</code>
         */
        public boolean hasVertexCount() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 VertexCount = 1;</code>
         */
        public int getVertexCount() {
          return vertexCount_;
        }
        /**
         * <code>optional int32 VertexCount = 1;</code>
         */
        public Builder setVertexCount(int value) {
          bitField0_ |= 0x00000001;
          vertexCount_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 VertexCount = 1;</code>
         */
        public Builder clearVertexCount() {
          bitField0_ = (bitField0_ & ~0x00000001);
          vertexCount_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerInitializedMessage)
      }

      // @@protoc_insertion_point(class_scope:mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerInitializedMessage)
      private static final mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage();
      }

      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<WorkerInitializedMessage>
          PARSER = new com.google.protobuf.AbstractParser<WorkerInitializedMessage>() {
        public WorkerInitializedMessage parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new WorkerInitializedMessage(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<WorkerInitializedMessage> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<WorkerInitializedMessage> getParserForType() {
        return PARSER;
      }

      public mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface StartSuperstepMessageOrBuilder extends
        // @@protoc_insertion_point(interface_extends:mthesis.concurrent_graph.communication.messages.ControlMessage.StartSuperstepMessage)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.WorkerQueryExecutionMode WorkerQueryExecution = 1;</code>
       */
      boolean hasWorkerQueryExecution();
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.WorkerQueryExecutionMode WorkerQueryExecution = 1;</code>
       */
      mthesis.concurrent_graph.communication.Messages.WorkerQueryExecutionMode getWorkerQueryExecution();

      /**
       * <code>repeated int32 WorkersWaitFor = 2;</code>
       */
      java.util.List<java.lang.Integer> getWorkersWaitForList();
      /**
       * <code>repeated int32 WorkersWaitFor = 2;</code>
       */
      int getWorkersWaitForCount();
      /**
       * <code>repeated int32 WorkersWaitFor = 2;</code>
       */
      int getWorkersWaitFor(int index);
    }
    /**
     * Protobuf type {@code mthesis.concurrent_graph.communication.messages.ControlMessage.StartSuperstepMessage}
     */
    public  static final class StartSuperstepMessage extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:mthesis.concurrent_graph.communication.messages.ControlMessage.StartSuperstepMessage)
        StartSuperstepMessageOrBuilder {
      // Use StartSuperstepMessage.newBuilder() to construct.
      private StartSuperstepMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private StartSuperstepMessage() {
        workerQueryExecution_ = 1;
        workersWaitFor_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private StartSuperstepMessage(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                mthesis.concurrent_graph.communication.Messages.WorkerQueryExecutionMode value = mthesis.concurrent_graph.communication.Messages.WorkerQueryExecutionMode.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  workerQueryExecution_ = rawValue;
                }
                break;
              }
              case 16: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  workersWaitFor_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000002;
                }
                workersWaitFor_.add(input.readInt32());
                break;
              }
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                  workersWaitFor_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000002;
                }
                while (input.getBytesUntilLimit() > 0) {
                  workersWaitFor_.add(input.readInt32());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            workersWaitFor_ = java.util.Collections.unmodifiableList(workersWaitFor_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartSuperstepMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartSuperstepMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage.class, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage.Builder.class);
      }

      private int bitField0_;
      public static final int WORKERQUERYEXECUTION_FIELD_NUMBER = 1;
      private int workerQueryExecution_;
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.WorkerQueryExecutionMode WorkerQueryExecution = 1;</code>
       */
      public boolean hasWorkerQueryExecution() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.WorkerQueryExecutionMode WorkerQueryExecution = 1;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.WorkerQueryExecutionMode getWorkerQueryExecution() {
        mthesis.concurrent_graph.communication.Messages.WorkerQueryExecutionMode result = mthesis.concurrent_graph.communication.Messages.WorkerQueryExecutionMode.valueOf(workerQueryExecution_);
        return result == null ? mthesis.concurrent_graph.communication.Messages.WorkerQueryExecutionMode.NonLocal : result;
      }

      public static final int WORKERSWAITFOR_FIELD_NUMBER = 2;
      private java.util.List<java.lang.Integer> workersWaitFor_;
      /**
       * <code>repeated int32 WorkersWaitFor = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getWorkersWaitForList() {
        return workersWaitFor_;
      }
      /**
       * <code>repeated int32 WorkersWaitFor = 2;</code>
       */
      public int getWorkersWaitForCount() {
        return workersWaitFor_.size();
      }
      /**
       * <code>repeated int32 WorkersWaitFor = 2;</code>
       */
      public int getWorkersWaitFor(int index) {
        return workersWaitFor_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, workerQueryExecution_);
        }
        for (int i = 0; i < workersWaitFor_.size(); i++) {
          output.writeInt32(2, workersWaitFor_.get(i));
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, workerQueryExecution_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < workersWaitFor_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(workersWaitFor_.get(i));
          }
          size += dataSize;
          size += 1 * getWorkersWaitForList().size();
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage)) {
          return super.equals(obj);
        }
        mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage other = (mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage) obj;

        boolean result = true;
        result = result && (hasWorkerQueryExecution() == other.hasWorkerQueryExecution());
        if (hasWorkerQueryExecution()) {
          result = result && workerQueryExecution_ == other.workerQueryExecution_;
        }
        result = result && getWorkersWaitForList()
            .equals(other.getWorkersWaitForList());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        if (hasWorkerQueryExecution()) {
          hash = (37 * hash) + WORKERQUERYEXECUTION_FIELD_NUMBER;
          hash = (53 * hash) + workerQueryExecution_;
        }
        if (getWorkersWaitForCount() > 0) {
          hash = (37 * hash) + WORKERSWAITFOR_FIELD_NUMBER;
          hash = (53 * hash) + getWorkersWaitForList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code mthesis.concurrent_graph.communication.messages.ControlMessage.StartSuperstepMessage}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:mthesis.concurrent_graph.communication.messages.ControlMessage.StartSuperstepMessage)
          mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessageOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartSuperstepMessage_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartSuperstepMessage_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage.class, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage.Builder.class);
        }

        // Construct using mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          workerQueryExecution_ = 1;
          bitField0_ = (bitField0_ & ~0x00000001);
          workersWaitFor_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartSuperstepMessage_descriptor;
        }

        public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage getDefaultInstanceForType() {
          return mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage.getDefaultInstance();
        }

        public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage build() {
          mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage buildPartial() {
          mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage result = new mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.workerQueryExecution_ = workerQueryExecution_;
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            workersWaitFor_ = java.util.Collections.unmodifiableList(workersWaitFor_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.workersWaitFor_ = workersWaitFor_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage) {
            return mergeFrom((mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage other) {
          if (other == mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage.getDefaultInstance()) return this;
          if (other.hasWorkerQueryExecution()) {
            setWorkerQueryExecution(other.getWorkerQueryExecution());
          }
          if (!other.workersWaitFor_.isEmpty()) {
            if (workersWaitFor_.isEmpty()) {
              workersWaitFor_ = other.workersWaitFor_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureWorkersWaitForIsMutable();
              workersWaitFor_.addAll(other.workersWaitFor_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int workerQueryExecution_ = 1;
        /**
         * <code>optional .mthesis.concurrent_graph.communication.messages.WorkerQueryExecutionMode WorkerQueryExecution = 1;</code>
         */
        public boolean hasWorkerQueryExecution() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .mthesis.concurrent_graph.communication.messages.WorkerQueryExecutionMode WorkerQueryExecution = 1;</code>
         */
        public mthesis.concurrent_graph.communication.Messages.WorkerQueryExecutionMode getWorkerQueryExecution() {
          mthesis.concurrent_graph.communication.Messages.WorkerQueryExecutionMode result = mthesis.concurrent_graph.communication.Messages.WorkerQueryExecutionMode.valueOf(workerQueryExecution_);
          return result == null ? mthesis.concurrent_graph.communication.Messages.WorkerQueryExecutionMode.NonLocal : result;
        }
        /**
         * <code>optional .mthesis.concurrent_graph.communication.messages.WorkerQueryExecutionMode WorkerQueryExecution = 1;</code>
         */
        public Builder setWorkerQueryExecution(mthesis.concurrent_graph.communication.Messages.WorkerQueryExecutionMode value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          workerQueryExecution_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>optional .mthesis.concurrent_graph.communication.messages.WorkerQueryExecutionMode WorkerQueryExecution = 1;</code>
         */
        public Builder clearWorkerQueryExecution() {
          bitField0_ = (bitField0_ & ~0x00000001);
          workerQueryExecution_ = 1;
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Integer> workersWaitFor_ = java.util.Collections.emptyList();
        private void ensureWorkersWaitForIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            workersWaitFor_ = new java.util.ArrayList<java.lang.Integer>(workersWaitFor_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <code>repeated int32 WorkersWaitFor = 2;</code>
         */
        public java.util.List<java.lang.Integer>
            getWorkersWaitForList() {
          return java.util.Collections.unmodifiableList(workersWaitFor_);
        }
        /**
         * <code>repeated int32 WorkersWaitFor = 2;</code>
         */
        public int getWorkersWaitForCount() {
          return workersWaitFor_.size();
        }
        /**
         * <code>repeated int32 WorkersWaitFor = 2;</code>
         */
        public int getWorkersWaitFor(int index) {
          return workersWaitFor_.get(index);
        }
        /**
         * <code>repeated int32 WorkersWaitFor = 2;</code>
         */
        public Builder setWorkersWaitFor(
            int index, int value) {
          ensureWorkersWaitForIsMutable();
          workersWaitFor_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 WorkersWaitFor = 2;</code>
         */
        public Builder addWorkersWaitFor(int value) {
          ensureWorkersWaitForIsMutable();
          workersWaitFor_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 WorkersWaitFor = 2;</code>
         */
        public Builder addAllWorkersWaitFor(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureWorkersWaitForIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, workersWaitFor_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 WorkersWaitFor = 2;</code>
         */
        public Builder clearWorkersWaitFor() {
          workersWaitFor_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:mthesis.concurrent_graph.communication.messages.ControlMessage.StartSuperstepMessage)
      }

      // @@protoc_insertion_point(class_scope:mthesis.concurrent_graph.communication.messages.ControlMessage.StartSuperstepMessage)
      private static final mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage();
      }

      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<StartSuperstepMessage>
          PARSER = new com.google.protobuf.AbstractParser<StartSuperstepMessage>() {
        public StartSuperstepMessage parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new StartSuperstepMessage(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<StartSuperstepMessage> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<StartSuperstepMessage> getParserForType() {
        return PARSER;
      }

      public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface StartBarrierMessageOrBuilder extends
        // @@protoc_insertion_point(interface_extends:mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>map&lt;int32, int32&gt; QuerySupersteps = 1;</code>
       */
      int getQuerySuperstepsCount();
      /**
       * <code>map&lt;int32, int32&gt; QuerySupersteps = 1;</code>
       */
      boolean containsQuerySupersteps(
          int key);
      /**
       * Use {@link #getQuerySuperstepsMap()} instead.
       */
      @java.lang.Deprecated
      java.util.Map<java.lang.Integer, java.lang.Integer>
      getQuerySupersteps();
      /**
       * <code>map&lt;int32, int32&gt; QuerySupersteps = 1;</code>
       */
      java.util.Map<java.lang.Integer, java.lang.Integer>
      getQuerySuperstepsMap();
      /**
       * <code>map&lt;int32, int32&gt; QuerySupersteps = 1;</code>
       */

      int getQuerySuperstepsOrDefault(
          int key,
          int defaultValue);
      /**
       * <code>map&lt;int32, int32&gt; QuerySupersteps = 1;</code>
       */

      int getQuerySuperstepsOrThrow(
          int key);

      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage SendQueryChunks = 2;</code>
       */
      java.util.List<mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage> 
          getSendQueryChunksList();
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage SendQueryChunks = 2;</code>
       */
      mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage getSendQueryChunks(int index);
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage SendQueryChunks = 2;</code>
       */
      int getSendQueryChunksCount();
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage SendQueryChunks = 2;</code>
       */
      java.util.List<? extends mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessageOrBuilder> 
          getSendQueryChunksOrBuilderList();
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage SendQueryChunks = 2;</code>
       */
      mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessageOrBuilder getSendQueryChunksOrBuilder(
          int index);

      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage ReceiveQueryChunks = 3;</code>
       */
      java.util.List<mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage> 
          getReceiveQueryChunksList();
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage ReceiveQueryChunks = 3;</code>
       */
      mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage getReceiveQueryChunks(int index);
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage ReceiveQueryChunks = 3;</code>
       */
      int getReceiveQueryChunksCount();
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage ReceiveQueryChunks = 3;</code>
       */
      java.util.List<? extends mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessageOrBuilder> 
          getReceiveQueryChunksOrBuilderList();
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage ReceiveQueryChunks = 3;</code>
       */
      mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessageOrBuilder getReceiveQueryChunksOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage}
     */
    public  static final class StartBarrierMessage extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage)
        StartBarrierMessageOrBuilder {
      // Use StartBarrierMessage.newBuilder() to construct.
      private StartBarrierMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private StartBarrierMessage() {
        sendQueryChunks_ = java.util.Collections.emptyList();
        receiveQueryChunks_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private StartBarrierMessage(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  querySupersteps_ = com.google.protobuf.MapField.newMapField(
                      QuerySuperstepsDefaultEntryHolder.defaultEntry);
                  mutable_bitField0_ |= 0x00000001;
                }
                com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
                querySupersteps = input.readMessage(
                    QuerySuperstepsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                querySupersteps_.getMutableMap().put(querySupersteps.getKey(), querySupersteps.getValue());
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  sendQueryChunks_ = new java.util.ArrayList<mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage>();
                  mutable_bitField0_ |= 0x00000002;
                }
                sendQueryChunks_.add(
                    input.readMessage(mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage.PARSER, extensionRegistry));
                break;
              }
              case 26: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  receiveQueryChunks_ = new java.util.ArrayList<mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage>();
                  mutable_bitField0_ |= 0x00000004;
                }
                receiveQueryChunks_.add(
                    input.readMessage(mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            sendQueryChunks_ = java.util.Collections.unmodifiableList(sendQueryChunks_);
          }
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            receiveQueryChunks_ = java.util.Collections.unmodifiableList(receiveQueryChunks_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetQuerySupersteps();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.class, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.Builder.class);
      }

      public interface SendQueryChunkMessageOrBuilder extends
          // @@protoc_insertion_point(interface_extends:mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Queries to include vertices for
         * </pre>
         *
         * <code>repeated int32 IncludeQueries = 1;</code>
         */
        java.util.List<java.lang.Integer> getIncludeQueriesList();
        /**
         * <pre>
         * Queries to include vertices for
         * </pre>
         *
         * <code>repeated int32 IncludeQueries = 1;</code>
         */
        int getIncludeQueriesCount();
        /**
         * <pre>
         * Queries to include vertices for
         * </pre>
         *
         * <code>repeated int32 IncludeQueries = 1;</code>
         */
        int getIncludeQueries(int index);

        /**
         * <pre>
         * Queries to tolerate vertices for
         * </pre>
         *
         * <code>repeated int32 TolreateQueries = 2;</code>
         */
        java.util.List<java.lang.Integer> getTolreateQueriesList();
        /**
         * <pre>
         * Queries to tolerate vertices for
         * </pre>
         *
         * <code>repeated int32 TolreateQueries = 2;</code>
         */
        int getTolreateQueriesCount();
        /**
         * <pre>
         * Queries to tolerate vertices for
         * </pre>
         *
         * <code>repeated int32 TolreateQueries = 2;</code>
         */
        int getTolreateQueries(int index);

        /**
         * <pre>
         * Target machine to send vertices to
         * </pre>
         *
         * <code>optional int32 MoveToMachine = 3;</code>
         */
        boolean hasMoveToMachine();
        /**
         * <pre>
         * Target machine to send vertices to
         * </pre>
         *
         * <code>optional int32 MoveToMachine = 3;</code>
         */
        int getMoveToMachine();

        /**
         * <pre>
         * Max. number of vertices to move
         * </pre>
         *
         * <code>optional int32 MaxMoveCount = 4;</code>
         */
        boolean hasMaxMoveCount();
        /**
         * <pre>
         * Max. number of vertices to move
         * </pre>
         *
         * <code>optional int32 MaxMoveCount = 4;</code>
         */
        int getMaxMoveCount();
      }
      /**
       * <pre>
       * Message to signal workers to make a system wide barrier to perform tasks
       * </pre>
       *
       * Protobuf type {@code mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage}
       */
      public  static final class SendQueryChunkMessage extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage)
          SendQueryChunkMessageOrBuilder {
        // Use SendQueryChunkMessage.newBuilder() to construct.
        private SendQueryChunkMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private SendQueryChunkMessage() {
          includeQueries_ = java.util.Collections.emptyList();
          tolreateQueries_ = java.util.Collections.emptyList();
          moveToMachine_ = 0;
          maxMoveCount_ = 0;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private SendQueryChunkMessage(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                    includeQueries_ = new java.util.ArrayList<java.lang.Integer>();
                    mutable_bitField0_ |= 0x00000001;
                  }
                  includeQueries_.add(input.readInt32());
                  break;
                }
                case 10: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                    includeQueries_ = new java.util.ArrayList<java.lang.Integer>();
                    mutable_bitField0_ |= 0x00000001;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    includeQueries_.add(input.readInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 16: {
                  if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    tolreateQueries_ = new java.util.ArrayList<java.lang.Integer>();
                    mutable_bitField0_ |= 0x00000002;
                  }
                  tolreateQueries_.add(input.readInt32());
                  break;
                }
                case 18: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                    tolreateQueries_ = new java.util.ArrayList<java.lang.Integer>();
                    mutable_bitField0_ |= 0x00000002;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    tolreateQueries_.add(input.readInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000001;
                  moveToMachine_ = input.readInt32();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000002;
                  maxMoveCount_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              includeQueries_ = java.util.Collections.unmodifiableList(includeQueries_);
            }
            if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              tolreateQueries_ = java.util.Collections.unmodifiableList(tolreateQueries_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_SendQueryChunkMessage_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_SendQueryChunkMessage_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage.class, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage.Builder.class);
        }

        private int bitField0_;
        public static final int INCLUDEQUERIES_FIELD_NUMBER = 1;
        private java.util.List<java.lang.Integer> includeQueries_;
        /**
         * <pre>
         * Queries to include vertices for
         * </pre>
         *
         * <code>repeated int32 IncludeQueries = 1;</code>
         */
        public java.util.List<java.lang.Integer>
            getIncludeQueriesList() {
          return includeQueries_;
        }
        /**
         * <pre>
         * Queries to include vertices for
         * </pre>
         *
         * <code>repeated int32 IncludeQueries = 1;</code>
         */
        public int getIncludeQueriesCount() {
          return includeQueries_.size();
        }
        /**
         * <pre>
         * Queries to include vertices for
         * </pre>
         *
         * <code>repeated int32 IncludeQueries = 1;</code>
         */
        public int getIncludeQueries(int index) {
          return includeQueries_.get(index);
        }

        public static final int TOLREATEQUERIES_FIELD_NUMBER = 2;
        private java.util.List<java.lang.Integer> tolreateQueries_;
        /**
         * <pre>
         * Queries to tolerate vertices for
         * </pre>
         *
         * <code>repeated int32 TolreateQueries = 2;</code>
         */
        public java.util.List<java.lang.Integer>
            getTolreateQueriesList() {
          return tolreateQueries_;
        }
        /**
         * <pre>
         * Queries to tolerate vertices for
         * </pre>
         *
         * <code>repeated int32 TolreateQueries = 2;</code>
         */
        public int getTolreateQueriesCount() {
          return tolreateQueries_.size();
        }
        /**
         * <pre>
         * Queries to tolerate vertices for
         * </pre>
         *
         * <code>repeated int32 TolreateQueries = 2;</code>
         */
        public int getTolreateQueries(int index) {
          return tolreateQueries_.get(index);
        }

        public static final int MOVETOMACHINE_FIELD_NUMBER = 3;
        private int moveToMachine_;
        /**
         * <pre>
         * Target machine to send vertices to
         * </pre>
         *
         * <code>optional int32 MoveToMachine = 3;</code>
         */
        public boolean hasMoveToMachine() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <pre>
         * Target machine to send vertices to
         * </pre>
         *
         * <code>optional int32 MoveToMachine = 3;</code>
         */
        public int getMoveToMachine() {
          return moveToMachine_;
        }

        public static final int MAXMOVECOUNT_FIELD_NUMBER = 4;
        private int maxMoveCount_;
        /**
         * <pre>
         * Max. number of vertices to move
         * </pre>
         *
         * <code>optional int32 MaxMoveCount = 4;</code>
         */
        public boolean hasMaxMoveCount() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <pre>
         * Max. number of vertices to move
         * </pre>
         *
         * <code>optional int32 MaxMoveCount = 4;</code>
         */
        public int getMaxMoveCount() {
          return maxMoveCount_;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          for (int i = 0; i < includeQueries_.size(); i++) {
            output.writeInt32(1, includeQueries_.get(i));
          }
          for (int i = 0; i < tolreateQueries_.size(); i++) {
            output.writeInt32(2, tolreateQueries_.get(i));
          }
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeInt32(3, moveToMachine_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeInt32(4, maxMoveCount_);
          }
          unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          {
            int dataSize = 0;
            for (int i = 0; i < includeQueries_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(includeQueries_.get(i));
            }
            size += dataSize;
            size += 1 * getIncludeQueriesList().size();
          }
          {
            int dataSize = 0;
            for (int i = 0; i < tolreateQueries_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(tolreateQueries_.get(i));
            }
            size += dataSize;
            size += 1 * getTolreateQueriesList().size();
          }
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(3, moveToMachine_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(4, maxMoveCount_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage)) {
            return super.equals(obj);
          }
          mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage other = (mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage) obj;

          boolean result = true;
          result = result && getIncludeQueriesList()
              .equals(other.getIncludeQueriesList());
          result = result && getTolreateQueriesList()
              .equals(other.getTolreateQueriesList());
          result = result && (hasMoveToMachine() == other.hasMoveToMachine());
          if (hasMoveToMachine()) {
            result = result && (getMoveToMachine()
                == other.getMoveToMachine());
          }
          result = result && (hasMaxMoveCount() == other.hasMaxMoveCount());
          if (hasMaxMoveCount()) {
            result = result && (getMaxMoveCount()
                == other.getMaxMoveCount());
          }
          result = result && unknownFields.equals(other.unknownFields);
          return result;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptorForType().hashCode();
          if (getIncludeQueriesCount() > 0) {
            hash = (37 * hash) + INCLUDEQUERIES_FIELD_NUMBER;
            hash = (53 * hash) + getIncludeQueriesList().hashCode();
          }
          if (getTolreateQueriesCount() > 0) {
            hash = (37 * hash) + TOLREATEQUERIES_FIELD_NUMBER;
            hash = (53 * hash) + getTolreateQueriesList().hashCode();
          }
          if (hasMoveToMachine()) {
            hash = (37 * hash) + MOVETOMACHINE_FIELD_NUMBER;
            hash = (53 * hash) + getMoveToMachine();
          }
          if (hasMaxMoveCount()) {
            hash = (37 * hash) + MAXMOVECOUNT_FIELD_NUMBER;
            hash = (53 * hash) + getMaxMoveCount();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * <pre>
         * Message to signal workers to make a system wide barrier to perform tasks
         * </pre>
         *
         * Protobuf type {@code mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage)
            mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessageOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_SendQueryChunkMessage_descriptor;
          }

          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_SendQueryChunkMessage_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage.class, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage.Builder.class);
          }

          // Construct using mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          public Builder clear() {
            super.clear();
            includeQueries_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            tolreateQueries_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            moveToMachine_ = 0;
            bitField0_ = (bitField0_ & ~0x00000004);
            maxMoveCount_ = 0;
            bitField0_ = (bitField0_ & ~0x00000008);
            return this;
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_SendQueryChunkMessage_descriptor;
          }

          public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage getDefaultInstanceForType() {
            return mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage.getDefaultInstance();
          }

          public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage build() {
            mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage buildPartial() {
            mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage result = new mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              includeQueries_ = java.util.Collections.unmodifiableList(includeQueries_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.includeQueries_ = includeQueries_;
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              tolreateQueries_ = java.util.Collections.unmodifiableList(tolreateQueries_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.tolreateQueries_ = tolreateQueries_;
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000001;
            }
            result.moveToMachine_ = moveToMachine_;
            if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
              to_bitField0_ |= 0x00000002;
            }
            result.maxMoveCount_ = maxMoveCount_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder clone() {
            return (Builder) super.clone();
          }
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
            return (Builder) super.setField(field, value);
          }
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
          }
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
          }
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
            return (Builder) super.setRepeatedField(field, index, value);
          }
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
            return (Builder) super.addRepeatedField(field, value);
          }
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage) {
              return mergeFrom((mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage other) {
            if (other == mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage.getDefaultInstance()) return this;
            if (!other.includeQueries_.isEmpty()) {
              if (includeQueries_.isEmpty()) {
                includeQueries_ = other.includeQueries_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureIncludeQueriesIsMutable();
                includeQueries_.addAll(other.includeQueries_);
              }
              onChanged();
            }
            if (!other.tolreateQueries_.isEmpty()) {
              if (tolreateQueries_.isEmpty()) {
                tolreateQueries_ = other.tolreateQueries_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureTolreateQueriesIsMutable();
                tolreateQueries_.addAll(other.tolreateQueries_);
              }
              onChanged();
            }
            if (other.hasMoveToMachine()) {
              setMoveToMachine(other.getMoveToMachine());
            }
            if (other.hasMaxMoveCount()) {
              setMaxMoveCount(other.getMaxMoveCount());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private java.util.List<java.lang.Integer> includeQueries_ = java.util.Collections.emptyList();
          private void ensureIncludeQueriesIsMutable() {
            if (!((bitField0_ & 0x00000001) == 0x00000001)) {
              includeQueries_ = new java.util.ArrayList<java.lang.Integer>(includeQueries_);
              bitField0_ |= 0x00000001;
             }
          }
          /**
           * <pre>
           * Queries to include vertices for
           * </pre>
           *
           * <code>repeated int32 IncludeQueries = 1;</code>
           */
          public java.util.List<java.lang.Integer>
              getIncludeQueriesList() {
            return java.util.Collections.unmodifiableList(includeQueries_);
          }
          /**
           * <pre>
           * Queries to include vertices for
           * </pre>
           *
           * <code>repeated int32 IncludeQueries = 1;</code>
           */
          public int getIncludeQueriesCount() {
            return includeQueries_.size();
          }
          /**
           * <pre>
           * Queries to include vertices for
           * </pre>
           *
           * <code>repeated int32 IncludeQueries = 1;</code>
           */
          public int getIncludeQueries(int index) {
            return includeQueries_.get(index);
          }
          /**
           * <pre>
           * Queries to include vertices for
           * </pre>
           *
           * <code>repeated int32 IncludeQueries = 1;</code>
           */
          public Builder setIncludeQueries(
              int index, int value) {
            ensureIncludeQueriesIsMutable();
            includeQueries_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Queries to include vertices for
           * </pre>
           *
           * <code>repeated int32 IncludeQueries = 1;</code>
           */
          public Builder addIncludeQueries(int value) {
            ensureIncludeQueriesIsMutable();
            includeQueries_.add(value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Queries to include vertices for
           * </pre>
           *
           * <code>repeated int32 IncludeQueries = 1;</code>
           */
          public Builder addAllIncludeQueries(
              java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureIncludeQueriesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, includeQueries_);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Queries to include vertices for
           * </pre>
           *
           * <code>repeated int32 IncludeQueries = 1;</code>
           */
          public Builder clearIncludeQueries() {
            includeQueries_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
            return this;
          }

          private java.util.List<java.lang.Integer> tolreateQueries_ = java.util.Collections.emptyList();
          private void ensureTolreateQueriesIsMutable() {
            if (!((bitField0_ & 0x00000002) == 0x00000002)) {
              tolreateQueries_ = new java.util.ArrayList<java.lang.Integer>(tolreateQueries_);
              bitField0_ |= 0x00000002;
             }
          }
          /**
           * <pre>
           * Queries to tolerate vertices for
           * </pre>
           *
           * <code>repeated int32 TolreateQueries = 2;</code>
           */
          public java.util.List<java.lang.Integer>
              getTolreateQueriesList() {
            return java.util.Collections.unmodifiableList(tolreateQueries_);
          }
          /**
           * <pre>
           * Queries to tolerate vertices for
           * </pre>
           *
           * <code>repeated int32 TolreateQueries = 2;</code>
           */
          public int getTolreateQueriesCount() {
            return tolreateQueries_.size();
          }
          /**
           * <pre>
           * Queries to tolerate vertices for
           * </pre>
           *
           * <code>repeated int32 TolreateQueries = 2;</code>
           */
          public int getTolreateQueries(int index) {
            return tolreateQueries_.get(index);
          }
          /**
           * <pre>
           * Queries to tolerate vertices for
           * </pre>
           *
           * <code>repeated int32 TolreateQueries = 2;</code>
           */
          public Builder setTolreateQueries(
              int index, int value) {
            ensureTolreateQueriesIsMutable();
            tolreateQueries_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Queries to tolerate vertices for
           * </pre>
           *
           * <code>repeated int32 TolreateQueries = 2;</code>
           */
          public Builder addTolreateQueries(int value) {
            ensureTolreateQueriesIsMutable();
            tolreateQueries_.add(value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Queries to tolerate vertices for
           * </pre>
           *
           * <code>repeated int32 TolreateQueries = 2;</code>
           */
          public Builder addAllTolreateQueries(
              java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureTolreateQueriesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, tolreateQueries_);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Queries to tolerate vertices for
           * </pre>
           *
           * <code>repeated int32 TolreateQueries = 2;</code>
           */
          public Builder clearTolreateQueries() {
            tolreateQueries_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
            return this;
          }

          private int moveToMachine_ ;
          /**
           * <pre>
           * Target machine to send vertices to
           * </pre>
           *
           * <code>optional int32 MoveToMachine = 3;</code>
           */
          public boolean hasMoveToMachine() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <pre>
           * Target machine to send vertices to
           * </pre>
           *
           * <code>optional int32 MoveToMachine = 3;</code>
           */
          public int getMoveToMachine() {
            return moveToMachine_;
          }
          /**
           * <pre>
           * Target machine to send vertices to
           * </pre>
           *
           * <code>optional int32 MoveToMachine = 3;</code>
           */
          public Builder setMoveToMachine(int value) {
            bitField0_ |= 0x00000004;
            moveToMachine_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Target machine to send vertices to
           * </pre>
           *
           * <code>optional int32 MoveToMachine = 3;</code>
           */
          public Builder clearMoveToMachine() {
            bitField0_ = (bitField0_ & ~0x00000004);
            moveToMachine_ = 0;
            onChanged();
            return this;
          }

          private int maxMoveCount_ ;
          /**
           * <pre>
           * Max. number of vertices to move
           * </pre>
           *
           * <code>optional int32 MaxMoveCount = 4;</code>
           */
          public boolean hasMaxMoveCount() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
          }
          /**
           * <pre>
           * Max. number of vertices to move
           * </pre>
           *
           * <code>optional int32 MaxMoveCount = 4;</code>
           */
          public int getMaxMoveCount() {
            return maxMoveCount_;
          }
          /**
           * <pre>
           * Max. number of vertices to move
           * </pre>
           *
           * <code>optional int32 MaxMoveCount = 4;</code>
           */
          public Builder setMaxMoveCount(int value) {
            bitField0_ |= 0x00000008;
            maxMoveCount_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Max. number of vertices to move
           * </pre>
           *
           * <code>optional int32 MaxMoveCount = 4;</code>
           */
          public Builder clearMaxMoveCount() {
            bitField0_ = (bitField0_ & ~0x00000008);
            maxMoveCount_ = 0;
            onChanged();
            return this;
          }
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage)
        }

        // @@protoc_insertion_point(class_scope:mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage)
        private static final mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage();
        }

        public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<SendQueryChunkMessage>
            PARSER = new com.google.protobuf.AbstractParser<SendQueryChunkMessage>() {
          public SendQueryChunkMessage parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
              return new SendQueryChunkMessage(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<SendQueryChunkMessage> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<SendQueryChunkMessage> getParserForType() {
          return PARSER;
        }

        public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface ReceiveQueryChunkMessageOrBuilder extends
          // @@protoc_insertion_point(interface_extends:mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Queries to send vertices for
         * </pre>
         *
         * <code>repeated int32 ChunkQueries = 1;</code>
         */
        java.util.List<java.lang.Integer> getChunkQueriesList();
        /**
         * <pre>
         * Queries to send vertices for
         * </pre>
         *
         * <code>repeated int32 ChunkQueries = 1;</code>
         */
        int getChunkQueriesCount();
        /**
         * <pre>
         * Queries to send vertices for
         * </pre>
         *
         * <code>repeated int32 ChunkQueries = 1;</code>
         */
        int getChunkQueries(int index);

        /**
         * <pre>
         * Machine to receive vertices from
         * </pre>
         *
         * <code>optional int32 ReceiveFromMachine = 2;</code>
         */
        boolean hasReceiveFromMachine();
        /**
         * <pre>
         * Machine to receive vertices from
         * </pre>
         *
         * <code>optional int32 ReceiveFromMachine = 2;</code>
         */
        int getReceiveFromMachine();
      }
      /**
       * <pre>
       * Message to signal workers to make a system wide barrier to perform tasks
       * </pre>
       *
       * Protobuf type {@code mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage}
       */
      public  static final class ReceiveQueryChunkMessage extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage)
          ReceiveQueryChunkMessageOrBuilder {
        // Use ReceiveQueryChunkMessage.newBuilder() to construct.
        private ReceiveQueryChunkMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private ReceiveQueryChunkMessage() {
          chunkQueries_ = java.util.Collections.emptyList();
          receiveFromMachine_ = 0;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private ReceiveQueryChunkMessage(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                    chunkQueries_ = new java.util.ArrayList<java.lang.Integer>();
                    mutable_bitField0_ |= 0x00000001;
                  }
                  chunkQueries_.add(input.readInt32());
                  break;
                }
                case 10: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                    chunkQueries_ = new java.util.ArrayList<java.lang.Integer>();
                    mutable_bitField0_ |= 0x00000001;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    chunkQueries_.add(input.readInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000001;
                  receiveFromMachine_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              chunkQueries_ = java.util.Collections.unmodifiableList(chunkQueries_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_ReceiveQueryChunkMessage_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_ReceiveQueryChunkMessage_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage.class, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage.Builder.class);
        }

        private int bitField0_;
        public static final int CHUNKQUERIES_FIELD_NUMBER = 1;
        private java.util.List<java.lang.Integer> chunkQueries_;
        /**
         * <pre>
         * Queries to send vertices for
         * </pre>
         *
         * <code>repeated int32 ChunkQueries = 1;</code>
         */
        public java.util.List<java.lang.Integer>
            getChunkQueriesList() {
          return chunkQueries_;
        }
        /**
         * <pre>
         * Queries to send vertices for
         * </pre>
         *
         * <code>repeated int32 ChunkQueries = 1;</code>
         */
        public int getChunkQueriesCount() {
          return chunkQueries_.size();
        }
        /**
         * <pre>
         * Queries to send vertices for
         * </pre>
         *
         * <code>repeated int32 ChunkQueries = 1;</code>
         */
        public int getChunkQueries(int index) {
          return chunkQueries_.get(index);
        }

        public static final int RECEIVEFROMMACHINE_FIELD_NUMBER = 2;
        private int receiveFromMachine_;
        /**
         * <pre>
         * Machine to receive vertices from
         * </pre>
         *
         * <code>optional int32 ReceiveFromMachine = 2;</code>
         */
        public boolean hasReceiveFromMachine() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <pre>
         * Machine to receive vertices from
         * </pre>
         *
         * <code>optional int32 ReceiveFromMachine = 2;</code>
         */
        public int getReceiveFromMachine() {
          return receiveFromMachine_;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          for (int i = 0; i < chunkQueries_.size(); i++) {
            output.writeInt32(1, chunkQueries_.get(i));
          }
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeInt32(2, receiveFromMachine_);
          }
          unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          {
            int dataSize = 0;
            for (int i = 0; i < chunkQueries_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(chunkQueries_.get(i));
            }
            size += dataSize;
            size += 1 * getChunkQueriesList().size();
          }
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(2, receiveFromMachine_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage)) {
            return super.equals(obj);
          }
          mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage other = (mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage) obj;

          boolean result = true;
          result = result && getChunkQueriesList()
              .equals(other.getChunkQueriesList());
          result = result && (hasReceiveFromMachine() == other.hasReceiveFromMachine());
          if (hasReceiveFromMachine()) {
            result = result && (getReceiveFromMachine()
                == other.getReceiveFromMachine());
          }
          result = result && unknownFields.equals(other.unknownFields);
          return result;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptorForType().hashCode();
          if (getChunkQueriesCount() > 0) {
            hash = (37 * hash) + CHUNKQUERIES_FIELD_NUMBER;
            hash = (53 * hash) + getChunkQueriesList().hashCode();
          }
          if (hasReceiveFromMachine()) {
            hash = (37 * hash) + RECEIVEFROMMACHINE_FIELD_NUMBER;
            hash = (53 * hash) + getReceiveFromMachine();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * <pre>
         * Message to signal workers to make a system wide barrier to perform tasks
         * </pre>
         *
         * Protobuf type {@code mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage)
            mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessageOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_ReceiveQueryChunkMessage_descriptor;
          }

          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_ReceiveQueryChunkMessage_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage.class, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage.Builder.class);
          }

          // Construct using mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          public Builder clear() {
            super.clear();
            chunkQueries_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            receiveFromMachine_ = 0;
            bitField0_ = (bitField0_ & ~0x00000002);
            return this;
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_ReceiveQueryChunkMessage_descriptor;
          }

          public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage getDefaultInstanceForType() {
            return mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage.getDefaultInstance();
          }

          public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage build() {
            mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage buildPartial() {
            mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage result = new mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              chunkQueries_ = java.util.Collections.unmodifiableList(chunkQueries_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.chunkQueries_ = chunkQueries_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000001;
            }
            result.receiveFromMachine_ = receiveFromMachine_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder clone() {
            return (Builder) super.clone();
          }
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
            return (Builder) super.setField(field, value);
          }
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
          }
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
          }
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
            return (Builder) super.setRepeatedField(field, index, value);
          }
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
            return (Builder) super.addRepeatedField(field, value);
          }
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage) {
              return mergeFrom((mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage other) {
            if (other == mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage.getDefaultInstance()) return this;
            if (!other.chunkQueries_.isEmpty()) {
              if (chunkQueries_.isEmpty()) {
                chunkQueries_ = other.chunkQueries_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureChunkQueriesIsMutable();
                chunkQueries_.addAll(other.chunkQueries_);
              }
              onChanged();
            }
            if (other.hasReceiveFromMachine()) {
              setReceiveFromMachine(other.getReceiveFromMachine());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private java.util.List<java.lang.Integer> chunkQueries_ = java.util.Collections.emptyList();
          private void ensureChunkQueriesIsMutable() {
            if (!((bitField0_ & 0x00000001) == 0x00000001)) {
              chunkQueries_ = new java.util.ArrayList<java.lang.Integer>(chunkQueries_);
              bitField0_ |= 0x00000001;
             }
          }
          /**
           * <pre>
           * Queries to send vertices for
           * </pre>
           *
           * <code>repeated int32 ChunkQueries = 1;</code>
           */
          public java.util.List<java.lang.Integer>
              getChunkQueriesList() {
            return java.util.Collections.unmodifiableList(chunkQueries_);
          }
          /**
           * <pre>
           * Queries to send vertices for
           * </pre>
           *
           * <code>repeated int32 ChunkQueries = 1;</code>
           */
          public int getChunkQueriesCount() {
            return chunkQueries_.size();
          }
          /**
           * <pre>
           * Queries to send vertices for
           * </pre>
           *
           * <code>repeated int32 ChunkQueries = 1;</code>
           */
          public int getChunkQueries(int index) {
            return chunkQueries_.get(index);
          }
          /**
           * <pre>
           * Queries to send vertices for
           * </pre>
           *
           * <code>repeated int32 ChunkQueries = 1;</code>
           */
          public Builder setChunkQueries(
              int index, int value) {
            ensureChunkQueriesIsMutable();
            chunkQueries_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Queries to send vertices for
           * </pre>
           *
           * <code>repeated int32 ChunkQueries = 1;</code>
           */
          public Builder addChunkQueries(int value) {
            ensureChunkQueriesIsMutable();
            chunkQueries_.add(value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Queries to send vertices for
           * </pre>
           *
           * <code>repeated int32 ChunkQueries = 1;</code>
           */
          public Builder addAllChunkQueries(
              java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureChunkQueriesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, chunkQueries_);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Queries to send vertices for
           * </pre>
           *
           * <code>repeated int32 ChunkQueries = 1;</code>
           */
          public Builder clearChunkQueries() {
            chunkQueries_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
            return this;
          }

          private int receiveFromMachine_ ;
          /**
           * <pre>
           * Machine to receive vertices from
           * </pre>
           *
           * <code>optional int32 ReceiveFromMachine = 2;</code>
           */
          public boolean hasReceiveFromMachine() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <pre>
           * Machine to receive vertices from
           * </pre>
           *
           * <code>optional int32 ReceiveFromMachine = 2;</code>
           */
          public int getReceiveFromMachine() {
            return receiveFromMachine_;
          }
          /**
           * <pre>
           * Machine to receive vertices from
           * </pre>
           *
           * <code>optional int32 ReceiveFromMachine = 2;</code>
           */
          public Builder setReceiveFromMachine(int value) {
            bitField0_ |= 0x00000002;
            receiveFromMachine_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Machine to receive vertices from
           * </pre>
           *
           * <code>optional int32 ReceiveFromMachine = 2;</code>
           */
          public Builder clearReceiveFromMachine() {
            bitField0_ = (bitField0_ & ~0x00000002);
            receiveFromMachine_ = 0;
            onChanged();
            return this;
          }
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage)
        }

        // @@protoc_insertion_point(class_scope:mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage)
        private static final mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage();
        }

        public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<ReceiveQueryChunkMessage>
            PARSER = new com.google.protobuf.AbstractParser<ReceiveQueryChunkMessage>() {
          public ReceiveQueryChunkMessage parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
              return new ReceiveQueryChunkMessage(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<ReceiveQueryChunkMessage> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<ReceiveQueryChunkMessage> getParserForType() {
          return PARSER;
        }

        public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public static final int QUERYSUPERSTEPS_FIELD_NUMBER = 1;
      private static final class QuerySuperstepsDefaultEntryHolder {
        static final com.google.protobuf.MapEntry<
            java.lang.Integer, java.lang.Integer> defaultEntry =
                com.google.protobuf.MapEntry
                .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                    mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_QuerySuperstepsEntry_descriptor, 
                    com.google.protobuf.WireFormat.FieldType.INT32,
                    0,
                    com.google.protobuf.WireFormat.FieldType.INT32,
                    0);
      }
      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> querySupersteps_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetQuerySupersteps() {
        if (querySupersteps_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              QuerySuperstepsDefaultEntryHolder.defaultEntry);
        }
        return querySupersteps_;
      }

      public int getQuerySuperstepsCount() {
        return internalGetQuerySupersteps().getMap().size();
      }
      /**
       * <code>map&lt;int32, int32&gt; QuerySupersteps = 1;</code>
       */

      public boolean containsQuerySupersteps(
          int key) {
        
        return internalGetQuerySupersteps().getMap().containsKey(key);
      }
      /**
       * Use {@link #getQuerySuperstepsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getQuerySupersteps() {
        return getQuerySuperstepsMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; QuerySupersteps = 1;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getQuerySuperstepsMap() {
        return internalGetQuerySupersteps().getMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; QuerySupersteps = 1;</code>
       */

      public int getQuerySuperstepsOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetQuerySupersteps().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, int32&gt; QuerySupersteps = 1;</code>
       */

      public int getQuerySuperstepsOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetQuerySupersteps().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public static final int SENDQUERYCHUNKS_FIELD_NUMBER = 2;
      private java.util.List<mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage> sendQueryChunks_;
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage SendQueryChunks = 2;</code>
       */
      public java.util.List<mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage> getSendQueryChunksList() {
        return sendQueryChunks_;
      }
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage SendQueryChunks = 2;</code>
       */
      public java.util.List<? extends mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessageOrBuilder> 
          getSendQueryChunksOrBuilderList() {
        return sendQueryChunks_;
      }
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage SendQueryChunks = 2;</code>
       */
      public int getSendQueryChunksCount() {
        return sendQueryChunks_.size();
      }
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage SendQueryChunks = 2;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage getSendQueryChunks(int index) {
        return sendQueryChunks_.get(index);
      }
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage SendQueryChunks = 2;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessageOrBuilder getSendQueryChunksOrBuilder(
          int index) {
        return sendQueryChunks_.get(index);
      }

      public static final int RECEIVEQUERYCHUNKS_FIELD_NUMBER = 3;
      private java.util.List<mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage> receiveQueryChunks_;
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage ReceiveQueryChunks = 3;</code>
       */
      public java.util.List<mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage> getReceiveQueryChunksList() {
        return receiveQueryChunks_;
      }
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage ReceiveQueryChunks = 3;</code>
       */
      public java.util.List<? extends mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessageOrBuilder> 
          getReceiveQueryChunksOrBuilderList() {
        return receiveQueryChunks_;
      }
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage ReceiveQueryChunks = 3;</code>
       */
      public int getReceiveQueryChunksCount() {
        return receiveQueryChunks_.size();
      }
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage ReceiveQueryChunks = 3;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage getReceiveQueryChunks(int index) {
        return receiveQueryChunks_.get(index);
      }
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage ReceiveQueryChunks = 3;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessageOrBuilder getReceiveQueryChunksOrBuilder(
          int index) {
        return receiveQueryChunks_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
             : internalGetQuerySupersteps().getMap().entrySet()) {
          com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
          querySupersteps = QuerySuperstepsDefaultEntryHolder.defaultEntry.newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
          output.writeMessage(1, querySupersteps);
        }
        for (int i = 0; i < sendQueryChunks_.size(); i++) {
          output.writeMessage(2, sendQueryChunks_.get(i));
        }
        for (int i = 0; i < receiveQueryChunks_.size(); i++) {
          output.writeMessage(3, receiveQueryChunks_.get(i));
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
             : internalGetQuerySupersteps().getMap().entrySet()) {
          com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
          querySupersteps = QuerySuperstepsDefaultEntryHolder.defaultEntry.newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
          size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(1, querySupersteps);
        }
        for (int i = 0; i < sendQueryChunks_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, sendQueryChunks_.get(i));
        }
        for (int i = 0; i < receiveQueryChunks_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, receiveQueryChunks_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage)) {
          return super.equals(obj);
        }
        mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage other = (mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage) obj;

        boolean result = true;
        result = result && internalGetQuerySupersteps().equals(
            other.internalGetQuerySupersteps());
        result = result && getSendQueryChunksList()
            .equals(other.getSendQueryChunksList());
        result = result && getReceiveQueryChunksList()
            .equals(other.getReceiveQueryChunksList());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        if (!internalGetQuerySupersteps().getMap().isEmpty()) {
          hash = (37 * hash) + QUERYSUPERSTEPS_FIELD_NUMBER;
          hash = (53 * hash) + internalGetQuerySupersteps().hashCode();
        }
        if (getSendQueryChunksCount() > 0) {
          hash = (37 * hash) + SENDQUERYCHUNKS_FIELD_NUMBER;
          hash = (53 * hash) + getSendQueryChunksList().hashCode();
        }
        if (getReceiveQueryChunksCount() > 0) {
          hash = (37 * hash) + RECEIVEQUERYCHUNKS_FIELD_NUMBER;
          hash = (53 * hash) + getReceiveQueryChunksList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage)
          mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessageOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 1:
              return internalGetQuerySupersteps();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMutableMapField(
            int number) {
          switch (number) {
            case 1:
              return internalGetMutableQuerySupersteps();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.class, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.Builder.class);
        }

        // Construct using mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getSendQueryChunksFieldBuilder();
            getReceiveQueryChunksFieldBuilder();
          }
        }
        public Builder clear() {
          super.clear();
          internalGetMutableQuerySupersteps().clear();
          if (sendQueryChunksBuilder_ == null) {
            sendQueryChunks_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            sendQueryChunksBuilder_.clear();
          }
          if (receiveQueryChunksBuilder_ == null) {
            receiveQueryChunks_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            receiveQueryChunksBuilder_.clear();
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_descriptor;
        }

        public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage getDefaultInstanceForType() {
          return mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.getDefaultInstance();
        }

        public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage build() {
          mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage buildPartial() {
          mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage result = new mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage(this);
          int from_bitField0_ = bitField0_;
          result.querySupersteps_ = internalGetQuerySupersteps();
          result.querySupersteps_.makeImmutable();
          if (sendQueryChunksBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              sendQueryChunks_ = java.util.Collections.unmodifiableList(sendQueryChunks_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.sendQueryChunks_ = sendQueryChunks_;
          } else {
            result.sendQueryChunks_ = sendQueryChunksBuilder_.build();
          }
          if (receiveQueryChunksBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              receiveQueryChunks_ = java.util.Collections.unmodifiableList(receiveQueryChunks_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.receiveQueryChunks_ = receiveQueryChunks_;
          } else {
            result.receiveQueryChunks_ = receiveQueryChunksBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage) {
            return mergeFrom((mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage other) {
          if (other == mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.getDefaultInstance()) return this;
          internalGetMutableQuerySupersteps().mergeFrom(
              other.internalGetQuerySupersteps());
          if (sendQueryChunksBuilder_ == null) {
            if (!other.sendQueryChunks_.isEmpty()) {
              if (sendQueryChunks_.isEmpty()) {
                sendQueryChunks_ = other.sendQueryChunks_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureSendQueryChunksIsMutable();
                sendQueryChunks_.addAll(other.sendQueryChunks_);
              }
              onChanged();
            }
          } else {
            if (!other.sendQueryChunks_.isEmpty()) {
              if (sendQueryChunksBuilder_.isEmpty()) {
                sendQueryChunksBuilder_.dispose();
                sendQueryChunksBuilder_ = null;
                sendQueryChunks_ = other.sendQueryChunks_;
                bitField0_ = (bitField0_ & ~0x00000002);
                sendQueryChunksBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getSendQueryChunksFieldBuilder() : null;
              } else {
                sendQueryChunksBuilder_.addAllMessages(other.sendQueryChunks_);
              }
            }
          }
          if (receiveQueryChunksBuilder_ == null) {
            if (!other.receiveQueryChunks_.isEmpty()) {
              if (receiveQueryChunks_.isEmpty()) {
                receiveQueryChunks_ = other.receiveQueryChunks_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureReceiveQueryChunksIsMutable();
                receiveQueryChunks_.addAll(other.receiveQueryChunks_);
              }
              onChanged();
            }
          } else {
            if (!other.receiveQueryChunks_.isEmpty()) {
              if (receiveQueryChunksBuilder_.isEmpty()) {
                receiveQueryChunksBuilder_.dispose();
                receiveQueryChunksBuilder_ = null;
                receiveQueryChunks_ = other.receiveQueryChunks_;
                bitField0_ = (bitField0_ & ~0x00000004);
                receiveQueryChunksBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getReceiveQueryChunksFieldBuilder() : null;
              } else {
                receiveQueryChunksBuilder_.addAllMessages(other.receiveQueryChunks_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.MapField<
            java.lang.Integer, java.lang.Integer> querySupersteps_;
        private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
        internalGetQuerySupersteps() {
          if (querySupersteps_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                QuerySuperstepsDefaultEntryHolder.defaultEntry);
          }
          return querySupersteps_;
        }
        private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
        internalGetMutableQuerySupersteps() {
          onChanged();;
          if (querySupersteps_ == null) {
            querySupersteps_ = com.google.protobuf.MapField.newMapField(
                QuerySuperstepsDefaultEntryHolder.defaultEntry);
          }
          if (!querySupersteps_.isMutable()) {
            querySupersteps_ = querySupersteps_.copy();
          }
          return querySupersteps_;
        }

        public int getQuerySuperstepsCount() {
          return internalGetQuerySupersteps().getMap().size();
        }
        /**
         * <code>map&lt;int32, int32&gt; QuerySupersteps = 1;</code>
         */

        public boolean containsQuerySupersteps(
            int key) {
          
          return internalGetQuerySupersteps().getMap().containsKey(key);
        }
        /**
         * Use {@link #getQuerySuperstepsMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.Integer, java.lang.Integer> getQuerySupersteps() {
          return getQuerySuperstepsMap();
        }
        /**
         * <code>map&lt;int32, int32&gt; QuerySupersteps = 1;</code>
         */

        public java.util.Map<java.lang.Integer, java.lang.Integer> getQuerySuperstepsMap() {
          return internalGetQuerySupersteps().getMap();
        }
        /**
         * <code>map&lt;int32, int32&gt; QuerySupersteps = 1;</code>
         */

        public int getQuerySuperstepsOrDefault(
            int key,
            int defaultValue) {
          
          java.util.Map<java.lang.Integer, java.lang.Integer> map =
              internalGetQuerySupersteps().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <code>map&lt;int32, int32&gt; QuerySupersteps = 1;</code>
         */

        public int getQuerySuperstepsOrThrow(
            int key) {
          
          java.util.Map<java.lang.Integer, java.lang.Integer> map =
              internalGetQuerySupersteps().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        public Builder clearQuerySupersteps() {
          getMutableQuerySupersteps().clear();
          return this;
        }
        /**
         * <code>map&lt;int32, int32&gt; QuerySupersteps = 1;</code>
         */

        public Builder removeQuerySupersteps(
            int key) {
          
          getMutableQuerySupersteps().remove(key);
          return this;
        }
        /**
         * Use alternate mutation accessors instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.Integer, java.lang.Integer>
        getMutableQuerySupersteps() {
          return internalGetMutableQuerySupersteps().getMutableMap();
        }
        /**
         * <code>map&lt;int32, int32&gt; QuerySupersteps = 1;</code>
         */
        public Builder putQuerySupersteps(
            int key,
            int value) {
          
          
          getMutableQuerySupersteps().put(key, value);
          return this;
        }
        /**
         * <code>map&lt;int32, int32&gt; QuerySupersteps = 1;</code>
         */

        public Builder putAllQuerySupersteps(
            java.util.Map<java.lang.Integer, java.lang.Integer> values) {
          getMutableQuerySupersteps().putAll(values);
          return this;
        }

        private java.util.List<mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage> sendQueryChunks_ =
          java.util.Collections.emptyList();
        private void ensureSendQueryChunksIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            sendQueryChunks_ = new java.util.ArrayList<mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage>(sendQueryChunks_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessageOrBuilder> sendQueryChunksBuilder_;

        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage SendQueryChunks = 2;</code>
         */
        public java.util.List<mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage> getSendQueryChunksList() {
          if (sendQueryChunksBuilder_ == null) {
            return java.util.Collections.unmodifiableList(sendQueryChunks_);
          } else {
            return sendQueryChunksBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage SendQueryChunks = 2;</code>
         */
        public int getSendQueryChunksCount() {
          if (sendQueryChunksBuilder_ == null) {
            return sendQueryChunks_.size();
          } else {
            return sendQueryChunksBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage SendQueryChunks = 2;</code>
         */
        public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage getSendQueryChunks(int index) {
          if (sendQueryChunksBuilder_ == null) {
            return sendQueryChunks_.get(index);
          } else {
            return sendQueryChunksBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage SendQueryChunks = 2;</code>
         */
        public Builder setSendQueryChunks(
            int index, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage value) {
          if (sendQueryChunksBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSendQueryChunksIsMutable();
            sendQueryChunks_.set(index, value);
            onChanged();
          } else {
            sendQueryChunksBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage SendQueryChunks = 2;</code>
         */
        public Builder setSendQueryChunks(
            int index, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage.Builder builderForValue) {
          if (sendQueryChunksBuilder_ == null) {
            ensureSendQueryChunksIsMutable();
            sendQueryChunks_.set(index, builderForValue.build());
            onChanged();
          } else {
            sendQueryChunksBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage SendQueryChunks = 2;</code>
         */
        public Builder addSendQueryChunks(mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage value) {
          if (sendQueryChunksBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSendQueryChunksIsMutable();
            sendQueryChunks_.add(value);
            onChanged();
          } else {
            sendQueryChunksBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage SendQueryChunks = 2;</code>
         */
        public Builder addSendQueryChunks(
            int index, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage value) {
          if (sendQueryChunksBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSendQueryChunksIsMutable();
            sendQueryChunks_.add(index, value);
            onChanged();
          } else {
            sendQueryChunksBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage SendQueryChunks = 2;</code>
         */
        public Builder addSendQueryChunks(
            mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage.Builder builderForValue) {
          if (sendQueryChunksBuilder_ == null) {
            ensureSendQueryChunksIsMutable();
            sendQueryChunks_.add(builderForValue.build());
            onChanged();
          } else {
            sendQueryChunksBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage SendQueryChunks = 2;</code>
         */
        public Builder addSendQueryChunks(
            int index, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage.Builder builderForValue) {
          if (sendQueryChunksBuilder_ == null) {
            ensureSendQueryChunksIsMutable();
            sendQueryChunks_.add(index, builderForValue.build());
            onChanged();
          } else {
            sendQueryChunksBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage SendQueryChunks = 2;</code>
         */
        public Builder addAllSendQueryChunks(
            java.lang.Iterable<? extends mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage> values) {
          if (sendQueryChunksBuilder_ == null) {
            ensureSendQueryChunksIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, sendQueryChunks_);
            onChanged();
          } else {
            sendQueryChunksBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage SendQueryChunks = 2;</code>
         */
        public Builder clearSendQueryChunks() {
          if (sendQueryChunksBuilder_ == null) {
            sendQueryChunks_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            sendQueryChunksBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage SendQueryChunks = 2;</code>
         */
        public Builder removeSendQueryChunks(int index) {
          if (sendQueryChunksBuilder_ == null) {
            ensureSendQueryChunksIsMutable();
            sendQueryChunks_.remove(index);
            onChanged();
          } else {
            sendQueryChunksBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage SendQueryChunks = 2;</code>
         */
        public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage.Builder getSendQueryChunksBuilder(
            int index) {
          return getSendQueryChunksFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage SendQueryChunks = 2;</code>
         */
        public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessageOrBuilder getSendQueryChunksOrBuilder(
            int index) {
          if (sendQueryChunksBuilder_ == null) {
            return sendQueryChunks_.get(index);  } else {
            return sendQueryChunksBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage SendQueryChunks = 2;</code>
         */
        public java.util.List<? extends mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessageOrBuilder> 
             getSendQueryChunksOrBuilderList() {
          if (sendQueryChunksBuilder_ != null) {
            return sendQueryChunksBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(sendQueryChunks_);
          }
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage SendQueryChunks = 2;</code>
         */
        public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage.Builder addSendQueryChunksBuilder() {
          return getSendQueryChunksFieldBuilder().addBuilder(
              mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage.getDefaultInstance());
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage SendQueryChunks = 2;</code>
         */
        public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage.Builder addSendQueryChunksBuilder(
            int index) {
          return getSendQueryChunksFieldBuilder().addBuilder(
              index, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage.getDefaultInstance());
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage SendQueryChunks = 2;</code>
         */
        public java.util.List<mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage.Builder> 
             getSendQueryChunksBuilderList() {
          return getSendQueryChunksFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessageOrBuilder> 
            getSendQueryChunksFieldBuilder() {
          if (sendQueryChunksBuilder_ == null) {
            sendQueryChunksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.SendQueryChunkMessageOrBuilder>(
                    sendQueryChunks_,
                    ((bitField0_ & 0x00000002) == 0x00000002),
                    getParentForChildren(),
                    isClean());
            sendQueryChunks_ = null;
          }
          return sendQueryChunksBuilder_;
        }

        private java.util.List<mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage> receiveQueryChunks_ =
          java.util.Collections.emptyList();
        private void ensureReceiveQueryChunksIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            receiveQueryChunks_ = new java.util.ArrayList<mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage>(receiveQueryChunks_);
            bitField0_ |= 0x00000004;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessageOrBuilder> receiveQueryChunksBuilder_;

        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage ReceiveQueryChunks = 3;</code>
         */
        public java.util.List<mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage> getReceiveQueryChunksList() {
          if (receiveQueryChunksBuilder_ == null) {
            return java.util.Collections.unmodifiableList(receiveQueryChunks_);
          } else {
            return receiveQueryChunksBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage ReceiveQueryChunks = 3;</code>
         */
        public int getReceiveQueryChunksCount() {
          if (receiveQueryChunksBuilder_ == null) {
            return receiveQueryChunks_.size();
          } else {
            return receiveQueryChunksBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage ReceiveQueryChunks = 3;</code>
         */
        public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage getReceiveQueryChunks(int index) {
          if (receiveQueryChunksBuilder_ == null) {
            return receiveQueryChunks_.get(index);
          } else {
            return receiveQueryChunksBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage ReceiveQueryChunks = 3;</code>
         */
        public Builder setReceiveQueryChunks(
            int index, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage value) {
          if (receiveQueryChunksBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureReceiveQueryChunksIsMutable();
            receiveQueryChunks_.set(index, value);
            onChanged();
          } else {
            receiveQueryChunksBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage ReceiveQueryChunks = 3;</code>
         */
        public Builder setReceiveQueryChunks(
            int index, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage.Builder builderForValue) {
          if (receiveQueryChunksBuilder_ == null) {
            ensureReceiveQueryChunksIsMutable();
            receiveQueryChunks_.set(index, builderForValue.build());
            onChanged();
          } else {
            receiveQueryChunksBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage ReceiveQueryChunks = 3;</code>
         */
        public Builder addReceiveQueryChunks(mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage value) {
          if (receiveQueryChunksBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureReceiveQueryChunksIsMutable();
            receiveQueryChunks_.add(value);
            onChanged();
          } else {
            receiveQueryChunksBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage ReceiveQueryChunks = 3;</code>
         */
        public Builder addReceiveQueryChunks(
            int index, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage value) {
          if (receiveQueryChunksBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureReceiveQueryChunksIsMutable();
            receiveQueryChunks_.add(index, value);
            onChanged();
          } else {
            receiveQueryChunksBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage ReceiveQueryChunks = 3;</code>
         */
        public Builder addReceiveQueryChunks(
            mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage.Builder builderForValue) {
          if (receiveQueryChunksBuilder_ == null) {
            ensureReceiveQueryChunksIsMutable();
            receiveQueryChunks_.add(builderForValue.build());
            onChanged();
          } else {
            receiveQueryChunksBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage ReceiveQueryChunks = 3;</code>
         */
        public Builder addReceiveQueryChunks(
            int index, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage.Builder builderForValue) {
          if (receiveQueryChunksBuilder_ == null) {
            ensureReceiveQueryChunksIsMutable();
            receiveQueryChunks_.add(index, builderForValue.build());
            onChanged();
          } else {
            receiveQueryChunksBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage ReceiveQueryChunks = 3;</code>
         */
        public Builder addAllReceiveQueryChunks(
            java.lang.Iterable<? extends mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage> values) {
          if (receiveQueryChunksBuilder_ == null) {
            ensureReceiveQueryChunksIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, receiveQueryChunks_);
            onChanged();
          } else {
            receiveQueryChunksBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage ReceiveQueryChunks = 3;</code>
         */
        public Builder clearReceiveQueryChunks() {
          if (receiveQueryChunksBuilder_ == null) {
            receiveQueryChunks_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
          } else {
            receiveQueryChunksBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage ReceiveQueryChunks = 3;</code>
         */
        public Builder removeReceiveQueryChunks(int index) {
          if (receiveQueryChunksBuilder_ == null) {
            ensureReceiveQueryChunksIsMutable();
            receiveQueryChunks_.remove(index);
            onChanged();
          } else {
            receiveQueryChunksBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage ReceiveQueryChunks = 3;</code>
         */
        public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage.Builder getReceiveQueryChunksBuilder(
            int index) {
          return getReceiveQueryChunksFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage ReceiveQueryChunks = 3;</code>
         */
        public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessageOrBuilder getReceiveQueryChunksOrBuilder(
            int index) {
          if (receiveQueryChunksBuilder_ == null) {
            return receiveQueryChunks_.get(index);  } else {
            return receiveQueryChunksBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage ReceiveQueryChunks = 3;</code>
         */
        public java.util.List<? extends mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessageOrBuilder> 
             getReceiveQueryChunksOrBuilderList() {
          if (receiveQueryChunksBuilder_ != null) {
            return receiveQueryChunksBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(receiveQueryChunks_);
          }
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage ReceiveQueryChunks = 3;</code>
         */
        public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage.Builder addReceiveQueryChunksBuilder() {
          return getReceiveQueryChunksFieldBuilder().addBuilder(
              mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage.getDefaultInstance());
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage ReceiveQueryChunks = 3;</code>
         */
        public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage.Builder addReceiveQueryChunksBuilder(
            int index) {
          return getReceiveQueryChunksFieldBuilder().addBuilder(
              index, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage.getDefaultInstance());
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage ReceiveQueryChunks = 3;</code>
         */
        public java.util.List<mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage.Builder> 
             getReceiveQueryChunksBuilderList() {
          return getReceiveQueryChunksFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessageOrBuilder> 
            getReceiveQueryChunksFieldBuilder() {
          if (receiveQueryChunksBuilder_ == null) {
            receiveQueryChunksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.ReceiveQueryChunkMessageOrBuilder>(
                    receiveQueryChunks_,
                    ((bitField0_ & 0x00000004) == 0x00000004),
                    getParentForChildren(),
                    isClean());
            receiveQueryChunks_ = null;
          }
          return receiveQueryChunksBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage)
      }

      // @@protoc_insertion_point(class_scope:mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage)
      private static final mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage();
      }

      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<StartBarrierMessage>
          PARSER = new com.google.protobuf.AbstractParser<StartBarrierMessage>() {
        public StartBarrierMessage parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new StartBarrierMessage(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<StartBarrierMessage> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<StartBarrierMessage> getParserForType() {
        return PARSER;
      }

      public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface WorkerStatsMessageOrBuilder extends
        // @@protoc_insertion_point(interface_extends:mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample Samples = 1;</code>
       */
      java.util.List<mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample> 
          getSamplesList();
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample Samples = 1;</code>
       */
      mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample getSamples(int index);
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample Samples = 1;</code>
       */
      int getSamplesCount();
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample Samples = 1;</code>
       */
      java.util.List<? extends mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSampleOrBuilder> 
          getSamplesOrBuilderList();
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample Samples = 1;</code>
       */
      mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSampleOrBuilder getSamplesOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage}
     */
    public  static final class WorkerStatsMessage extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage)
        WorkerStatsMessageOrBuilder {
      // Use WorkerStatsMessage.newBuilder() to construct.
      private WorkerStatsMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private WorkerStatsMessage() {
        samples_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private WorkerStatsMessage(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  samples_ = new java.util.ArrayList<mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample>();
                  mutable_bitField0_ |= 0x00000001;
                }
                samples_.add(
                    input.readMessage(mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
            samples_ = java.util.Collections.unmodifiableList(samples_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_WorkerStatsMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_WorkerStatsMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.class, mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.Builder.class);
      }

      public interface WorkerStatSampleOrBuilder extends
          // @@protoc_insertion_point(interface_extends:mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional int64 Time = 1;</code>
         */
        boolean hasTime();
        /**
         * <code>optional int64 Time = 1;</code>
         */
        long getTime();

        /**
         * <code>optional bytes StatsBytes = 2;</code>
         */
        boolean hasStatsBytes();
        /**
         * <code>optional bytes StatsBytes = 2;</code>
         */
        com.google.protobuf.ByteString getStatsBytes();
      }
      /**
       * Protobuf type {@code mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample}
       */
      public  static final class WorkerStatSample extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample)
          WorkerStatSampleOrBuilder {
        // Use WorkerStatSample.newBuilder() to construct.
        private WorkerStatSample(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private WorkerStatSample() {
          time_ = 0L;
          statsBytes_ = com.google.protobuf.ByteString.EMPTY;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private WorkerStatSample(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  time_ = input.readInt64();
                  break;
                }
                case 18: {
                  bitField0_ |= 0x00000002;
                  statsBytes_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_WorkerStatsMessage_WorkerStatSample_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_WorkerStatsMessage_WorkerStatSample_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample.class, mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample.Builder.class);
        }

        private int bitField0_;
        public static final int TIME_FIELD_NUMBER = 1;
        private long time_;
        /**
         * <code>optional int64 Time = 1;</code>
         */
        public boolean hasTime() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int64 Time = 1;</code>
         */
        public long getTime() {
          return time_;
        }

        public static final int STATSBYTES_FIELD_NUMBER = 2;
        private com.google.protobuf.ByteString statsBytes_;
        /**
         * <code>optional bytes StatsBytes = 2;</code>
         */
        public boolean hasStatsBytes() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional bytes StatsBytes = 2;</code>
         */
        public com.google.protobuf.ByteString getStatsBytes() {
          return statsBytes_;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeInt64(1, time_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeBytes(2, statsBytes_);
          }
          unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt64Size(1, time_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(2, statsBytes_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample)) {
            return super.equals(obj);
          }
          mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample other = (mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample) obj;

          boolean result = true;
          result = result && (hasTime() == other.hasTime());
          if (hasTime()) {
            result = result && (getTime()
                == other.getTime());
          }
          result = result && (hasStatsBytes() == other.hasStatsBytes());
          if (hasStatsBytes()) {
            result = result && getStatsBytes()
                .equals(other.getStatsBytes());
          }
          result = result && unknownFields.equals(other.unknownFields);
          return result;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptorForType().hashCode();
          if (hasTime()) {
            hash = (37 * hash) + TIME_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getTime());
          }
          if (hasStatsBytes()) {
            hash = (37 * hash) + STATSBYTES_FIELD_NUMBER;
            hash = (53 * hash) + getStatsBytes().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample)
            mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSampleOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_WorkerStatsMessage_WorkerStatSample_descriptor;
          }

          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_WorkerStatsMessage_WorkerStatSample_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample.class, mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample.Builder.class);
          }

          // Construct using mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          public Builder clear() {
            super.clear();
            time_ = 0L;
            bitField0_ = (bitField0_ & ~0x00000001);
            statsBytes_ = com.google.protobuf.ByteString.EMPTY;
            bitField0_ = (bitField0_ & ~0x00000002);
            return this;
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_WorkerStatsMessage_WorkerStatSample_descriptor;
          }

          public mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample getDefaultInstanceForType() {
            return mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample.getDefaultInstance();
          }

          public mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample build() {
            mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample buildPartial() {
            mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample result = new mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.time_ = time_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.statsBytes_ = statsBytes_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder clone() {
            return (Builder) super.clone();
          }
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
            return (Builder) super.setField(field, value);
          }
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
          }
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
          }
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
            return (Builder) super.setRepeatedField(field, index, value);
          }
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
            return (Builder) super.addRepeatedField(field, value);
          }
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample) {
              return mergeFrom((mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample other) {
            if (other == mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample.getDefaultInstance()) return this;
            if (other.hasTime()) {
              setTime(other.getTime());
            }
            if (other.hasStatsBytes()) {
              setStatsBytes(other.getStatsBytes());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private long time_ ;
          /**
           * <code>optional int64 Time = 1;</code>
           */
          public boolean hasTime() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional int64 Time = 1;</code>
           */
          public long getTime() {
            return time_;
          }
          /**
           * <code>optional int64 Time = 1;</code>
           */
          public Builder setTime(long value) {
            bitField0_ |= 0x00000001;
            time_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int64 Time = 1;</code>
           */
          public Builder clearTime() {
            bitField0_ = (bitField0_ & ~0x00000001);
            time_ = 0L;
            onChanged();
            return this;
          }

          private com.google.protobuf.ByteString statsBytes_ = com.google.protobuf.ByteString.EMPTY;
          /**
           * <code>optional bytes StatsBytes = 2;</code>
           */
          public boolean hasStatsBytes() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional bytes StatsBytes = 2;</code>
           */
          public com.google.protobuf.ByteString getStatsBytes() {
            return statsBytes_;
          }
          /**
           * <code>optional bytes StatsBytes = 2;</code>
           */
          public Builder setStatsBytes(com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            statsBytes_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bytes StatsBytes = 2;</code>
           */
          public Builder clearStatsBytes() {
            bitField0_ = (bitField0_ & ~0x00000002);
            statsBytes_ = getDefaultInstance().getStatsBytes();
            onChanged();
            return this;
          }
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample)
        }

        // @@protoc_insertion_point(class_scope:mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample)
        private static final mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample();
        }

        public static mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<WorkerStatSample>
            PARSER = new com.google.protobuf.AbstractParser<WorkerStatSample>() {
          public WorkerStatSample parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
              return new WorkerStatSample(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<WorkerStatSample> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<WorkerStatSample> getParserForType() {
          return PARSER;
        }

        public mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public static final int SAMPLES_FIELD_NUMBER = 1;
      private java.util.List<mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample> samples_;
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample Samples = 1;</code>
       */
      public java.util.List<mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample> getSamplesList() {
        return samples_;
      }
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample Samples = 1;</code>
       */
      public java.util.List<? extends mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSampleOrBuilder> 
          getSamplesOrBuilderList() {
        return samples_;
      }
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample Samples = 1;</code>
       */
      public int getSamplesCount() {
        return samples_.size();
      }
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample Samples = 1;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample getSamples(int index) {
        return samples_.get(index);
      }
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample Samples = 1;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSampleOrBuilder getSamplesOrBuilder(
          int index) {
        return samples_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < samples_.size(); i++) {
          output.writeMessage(1, samples_.get(i));
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < samples_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, samples_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage)) {
          return super.equals(obj);
        }
        mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage other = (mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage) obj;

        boolean result = true;
        result = result && getSamplesList()
            .equals(other.getSamplesList());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        if (getSamplesCount() > 0) {
          hash = (37 * hash) + SAMPLES_FIELD_NUMBER;
          hash = (53 * hash) + getSamplesList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage)
          mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessageOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_WorkerStatsMessage_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_WorkerStatsMessage_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.class, mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.Builder.class);
        }

        // Construct using mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getSamplesFieldBuilder();
          }
        }
        public Builder clear() {
          super.clear();
          if (samplesBuilder_ == null) {
            samples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            samplesBuilder_.clear();
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_WorkerStatsMessage_descriptor;
        }

        public mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage getDefaultInstanceForType() {
          return mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.getDefaultInstance();
        }

        public mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage build() {
          mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage buildPartial() {
          mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage result = new mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage(this);
          int from_bitField0_ = bitField0_;
          if (samplesBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              samples_ = java.util.Collections.unmodifiableList(samples_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.samples_ = samples_;
          } else {
            result.samples_ = samplesBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage) {
            return mergeFrom((mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage other) {
          if (other == mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.getDefaultInstance()) return this;
          if (samplesBuilder_ == null) {
            if (!other.samples_.isEmpty()) {
              if (samples_.isEmpty()) {
                samples_ = other.samples_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureSamplesIsMutable();
                samples_.addAll(other.samples_);
              }
              onChanged();
            }
          } else {
            if (!other.samples_.isEmpty()) {
              if (samplesBuilder_.isEmpty()) {
                samplesBuilder_.dispose();
                samplesBuilder_ = null;
                samples_ = other.samples_;
                bitField0_ = (bitField0_ & ~0x00000001);
                samplesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getSamplesFieldBuilder() : null;
              } else {
                samplesBuilder_.addAllMessages(other.samples_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.util.List<mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample> samples_ =
          java.util.Collections.emptyList();
        private void ensureSamplesIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            samples_ = new java.util.ArrayList<mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample>(samples_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample, mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSampleOrBuilder> samplesBuilder_;

        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample Samples = 1;</code>
         */
        public java.util.List<mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample> getSamplesList() {
          if (samplesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(samples_);
          } else {
            return samplesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample Samples = 1;</code>
         */
        public int getSamplesCount() {
          if (samplesBuilder_ == null) {
            return samples_.size();
          } else {
            return samplesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample Samples = 1;</code>
         */
        public mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample getSamples(int index) {
          if (samplesBuilder_ == null) {
            return samples_.get(index);
          } else {
            return samplesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample Samples = 1;</code>
         */
        public Builder setSamples(
            int index, mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample value) {
          if (samplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSamplesIsMutable();
            samples_.set(index, value);
            onChanged();
          } else {
            samplesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample Samples = 1;</code>
         */
        public Builder setSamples(
            int index, mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample.Builder builderForValue) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.set(index, builderForValue.build());
            onChanged();
          } else {
            samplesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample Samples = 1;</code>
         */
        public Builder addSamples(mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample value) {
          if (samplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSamplesIsMutable();
            samples_.add(value);
            onChanged();
          } else {
            samplesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample Samples = 1;</code>
         */
        public Builder addSamples(
            int index, mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample value) {
          if (samplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSamplesIsMutable();
            samples_.add(index, value);
            onChanged();
          } else {
            samplesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample Samples = 1;</code>
         */
        public Builder addSamples(
            mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample.Builder builderForValue) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.add(builderForValue.build());
            onChanged();
          } else {
            samplesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample Samples = 1;</code>
         */
        public Builder addSamples(
            int index, mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample.Builder builderForValue) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.add(index, builderForValue.build());
            onChanged();
          } else {
            samplesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample Samples = 1;</code>
         */
        public Builder addAllSamples(
            java.lang.Iterable<? extends mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample> values) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, samples_);
            onChanged();
          } else {
            samplesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample Samples = 1;</code>
         */
        public Builder clearSamples() {
          if (samplesBuilder_ == null) {
            samples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            samplesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample Samples = 1;</code>
         */
        public Builder removeSamples(int index) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.remove(index);
            onChanged();
          } else {
            samplesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample Samples = 1;</code>
         */
        public mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample.Builder getSamplesBuilder(
            int index) {
          return getSamplesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample Samples = 1;</code>
         */
        public mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSampleOrBuilder getSamplesOrBuilder(
            int index) {
          if (samplesBuilder_ == null) {
            return samples_.get(index);  } else {
            return samplesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample Samples = 1;</code>
         */
        public java.util.List<? extends mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSampleOrBuilder> 
             getSamplesOrBuilderList() {
          if (samplesBuilder_ != null) {
            return samplesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(samples_);
          }
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample Samples = 1;</code>
         */
        public mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample.Builder addSamplesBuilder() {
          return getSamplesFieldBuilder().addBuilder(
              mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample.getDefaultInstance());
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample Samples = 1;</code>
         */
        public mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample.Builder addSamplesBuilder(
            int index) {
          return getSamplesFieldBuilder().addBuilder(
              index, mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample.getDefaultInstance());
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage.WorkerStatSample Samples = 1;</code>
         */
        public java.util.List<mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample.Builder> 
             getSamplesBuilderList() {
          return getSamplesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample, mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSampleOrBuilder> 
            getSamplesFieldBuilder() {
          if (samplesBuilder_ == null) {
            samplesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample, mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSample.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.WorkerStatSampleOrBuilder>(
                    samples_,
                    ((bitField0_ & 0x00000001) == 0x00000001),
                    getParentForChildren(),
                    isClean());
            samples_ = null;
          }
          return samplesBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage)
      }

      // @@protoc_insertion_point(class_scope:mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage)
      private static final mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage();
      }

      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<WorkerStatsMessage>
          PARSER = new com.google.protobuf.AbstractParser<WorkerStatsMessage>() {
        public WorkerStatsMessage parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new WorkerStatsMessage(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<WorkerStatsMessage> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<WorkerStatsMessage> getParserForType() {
        return PARSER;
      }

      public mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface QueryVertexChunksMessageOrBuilder extends
        // @@protoc_insertion_point(interface_extends:mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMessage)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage Chunks = 1;</code>
       */
      java.util.List<mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage> 
          getChunksList();
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage Chunks = 1;</code>
       */
      mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage getChunks(int index);
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage Chunks = 1;</code>
       */
      int getChunksCount();
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage Chunks = 1;</code>
       */
      java.util.List<? extends mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessageOrBuilder> 
          getChunksOrBuilderList();
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage Chunks = 1;</code>
       */
      mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessageOrBuilder getChunksOrBuilder(
          int index);

      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage Queries = 2;</code>
       */
      java.util.List<mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage> 
          getQueriesList();
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage Queries = 2;</code>
       */
      mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage getQueries(int index);
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage Queries = 2;</code>
       */
      int getQueriesCount();
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage Queries = 2;</code>
       */
      java.util.List<? extends mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessageOrBuilder> 
          getQueriesOrBuilderList();
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage Queries = 2;</code>
       */
      mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessageOrBuilder getQueriesOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMessage}
     */
    public  static final class QueryVertexChunksMessage extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMessage)
        QueryVertexChunksMessageOrBuilder {
      // Use QueryVertexChunksMessage.newBuilder() to construct.
      private QueryVertexChunksMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private QueryVertexChunksMessage() {
        chunks_ = java.util.Collections.emptyList();
        queries_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private QueryVertexChunksMessage(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  chunks_ = new java.util.ArrayList<mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage>();
                  mutable_bitField0_ |= 0x00000001;
                }
                chunks_.add(
                    input.readMessage(mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage.PARSER, extensionRegistry));
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  queries_ = new java.util.ArrayList<mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage>();
                  mutable_bitField0_ |= 0x00000002;
                }
                queries_.add(
                    input.readMessage(mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
            chunks_ = java.util.Collections.unmodifiableList(chunks_);
          }
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            queries_ = java.util.Collections.unmodifiableList(queries_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_QueryVertexChunksMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_QueryVertexChunksMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage.class, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage.Builder.class);
      }

      public static final int CHUNKS_FIELD_NUMBER = 1;
      private java.util.List<mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage> chunks_;
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage Chunks = 1;</code>
       */
      public java.util.List<mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage> getChunksList() {
        return chunks_;
      }
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage Chunks = 1;</code>
       */
      public java.util.List<? extends mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessageOrBuilder> 
          getChunksOrBuilderList() {
        return chunks_;
      }
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage Chunks = 1;</code>
       */
      public int getChunksCount() {
        return chunks_.size();
      }
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage Chunks = 1;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage getChunks(int index) {
        return chunks_.get(index);
      }
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage Chunks = 1;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessageOrBuilder getChunksOrBuilder(
          int index) {
        return chunks_.get(index);
      }

      public static final int QUERIES_FIELD_NUMBER = 2;
      private java.util.List<mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage> queries_;
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage Queries = 2;</code>
       */
      public java.util.List<mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage> getQueriesList() {
        return queries_;
      }
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage Queries = 2;</code>
       */
      public java.util.List<? extends mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessageOrBuilder> 
          getQueriesOrBuilderList() {
        return queries_;
      }
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage Queries = 2;</code>
       */
      public int getQueriesCount() {
        return queries_.size();
      }
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage Queries = 2;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage getQueries(int index) {
        return queries_.get(index);
      }
      /**
       * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage Queries = 2;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessageOrBuilder getQueriesOrBuilder(
          int index) {
        return queries_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < chunks_.size(); i++) {
          output.writeMessage(1, chunks_.get(i));
        }
        for (int i = 0; i < queries_.size(); i++) {
          output.writeMessage(2, queries_.get(i));
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < chunks_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, chunks_.get(i));
        }
        for (int i = 0; i < queries_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, queries_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage)) {
          return super.equals(obj);
        }
        mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage other = (mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage) obj;

        boolean result = true;
        result = result && getChunksList()
            .equals(other.getChunksList());
        result = result && getQueriesList()
            .equals(other.getQueriesList());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        if (getChunksCount() > 0) {
          hash = (37 * hash) + CHUNKS_FIELD_NUMBER;
          hash = (53 * hash) + getChunksList().hashCode();
        }
        if (getQueriesCount() > 0) {
          hash = (37 * hash) + QUERIES_FIELD_NUMBER;
          hash = (53 * hash) + getQueriesList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMessage}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMessage)
          mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessageOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_QueryVertexChunksMessage_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_QueryVertexChunksMessage_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage.class, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage.Builder.class);
        }

        // Construct using mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getChunksFieldBuilder();
            getQueriesFieldBuilder();
          }
        }
        public Builder clear() {
          super.clear();
          if (chunksBuilder_ == null) {
            chunks_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            chunksBuilder_.clear();
          }
          if (queriesBuilder_ == null) {
            queries_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            queriesBuilder_.clear();
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_QueryVertexChunksMessage_descriptor;
        }

        public mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage getDefaultInstanceForType() {
          return mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage.getDefaultInstance();
        }

        public mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage build() {
          mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage buildPartial() {
          mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage result = new mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage(this);
          int from_bitField0_ = bitField0_;
          if (chunksBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              chunks_ = java.util.Collections.unmodifiableList(chunks_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.chunks_ = chunks_;
          } else {
            result.chunks_ = chunksBuilder_.build();
          }
          if (queriesBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              queries_ = java.util.Collections.unmodifiableList(queries_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.queries_ = queries_;
          } else {
            result.queries_ = queriesBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage) {
            return mergeFrom((mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage other) {
          if (other == mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage.getDefaultInstance()) return this;
          if (chunksBuilder_ == null) {
            if (!other.chunks_.isEmpty()) {
              if (chunks_.isEmpty()) {
                chunks_ = other.chunks_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureChunksIsMutable();
                chunks_.addAll(other.chunks_);
              }
              onChanged();
            }
          } else {
            if (!other.chunks_.isEmpty()) {
              if (chunksBuilder_.isEmpty()) {
                chunksBuilder_.dispose();
                chunksBuilder_ = null;
                chunks_ = other.chunks_;
                bitField0_ = (bitField0_ & ~0x00000001);
                chunksBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getChunksFieldBuilder() : null;
              } else {
                chunksBuilder_.addAllMessages(other.chunks_);
              }
            }
          }
          if (queriesBuilder_ == null) {
            if (!other.queries_.isEmpty()) {
              if (queries_.isEmpty()) {
                queries_ = other.queries_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureQueriesIsMutable();
                queries_.addAll(other.queries_);
              }
              onChanged();
            }
          } else {
            if (!other.queries_.isEmpty()) {
              if (queriesBuilder_.isEmpty()) {
                queriesBuilder_.dispose();
                queriesBuilder_ = null;
                queries_ = other.queries_;
                bitField0_ = (bitField0_ & ~0x00000002);
                queriesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getQueriesFieldBuilder() : null;
              } else {
                queriesBuilder_.addAllMessages(other.queries_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.util.List<mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage> chunks_ =
          java.util.Collections.emptyList();
        private void ensureChunksIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            chunks_ = new java.util.ArrayList<mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage>(chunks_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessageOrBuilder> chunksBuilder_;

        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage Chunks = 1;</code>
         */
        public java.util.List<mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage> getChunksList() {
          if (chunksBuilder_ == null) {
            return java.util.Collections.unmodifiableList(chunks_);
          } else {
            return chunksBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage Chunks = 1;</code>
         */
        public int getChunksCount() {
          if (chunksBuilder_ == null) {
            return chunks_.size();
          } else {
            return chunksBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage Chunks = 1;</code>
         */
        public mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage getChunks(int index) {
          if (chunksBuilder_ == null) {
            return chunks_.get(index);
          } else {
            return chunksBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage Chunks = 1;</code>
         */
        public Builder setChunks(
            int index, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage value) {
          if (chunksBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureChunksIsMutable();
            chunks_.set(index, value);
            onChanged();
          } else {
            chunksBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage Chunks = 1;</code>
         */
        public Builder setChunks(
            int index, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage.Builder builderForValue) {
          if (chunksBuilder_ == null) {
            ensureChunksIsMutable();
            chunks_.set(index, builderForValue.build());
            onChanged();
          } else {
            chunksBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage Chunks = 1;</code>
         */
        public Builder addChunks(mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage value) {
          if (chunksBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureChunksIsMutable();
            chunks_.add(value);
            onChanged();
          } else {
            chunksBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage Chunks = 1;</code>
         */
        public Builder addChunks(
            int index, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage value) {
          if (chunksBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureChunksIsMutable();
            chunks_.add(index, value);
            onChanged();
          } else {
            chunksBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage Chunks = 1;</code>
         */
        public Builder addChunks(
            mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage.Builder builderForValue) {
          if (chunksBuilder_ == null) {
            ensureChunksIsMutable();
            chunks_.add(builderForValue.build());
            onChanged();
          } else {
            chunksBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage Chunks = 1;</code>
         */
        public Builder addChunks(
            int index, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage.Builder builderForValue) {
          if (chunksBuilder_ == null) {
            ensureChunksIsMutable();
            chunks_.add(index, builderForValue.build());
            onChanged();
          } else {
            chunksBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage Chunks = 1;</code>
         */
        public Builder addAllChunks(
            java.lang.Iterable<? extends mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage> values) {
          if (chunksBuilder_ == null) {
            ensureChunksIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, chunks_);
            onChanged();
          } else {
            chunksBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage Chunks = 1;</code>
         */
        public Builder clearChunks() {
          if (chunksBuilder_ == null) {
            chunks_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            chunksBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage Chunks = 1;</code>
         */
        public Builder removeChunks(int index) {
          if (chunksBuilder_ == null) {
            ensureChunksIsMutable();
            chunks_.remove(index);
            onChanged();
          } else {
            chunksBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage Chunks = 1;</code>
         */
        public mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage.Builder getChunksBuilder(
            int index) {
          return getChunksFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage Chunks = 1;</code>
         */
        public mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessageOrBuilder getChunksOrBuilder(
            int index) {
          if (chunksBuilder_ == null) {
            return chunks_.get(index);  } else {
            return chunksBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage Chunks = 1;</code>
         */
        public java.util.List<? extends mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessageOrBuilder> 
             getChunksOrBuilderList() {
          if (chunksBuilder_ != null) {
            return chunksBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(chunks_);
          }
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage Chunks = 1;</code>
         */
        public mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage.Builder addChunksBuilder() {
          return getChunksFieldBuilder().addBuilder(
              mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage.getDefaultInstance());
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage Chunks = 1;</code>
         */
        public mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage.Builder addChunksBuilder(
            int index) {
          return getChunksFieldBuilder().addBuilder(
              index, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage.getDefaultInstance());
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage Chunks = 1;</code>
         */
        public java.util.List<mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage.Builder> 
             getChunksBuilderList() {
          return getChunksFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessageOrBuilder> 
            getChunksFieldBuilder() {
          if (chunksBuilder_ == null) {
            chunksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessageOrBuilder>(
                    chunks_,
                    ((bitField0_ & 0x00000001) == 0x00000001),
                    getParentForChildren(),
                    isClean());
            chunks_ = null;
          }
          return chunksBuilder_;
        }

        private java.util.List<mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage> queries_ =
          java.util.Collections.emptyList();
        private void ensureQueriesIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            queries_ = new java.util.ArrayList<mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage>(queries_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessageOrBuilder> queriesBuilder_;

        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage Queries = 2;</code>
         */
        public java.util.List<mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage> getQueriesList() {
          if (queriesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(queries_);
          } else {
            return queriesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage Queries = 2;</code>
         */
        public int getQueriesCount() {
          if (queriesBuilder_ == null) {
            return queries_.size();
          } else {
            return queriesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage Queries = 2;</code>
         */
        public mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage getQueries(int index) {
          if (queriesBuilder_ == null) {
            return queries_.get(index);
          } else {
            return queriesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage Queries = 2;</code>
         */
        public Builder setQueries(
            int index, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage value) {
          if (queriesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureQueriesIsMutable();
            queries_.set(index, value);
            onChanged();
          } else {
            queriesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage Queries = 2;</code>
         */
        public Builder setQueries(
            int index, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage.Builder builderForValue) {
          if (queriesBuilder_ == null) {
            ensureQueriesIsMutable();
            queries_.set(index, builderForValue.build());
            onChanged();
          } else {
            queriesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage Queries = 2;</code>
         */
        public Builder addQueries(mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage value) {
          if (queriesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureQueriesIsMutable();
            queries_.add(value);
            onChanged();
          } else {
            queriesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage Queries = 2;</code>
         */
        public Builder addQueries(
            int index, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage value) {
          if (queriesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureQueriesIsMutable();
            queries_.add(index, value);
            onChanged();
          } else {
            queriesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage Queries = 2;</code>
         */
        public Builder addQueries(
            mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage.Builder builderForValue) {
          if (queriesBuilder_ == null) {
            ensureQueriesIsMutable();
            queries_.add(builderForValue.build());
            onChanged();
          } else {
            queriesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage Queries = 2;</code>
         */
        public Builder addQueries(
            int index, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage.Builder builderForValue) {
          if (queriesBuilder_ == null) {
            ensureQueriesIsMutable();
            queries_.add(index, builderForValue.build());
            onChanged();
          } else {
            queriesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage Queries = 2;</code>
         */
        public Builder addAllQueries(
            java.lang.Iterable<? extends mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage> values) {
          if (queriesBuilder_ == null) {
            ensureQueriesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, queries_);
            onChanged();
          } else {
            queriesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage Queries = 2;</code>
         */
        public Builder clearQueries() {
          if (queriesBuilder_ == null) {
            queries_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            queriesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage Queries = 2;</code>
         */
        public Builder removeQueries(int index) {
          if (queriesBuilder_ == null) {
            ensureQueriesIsMutable();
            queries_.remove(index);
            onChanged();
          } else {
            queriesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage Queries = 2;</code>
         */
        public mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage.Builder getQueriesBuilder(
            int index) {
          return getQueriesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage Queries = 2;</code>
         */
        public mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessageOrBuilder getQueriesOrBuilder(
            int index) {
          if (queriesBuilder_ == null) {
            return queries_.get(index);  } else {
            return queriesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage Queries = 2;</code>
         */
        public java.util.List<? extends mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessageOrBuilder> 
             getQueriesOrBuilderList() {
          if (queriesBuilder_ != null) {
            return queriesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(queries_);
          }
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage Queries = 2;</code>
         */
        public mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage.Builder addQueriesBuilder() {
          return getQueriesFieldBuilder().addBuilder(
              mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage.getDefaultInstance());
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage Queries = 2;</code>
         */
        public mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage.Builder addQueriesBuilder(
            int index) {
          return getQueriesFieldBuilder().addBuilder(
              index, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage.getDefaultInstance());
        }
        /**
         * <code>repeated .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage Queries = 2;</code>
         */
        public java.util.List<mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage.Builder> 
             getQueriesBuilderList() {
          return getQueriesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessageOrBuilder> 
            getQueriesFieldBuilder() {
          if (queriesBuilder_ == null) {
            queriesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessageOrBuilder>(
                    queries_,
                    ((bitField0_ & 0x00000002) == 0x00000002),
                    getParentForChildren(),
                    isClean());
            queries_ = null;
          }
          return queriesBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMessage)
      }

      // @@protoc_insertion_point(class_scope:mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMessage)
      private static final mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage();
      }

      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<QueryVertexChunksMessage>
          PARSER = new com.google.protobuf.AbstractParser<QueryVertexChunksMessage>() {
        public QueryVertexChunksMessage parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new QueryVertexChunksMessage(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<QueryVertexChunksMessage> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<QueryVertexChunksMessage> getParserForType() {
        return PARSER;
      }

      public mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface QueryVertexChunksMapMessageOrBuilder extends
        // @@protoc_insertion_point(interface_extends:mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated int32 Queries = 1;</code>
       */
      java.util.List<java.lang.Integer> getQueriesList();
      /**
       * <code>repeated int32 Queries = 1;</code>
       */
      int getQueriesCount();
      /**
       * <code>repeated int32 Queries = 1;</code>
       */
      int getQueries(int index);

      /**
       * <code>optional int32 Count = 2;</code>
       */
      boolean hasCount();
      /**
       * <code>optional int32 Count = 2;</code>
       */
      int getCount();
    }
    /**
     * Protobuf type {@code mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage}
     */
    public  static final class QueryVertexChunksMapMessage extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage)
        QueryVertexChunksMapMessageOrBuilder {
      // Use QueryVertexChunksMapMessage.newBuilder() to construct.
      private QueryVertexChunksMapMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private QueryVertexChunksMapMessage() {
        queries_ = java.util.Collections.emptyList();
        count_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private QueryVertexChunksMapMessage(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  queries_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000001;
                }
                queries_.add(input.readInt32());
                break;
              }
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                  queries_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000001;
                }
                while (input.getBytesUntilLimit() > 0) {
                  queries_.add(input.readInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 16: {
                bitField0_ |= 0x00000001;
                count_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
            queries_ = java.util.Collections.unmodifiableList(queries_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_QueryVertexChunksMapMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_QueryVertexChunksMapMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage.class, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage.Builder.class);
      }

      private int bitField0_;
      public static final int QUERIES_FIELD_NUMBER = 1;
      private java.util.List<java.lang.Integer> queries_;
      /**
       * <code>repeated int32 Queries = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getQueriesList() {
        return queries_;
      }
      /**
       * <code>repeated int32 Queries = 1;</code>
       */
      public int getQueriesCount() {
        return queries_.size();
      }
      /**
       * <code>repeated int32 Queries = 1;</code>
       */
      public int getQueries(int index) {
        return queries_.get(index);
      }

      public static final int COUNT_FIELD_NUMBER = 2;
      private int count_;
      /**
       * <code>optional int32 Count = 2;</code>
       */
      public boolean hasCount() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 Count = 2;</code>
       */
      public int getCount() {
        return count_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < queries_.size(); i++) {
          output.writeInt32(1, queries_.get(i));
        }
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(2, count_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          for (int i = 0; i < queries_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(queries_.get(i));
          }
          size += dataSize;
          size += 1 * getQueriesList().size();
        }
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, count_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage)) {
          return super.equals(obj);
        }
        mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage other = (mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage) obj;

        boolean result = true;
        result = result && getQueriesList()
            .equals(other.getQueriesList());
        result = result && (hasCount() == other.hasCount());
        if (hasCount()) {
          result = result && (getCount()
              == other.getCount());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        if (getQueriesCount() > 0) {
          hash = (37 * hash) + QUERIES_FIELD_NUMBER;
          hash = (53 * hash) + getQueriesList().hashCode();
        }
        if (hasCount()) {
          hash = (37 * hash) + COUNT_FIELD_NUMBER;
          hash = (53 * hash) + getCount();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage)
          mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessageOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_QueryVertexChunksMapMessage_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_QueryVertexChunksMapMessage_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage.class, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage.Builder.class);
        }

        // Construct using mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          queries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          count_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_QueryVertexChunksMapMessage_descriptor;
        }

        public mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage getDefaultInstanceForType() {
          return mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage.getDefaultInstance();
        }

        public mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage build() {
          mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage buildPartial() {
          mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage result = new mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            queries_ = java.util.Collections.unmodifiableList(queries_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.queries_ = queries_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000001;
          }
          result.count_ = count_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage) {
            return mergeFrom((mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage other) {
          if (other == mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage.getDefaultInstance()) return this;
          if (!other.queries_.isEmpty()) {
            if (queries_.isEmpty()) {
              queries_ = other.queries_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureQueriesIsMutable();
              queries_.addAll(other.queries_);
            }
            onChanged();
          }
          if (other.hasCount()) {
            setCount(other.getCount());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.util.List<java.lang.Integer> queries_ = java.util.Collections.emptyList();
        private void ensureQueriesIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            queries_ = new java.util.ArrayList<java.lang.Integer>(queries_);
            bitField0_ |= 0x00000001;
           }
        }
        /**
         * <code>repeated int32 Queries = 1;</code>
         */
        public java.util.List<java.lang.Integer>
            getQueriesList() {
          return java.util.Collections.unmodifiableList(queries_);
        }
        /**
         * <code>repeated int32 Queries = 1;</code>
         */
        public int getQueriesCount() {
          return queries_.size();
        }
        /**
         * <code>repeated int32 Queries = 1;</code>
         */
        public int getQueries(int index) {
          return queries_.get(index);
        }
        /**
         * <code>repeated int32 Queries = 1;</code>
         */
        public Builder setQueries(
            int index, int value) {
          ensureQueriesIsMutable();
          queries_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 Queries = 1;</code>
         */
        public Builder addQueries(int value) {
          ensureQueriesIsMutable();
          queries_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 Queries = 1;</code>
         */
        public Builder addAllQueries(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureQueriesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, queries_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 Queries = 1;</code>
         */
        public Builder clearQueries() {
          queries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }

        private int count_ ;
        /**
         * <code>optional int32 Count = 2;</code>
         */
        public boolean hasCount() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 Count = 2;</code>
         */
        public int getCount() {
          return count_;
        }
        /**
         * <code>optional int32 Count = 2;</code>
         */
        public Builder setCount(int value) {
          bitField0_ |= 0x00000002;
          count_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 Count = 2;</code>
         */
        public Builder clearCount() {
          bitField0_ = (bitField0_ & ~0x00000002);
          count_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage)
      }

      // @@protoc_insertion_point(class_scope:mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMapMessage)
      private static final mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage();
      }

      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<QueryVertexChunksMapMessage>
          PARSER = new com.google.protobuf.AbstractParser<QueryVertexChunksMapMessage>() {
        public QueryVertexChunksMapMessage parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new QueryVertexChunksMapMessage(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<QueryVertexChunksMapMessage> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<QueryVertexChunksMapMessage> getParserForType() {
        return PARSER;
      }

      public mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMapMessage getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface QueryVertexQueryMessageOrBuilder extends
        // @@protoc_insertion_point(interface_extends:mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional bool IsActive = 1;</code>
       */
      boolean hasIsActive();
      /**
       * <code>optional bool IsActive = 1;</code>
       */
      boolean getIsActive();

      /**
       * <code>optional int32 Supersteps = 2;</code>
       */
      boolean hasSupersteps();
      /**
       * <code>optional int32 Supersteps = 2;</code>
       */
      int getSupersteps();

      /**
       * <code>optional int32 LocalSupersteps = 3;</code>
       */
      boolean hasLocalSupersteps();
      /**
       * <code>optional int32 LocalSupersteps = 3;</code>
       */
      int getLocalSupersteps();
    }
    /**
     * Protobuf type {@code mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage}
     */
    public  static final class QueryVertexQueryMessage extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage)
        QueryVertexQueryMessageOrBuilder {
      // Use QueryVertexQueryMessage.newBuilder() to construct.
      private QueryVertexQueryMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private QueryVertexQueryMessage() {
        isActive_ = false;
        supersteps_ = 0;
        localSupersteps_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private QueryVertexQueryMessage(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                isActive_ = input.readBool();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                supersteps_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                localSupersteps_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_QueryVertexQueryMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_QueryVertexQueryMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage.class, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage.Builder.class);
      }

      private int bitField0_;
      public static final int ISACTIVE_FIELD_NUMBER = 1;
      private boolean isActive_;
      /**
       * <code>optional bool IsActive = 1;</code>
       */
      public boolean hasIsActive() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool IsActive = 1;</code>
       */
      public boolean getIsActive() {
        return isActive_;
      }

      public static final int SUPERSTEPS_FIELD_NUMBER = 2;
      private int supersteps_;
      /**
       * <code>optional int32 Supersteps = 2;</code>
       */
      public boolean hasSupersteps() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 Supersteps = 2;</code>
       */
      public int getSupersteps() {
        return supersteps_;
      }

      public static final int LOCALSUPERSTEPS_FIELD_NUMBER = 3;
      private int localSupersteps_;
      /**
       * <code>optional int32 LocalSupersteps = 3;</code>
       */
      public boolean hasLocalSupersteps() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 LocalSupersteps = 3;</code>
       */
      public int getLocalSupersteps() {
        return localSupersteps_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBool(1, isActive_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, supersteps_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, localSupersteps_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, isActive_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, supersteps_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, localSupersteps_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage)) {
          return super.equals(obj);
        }
        mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage other = (mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage) obj;

        boolean result = true;
        result = result && (hasIsActive() == other.hasIsActive());
        if (hasIsActive()) {
          result = result && (getIsActive()
              == other.getIsActive());
        }
        result = result && (hasSupersteps() == other.hasSupersteps());
        if (hasSupersteps()) {
          result = result && (getSupersteps()
              == other.getSupersteps());
        }
        result = result && (hasLocalSupersteps() == other.hasLocalSupersteps());
        if (hasLocalSupersteps()) {
          result = result && (getLocalSupersteps()
              == other.getLocalSupersteps());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        if (hasIsActive()) {
          hash = (37 * hash) + ISACTIVE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getIsActive());
        }
        if (hasSupersteps()) {
          hash = (37 * hash) + SUPERSTEPS_FIELD_NUMBER;
          hash = (53 * hash) + getSupersteps();
        }
        if (hasLocalSupersteps()) {
          hash = (37 * hash) + LOCALSUPERSTEPS_FIELD_NUMBER;
          hash = (53 * hash) + getLocalSupersteps();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage)
          mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessageOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_QueryVertexQueryMessage_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_QueryVertexQueryMessage_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage.class, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage.Builder.class);
        }

        // Construct using mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          isActive_ = false;
          bitField0_ = (bitField0_ & ~0x00000001);
          supersteps_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          localSupersteps_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_QueryVertexQueryMessage_descriptor;
        }

        public mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage getDefaultInstanceForType() {
          return mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage.getDefaultInstance();
        }

        public mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage build() {
          mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage buildPartial() {
          mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage result = new mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.isActive_ = isActive_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.supersteps_ = supersteps_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.localSupersteps_ = localSupersteps_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage) {
            return mergeFrom((mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage other) {
          if (other == mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage.getDefaultInstance()) return this;
          if (other.hasIsActive()) {
            setIsActive(other.getIsActive());
          }
          if (other.hasSupersteps()) {
            setSupersteps(other.getSupersteps());
          }
          if (other.hasLocalSupersteps()) {
            setLocalSupersteps(other.getLocalSupersteps());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private boolean isActive_ ;
        /**
         * <code>optional bool IsActive = 1;</code>
         */
        public boolean hasIsActive() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional bool IsActive = 1;</code>
         */
        public boolean getIsActive() {
          return isActive_;
        }
        /**
         * <code>optional bool IsActive = 1;</code>
         */
        public Builder setIsActive(boolean value) {
          bitField0_ |= 0x00000001;
          isActive_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool IsActive = 1;</code>
         */
        public Builder clearIsActive() {
          bitField0_ = (bitField0_ & ~0x00000001);
          isActive_ = false;
          onChanged();
          return this;
        }

        private int supersteps_ ;
        /**
         * <code>optional int32 Supersteps = 2;</code>
         */
        public boolean hasSupersteps() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 Supersteps = 2;</code>
         */
        public int getSupersteps() {
          return supersteps_;
        }
        /**
         * <code>optional int32 Supersteps = 2;</code>
         */
        public Builder setSupersteps(int value) {
          bitField0_ |= 0x00000002;
          supersteps_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 Supersteps = 2;</code>
         */
        public Builder clearSupersteps() {
          bitField0_ = (bitField0_ & ~0x00000002);
          supersteps_ = 0;
          onChanged();
          return this;
        }

        private int localSupersteps_ ;
        /**
         * <code>optional int32 LocalSupersteps = 3;</code>
         */
        public boolean hasLocalSupersteps() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 LocalSupersteps = 3;</code>
         */
        public int getLocalSupersteps() {
          return localSupersteps_;
        }
        /**
         * <code>optional int32 LocalSupersteps = 3;</code>
         */
        public Builder setLocalSupersteps(int value) {
          bitField0_ |= 0x00000004;
          localSupersteps_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 LocalSupersteps = 3;</code>
         */
        public Builder clearLocalSupersteps() {
          bitField0_ = (bitField0_ & ~0x00000004);
          localSupersteps_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage)
      }

      // @@protoc_insertion_point(class_scope:mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexQueryMessage)
      private static final mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage();
      }

      public static mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<QueryVertexQueryMessage>
          PARSER = new com.google.protobuf.AbstractParser<QueryVertexQueryMessage>() {
        public QueryVertexQueryMessage parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new QueryVertexQueryMessage(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<QueryVertexQueryMessage> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<QueryVertexQueryMessage> getParserForType() {
        return PARSER;
      }

      public mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexQueryMessage getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessageType Type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessageType Type = 1;</code>
     */
    public mthesis.concurrent_graph.communication.Messages.ControlMessageType getType() {
      mthesis.concurrent_graph.communication.Messages.ControlMessageType result = mthesis.concurrent_graph.communication.Messages.ControlMessageType.valueOf(type_);
      return result == null ? mthesis.concurrent_graph.communication.Messages.ControlMessageType.Channel_Handshake : result;
    }

    public static final int SUPERSTEPNO_FIELD_NUMBER = 2;
    private int superstepNo_;
    /**
     * <code>optional int32 SuperstepNo = 2;</code>
     */
    public boolean hasSuperstepNo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 SuperstepNo = 2;</code>
     */
    public int getSuperstepNo() {
      return superstepNo_;
    }

    public static final int SRCMACHINE_FIELD_NUMBER = 3;
    private int srcMachine_;
    /**
     * <code>optional int32 SrcMachine = 3;</code>
     */
    public boolean hasSrcMachine() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 SrcMachine = 3;</code>
     */
    public int getSrcMachine() {
      return srcMachine_;
    }

    public static final int ASSIGNPARTITIONS_FIELD_NUMBER = 5;
    private mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage assignPartitions_;
    /**
     * <pre>
     *optional WorkerStatsMessage WorkerStats = 4;
     * </pre>
     *
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.AssignPartitionsMessage AssignPartitions = 5;</code>
     */
    public boolean hasAssignPartitions() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *optional WorkerStatsMessage WorkerStats = 4;
     * </pre>
     *
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.AssignPartitionsMessage AssignPartitions = 5;</code>
     */
    public mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage getAssignPartitions() {
      return assignPartitions_ == null ? mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage.getDefaultInstance() : assignPartitions_;
    }
    /**
     * <pre>
     *optional WorkerStatsMessage WorkerStats = 4;
     * </pre>
     *
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.AssignPartitionsMessage AssignPartitions = 5;</code>
     */
    public mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessageOrBuilder getAssignPartitionsOrBuilder() {
      return assignPartitions_ == null ? mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage.getDefaultInstance() : assignPartitions_;
    }

    public static final int QUERYVALUES_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString queryValues_;
    /**
     * <code>optional bytes QueryValues = 6;</code>
     */
    public boolean hasQueryValues() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bytes QueryValues = 6;</code>
     */
    public com.google.protobuf.ByteString getQueryValues() {
      return queryValues_;
    }

    public static final int WORKERINITIALIZED_FIELD_NUMBER = 7;
    private mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage workerInitialized_;
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerInitializedMessage WorkerInitialized = 7;</code>
     */
    public boolean hasWorkerInitialized() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerInitializedMessage WorkerInitialized = 7;</code>
     */
    public mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage getWorkerInitialized() {
      return workerInitialized_ == null ? mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage.getDefaultInstance() : workerInitialized_;
    }
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerInitializedMessage WorkerInitialized = 7;</code>
     */
    public mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessageOrBuilder getWorkerInitializedOrBuilder() {
      return workerInitialized_ == null ? mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage.getDefaultInstance() : workerInitialized_;
    }

    public static final int STARTBARRIER_FIELD_NUMBER = 11;
    private mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage startBarrier_;
    /**
     * <pre>
     *optional QueriesIntersectionsMessage QueriesIntersections = 8;
     *optional SendQueryVerticesMessage SendQueryVertices = 9;
     *optional ReceiveQueryVerticesMessage ReceiveQueryVertices = 10;
     * </pre>
     *
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage StartBarrier = 11;</code>
     */
    public boolean hasStartBarrier() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     *optional QueriesIntersectionsMessage QueriesIntersections = 8;
     *optional SendQueryVerticesMessage SendQueryVertices = 9;
     *optional ReceiveQueryVerticesMessage ReceiveQueryVertices = 10;
     * </pre>
     *
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage StartBarrier = 11;</code>
     */
    public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage getStartBarrier() {
      return startBarrier_ == null ? mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.getDefaultInstance() : startBarrier_;
    }
    /**
     * <pre>
     *optional QueriesIntersectionsMessage QueriesIntersections = 8;
     *optional SendQueryVerticesMessage SendQueryVertices = 9;
     *optional ReceiveQueryVerticesMessage ReceiveQueryVertices = 10;
     * </pre>
     *
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage StartBarrier = 11;</code>
     */
    public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessageOrBuilder getStartBarrierOrBuilder() {
      return startBarrier_ == null ? mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.getDefaultInstance() : startBarrier_;
    }

    public static final int WORKERSTATS_FIELD_NUMBER = 12;
    private mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage workerStats_;
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage WorkerStats = 12;</code>
     */
    public boolean hasWorkerStats() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage WorkerStats = 12;</code>
     */
    public mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage getWorkerStats() {
      return workerStats_ == null ? mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.getDefaultInstance() : workerStats_;
    }
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage WorkerStats = 12;</code>
     */
    public mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessageOrBuilder getWorkerStatsOrBuilder() {
      return workerStats_ == null ? mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.getDefaultInstance() : workerStats_;
    }

    public static final int STARTSUPERSTEP_FIELD_NUMBER = 13;
    private mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage startSuperstep_;
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.StartSuperstepMessage StartSuperstep = 13;</code>
     */
    public boolean hasStartSuperstep() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.StartSuperstepMessage StartSuperstep = 13;</code>
     */
    public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage getStartSuperstep() {
      return startSuperstep_ == null ? mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage.getDefaultInstance() : startSuperstep_;
    }
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.StartSuperstepMessage StartSuperstep = 13;</code>
     */
    public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessageOrBuilder getStartSuperstepOrBuilder() {
      return startSuperstep_ == null ? mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage.getDefaultInstance() : startSuperstep_;
    }

    public static final int QUERYVERTEXCHUNKS_FIELD_NUMBER = 14;
    private mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage queryVertexChunks_;
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMessage QueryVertexChunks = 14;</code>
     */
    public boolean hasQueryVertexChunks() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMessage QueryVertexChunks = 14;</code>
     */
    public mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage getQueryVertexChunks() {
      return queryVertexChunks_ == null ? mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage.getDefaultInstance() : queryVertexChunks_;
    }
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMessage QueryVertexChunks = 14;</code>
     */
    public mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessageOrBuilder getQueryVertexChunksOrBuilder() {
      return queryVertexChunks_ == null ? mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage.getDefaultInstance() : queryVertexChunks_;
    }

    public static final int SUPERSTEPQUERYEXECUTION_FIELD_NUMBER = 15;
    private int superstepQueryExecution_;
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.WorkerQueryExecutionMode SuperstepQueryExecution = 15;</code>
     */
    public boolean hasSuperstepQueryExecution() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .mthesis.concurrent_graph.communication.messages.WorkerQueryExecutionMode SuperstepQueryExecution = 15;</code>
     */
    public mthesis.concurrent_graph.communication.Messages.WorkerQueryExecutionMode getSuperstepQueryExecution() {
      mthesis.concurrent_graph.communication.Messages.WorkerQueryExecutionMode result = mthesis.concurrent_graph.communication.Messages.WorkerQueryExecutionMode.valueOf(superstepQueryExecution_);
      return result == null ? mthesis.concurrent_graph.communication.Messages.WorkerQueryExecutionMode.NonLocal : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, superstepNo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, srcMachine_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(5, getAssignPartitions());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(6, queryValues_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(7, getWorkerInitialized());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(11, getStartBarrier());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(12, getWorkerStats());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(13, getStartSuperstep());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(14, getQueryVertexChunks());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeEnum(15, superstepQueryExecution_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, superstepNo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, srcMachine_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getAssignPartitions());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, queryValues_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getWorkerInitialized());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getStartBarrier());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getWorkerStats());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getStartSuperstep());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, getQueryVertexChunks());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(15, superstepQueryExecution_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof mthesis.concurrent_graph.communication.Messages.ControlMessage)) {
        return super.equals(obj);
      }
      mthesis.concurrent_graph.communication.Messages.ControlMessage other = (mthesis.concurrent_graph.communication.Messages.ControlMessage) obj;

      boolean result = true;
      result = result && (hasType() == other.hasType());
      if (hasType()) {
        result = result && type_ == other.type_;
      }
      result = result && (hasSuperstepNo() == other.hasSuperstepNo());
      if (hasSuperstepNo()) {
        result = result && (getSuperstepNo()
            == other.getSuperstepNo());
      }
      result = result && (hasSrcMachine() == other.hasSrcMachine());
      if (hasSrcMachine()) {
        result = result && (getSrcMachine()
            == other.getSrcMachine());
      }
      result = result && (hasAssignPartitions() == other.hasAssignPartitions());
      if (hasAssignPartitions()) {
        result = result && getAssignPartitions()
            .equals(other.getAssignPartitions());
      }
      result = result && (hasQueryValues() == other.hasQueryValues());
      if (hasQueryValues()) {
        result = result && getQueryValues()
            .equals(other.getQueryValues());
      }
      result = result && (hasWorkerInitialized() == other.hasWorkerInitialized());
      if (hasWorkerInitialized()) {
        result = result && getWorkerInitialized()
            .equals(other.getWorkerInitialized());
      }
      result = result && (hasStartBarrier() == other.hasStartBarrier());
      if (hasStartBarrier()) {
        result = result && getStartBarrier()
            .equals(other.getStartBarrier());
      }
      result = result && (hasWorkerStats() == other.hasWorkerStats());
      if (hasWorkerStats()) {
        result = result && getWorkerStats()
            .equals(other.getWorkerStats());
      }
      result = result && (hasStartSuperstep() == other.hasStartSuperstep());
      if (hasStartSuperstep()) {
        result = result && getStartSuperstep()
            .equals(other.getStartSuperstep());
      }
      result = result && (hasQueryVertexChunks() == other.hasQueryVertexChunks());
      if (hasQueryVertexChunks()) {
        result = result && getQueryVertexChunks()
            .equals(other.getQueryVertexChunks());
      }
      result = result && (hasSuperstepQueryExecution() == other.hasSuperstepQueryExecution());
      if (hasSuperstepQueryExecution()) {
        result = result && superstepQueryExecution_ == other.superstepQueryExecution_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
      }
      if (hasSuperstepNo()) {
        hash = (37 * hash) + SUPERSTEPNO_FIELD_NUMBER;
        hash = (53 * hash) + getSuperstepNo();
      }
      if (hasSrcMachine()) {
        hash = (37 * hash) + SRCMACHINE_FIELD_NUMBER;
        hash = (53 * hash) + getSrcMachine();
      }
      if (hasAssignPartitions()) {
        hash = (37 * hash) + ASSIGNPARTITIONS_FIELD_NUMBER;
        hash = (53 * hash) + getAssignPartitions().hashCode();
      }
      if (hasQueryValues()) {
        hash = (37 * hash) + QUERYVALUES_FIELD_NUMBER;
        hash = (53 * hash) + getQueryValues().hashCode();
      }
      if (hasWorkerInitialized()) {
        hash = (37 * hash) + WORKERINITIALIZED_FIELD_NUMBER;
        hash = (53 * hash) + getWorkerInitialized().hashCode();
      }
      if (hasStartBarrier()) {
        hash = (37 * hash) + STARTBARRIER_FIELD_NUMBER;
        hash = (53 * hash) + getStartBarrier().hashCode();
      }
      if (hasWorkerStats()) {
        hash = (37 * hash) + WORKERSTATS_FIELD_NUMBER;
        hash = (53 * hash) + getWorkerStats().hashCode();
      }
      if (hasStartSuperstep()) {
        hash = (37 * hash) + STARTSUPERSTEP_FIELD_NUMBER;
        hash = (53 * hash) + getStartSuperstep().hashCode();
      }
      if (hasQueryVertexChunks()) {
        hash = (37 * hash) + QUERYVERTEXCHUNKS_FIELD_NUMBER;
        hash = (53 * hash) + getQueryVertexChunks().hashCode();
      }
      if (hasSuperstepQueryExecution()) {
        hash = (37 * hash) + SUPERSTEPQUERYEXECUTION_FIELD_NUMBER;
        hash = (53 * hash) + superstepQueryExecution_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static mthesis.concurrent_graph.communication.Messages.ControlMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mthesis.concurrent_graph.communication.Messages.ControlMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mthesis.concurrent_graph.communication.Messages.ControlMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static mthesis.concurrent_graph.communication.Messages.ControlMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static mthesis.concurrent_graph.communication.Messages.ControlMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static mthesis.concurrent_graph.communication.Messages.ControlMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static mthesis.concurrent_graph.communication.Messages.ControlMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static mthesis.concurrent_graph.communication.Messages.ControlMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static mthesis.concurrent_graph.communication.Messages.ControlMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static mthesis.concurrent_graph.communication.Messages.ControlMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mthesis.concurrent_graph.communication.Messages.ControlMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mthesis.concurrent_graph.communication.messages.ControlMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:mthesis.concurrent_graph.communication.messages.ControlMessage)
        mthesis.concurrent_graph.communication.Messages.ControlMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                mthesis.concurrent_graph.communication.Messages.ControlMessage.class, mthesis.concurrent_graph.communication.Messages.ControlMessage.Builder.class);
      }

      // Construct using mthesis.concurrent_graph.communication.Messages.ControlMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getAssignPartitionsFieldBuilder();
          getWorkerInitializedFieldBuilder();
          getStartBarrierFieldBuilder();
          getWorkerStatsFieldBuilder();
          getStartSuperstepFieldBuilder();
          getQueryVertexChunksFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        type_ = 1;
        bitField0_ = (bitField0_ & ~0x00000001);
        superstepNo_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        srcMachine_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (assignPartitionsBuilder_ == null) {
          assignPartitions_ = null;
        } else {
          assignPartitionsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        queryValues_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (workerInitializedBuilder_ == null) {
          workerInitialized_ = null;
        } else {
          workerInitializedBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (startBarrierBuilder_ == null) {
          startBarrier_ = null;
        } else {
          startBarrierBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (workerStatsBuilder_ == null) {
          workerStats_ = null;
        } else {
          workerStatsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (startSuperstepBuilder_ == null) {
          startSuperstep_ = null;
        } else {
          startSuperstepBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (queryVertexChunksBuilder_ == null) {
          queryVertexChunks_ = null;
        } else {
          queryVertexChunksBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        superstepQueryExecution_ = 1;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mthesis.concurrent_graph.communication.Messages.internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_descriptor;
      }

      public mthesis.concurrent_graph.communication.Messages.ControlMessage getDefaultInstanceForType() {
        return mthesis.concurrent_graph.communication.Messages.ControlMessage.getDefaultInstance();
      }

      public mthesis.concurrent_graph.communication.Messages.ControlMessage build() {
        mthesis.concurrent_graph.communication.Messages.ControlMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public mthesis.concurrent_graph.communication.Messages.ControlMessage buildPartial() {
        mthesis.concurrent_graph.communication.Messages.ControlMessage result = new mthesis.concurrent_graph.communication.Messages.ControlMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.superstepNo_ = superstepNo_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.srcMachine_ = srcMachine_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (assignPartitionsBuilder_ == null) {
          result.assignPartitions_ = assignPartitions_;
        } else {
          result.assignPartitions_ = assignPartitionsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.queryValues_ = queryValues_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (workerInitializedBuilder_ == null) {
          result.workerInitialized_ = workerInitialized_;
        } else {
          result.workerInitialized_ = workerInitializedBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (startBarrierBuilder_ == null) {
          result.startBarrier_ = startBarrier_;
        } else {
          result.startBarrier_ = startBarrierBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (workerStatsBuilder_ == null) {
          result.workerStats_ = workerStats_;
        } else {
          result.workerStats_ = workerStatsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (startSuperstepBuilder_ == null) {
          result.startSuperstep_ = startSuperstep_;
        } else {
          result.startSuperstep_ = startSuperstepBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        if (queryVertexChunksBuilder_ == null) {
          result.queryVertexChunks_ = queryVertexChunks_;
        } else {
          result.queryVertexChunks_ = queryVertexChunksBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.superstepQueryExecution_ = superstepQueryExecution_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mthesis.concurrent_graph.communication.Messages.ControlMessage) {
          return mergeFrom((mthesis.concurrent_graph.communication.Messages.ControlMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(mthesis.concurrent_graph.communication.Messages.ControlMessage other) {
        if (other == mthesis.concurrent_graph.communication.Messages.ControlMessage.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasSuperstepNo()) {
          setSuperstepNo(other.getSuperstepNo());
        }
        if (other.hasSrcMachine()) {
          setSrcMachine(other.getSrcMachine());
        }
        if (other.hasAssignPartitions()) {
          mergeAssignPartitions(other.getAssignPartitions());
        }
        if (other.hasQueryValues()) {
          setQueryValues(other.getQueryValues());
        }
        if (other.hasWorkerInitialized()) {
          mergeWorkerInitialized(other.getWorkerInitialized());
        }
        if (other.hasStartBarrier()) {
          mergeStartBarrier(other.getStartBarrier());
        }
        if (other.hasWorkerStats()) {
          mergeWorkerStats(other.getWorkerStats());
        }
        if (other.hasStartSuperstep()) {
          mergeStartSuperstep(other.getStartSuperstep());
        }
        if (other.hasQueryVertexChunks()) {
          mergeQueryVertexChunks(other.getQueryVertexChunks());
        }
        if (other.hasSuperstepQueryExecution()) {
          setSuperstepQueryExecution(other.getSuperstepQueryExecution());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        mthesis.concurrent_graph.communication.Messages.ControlMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mthesis.concurrent_graph.communication.Messages.ControlMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int type_ = 1;
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessageType Type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessageType Type = 1;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessageType getType() {
        mthesis.concurrent_graph.communication.Messages.ControlMessageType result = mthesis.concurrent_graph.communication.Messages.ControlMessageType.valueOf(type_);
        return result == null ? mthesis.concurrent_graph.communication.Messages.ControlMessageType.Channel_Handshake : result;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessageType Type = 1;</code>
       */
      public Builder setType(mthesis.concurrent_graph.communication.Messages.ControlMessageType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessageType Type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 1;
        onChanged();
        return this;
      }

      private int superstepNo_ ;
      /**
       * <code>optional int32 SuperstepNo = 2;</code>
       */
      public boolean hasSuperstepNo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 SuperstepNo = 2;</code>
       */
      public int getSuperstepNo() {
        return superstepNo_;
      }
      /**
       * <code>optional int32 SuperstepNo = 2;</code>
       */
      public Builder setSuperstepNo(int value) {
        bitField0_ |= 0x00000002;
        superstepNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 SuperstepNo = 2;</code>
       */
      public Builder clearSuperstepNo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        superstepNo_ = 0;
        onChanged();
        return this;
      }

      private int srcMachine_ ;
      /**
       * <code>optional int32 SrcMachine = 3;</code>
       */
      public boolean hasSrcMachine() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 SrcMachine = 3;</code>
       */
      public int getSrcMachine() {
        return srcMachine_;
      }
      /**
       * <code>optional int32 SrcMachine = 3;</code>
       */
      public Builder setSrcMachine(int value) {
        bitField0_ |= 0x00000004;
        srcMachine_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 SrcMachine = 3;</code>
       */
      public Builder clearSrcMachine() {
        bitField0_ = (bitField0_ & ~0x00000004);
        srcMachine_ = 0;
        onChanged();
        return this;
      }

      private mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage assignPartitions_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessageOrBuilder> assignPartitionsBuilder_;
      /**
       * <pre>
       *optional WorkerStatsMessage WorkerStats = 4;
       * </pre>
       *
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.AssignPartitionsMessage AssignPartitions = 5;</code>
       */
      public boolean hasAssignPartitions() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       *optional WorkerStatsMessage WorkerStats = 4;
       * </pre>
       *
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.AssignPartitionsMessage AssignPartitions = 5;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage getAssignPartitions() {
        if (assignPartitionsBuilder_ == null) {
          return assignPartitions_ == null ? mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage.getDefaultInstance() : assignPartitions_;
        } else {
          return assignPartitionsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *optional WorkerStatsMessage WorkerStats = 4;
       * </pre>
       *
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.AssignPartitionsMessage AssignPartitions = 5;</code>
       */
      public Builder setAssignPartitions(mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage value) {
        if (assignPartitionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          assignPartitions_ = value;
          onChanged();
        } else {
          assignPartitionsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       *optional WorkerStatsMessage WorkerStats = 4;
       * </pre>
       *
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.AssignPartitionsMessage AssignPartitions = 5;</code>
       */
      public Builder setAssignPartitions(
          mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage.Builder builderForValue) {
        if (assignPartitionsBuilder_ == null) {
          assignPartitions_ = builderForValue.build();
          onChanged();
        } else {
          assignPartitionsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       *optional WorkerStatsMessage WorkerStats = 4;
       * </pre>
       *
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.AssignPartitionsMessage AssignPartitions = 5;</code>
       */
      public Builder mergeAssignPartitions(mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage value) {
        if (assignPartitionsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              assignPartitions_ != null &&
              assignPartitions_ != mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage.getDefaultInstance()) {
            assignPartitions_ =
              mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage.newBuilder(assignPartitions_).mergeFrom(value).buildPartial();
          } else {
            assignPartitions_ = value;
          }
          onChanged();
        } else {
          assignPartitionsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       *optional WorkerStatsMessage WorkerStats = 4;
       * </pre>
       *
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.AssignPartitionsMessage AssignPartitions = 5;</code>
       */
      public Builder clearAssignPartitions() {
        if (assignPartitionsBuilder_ == null) {
          assignPartitions_ = null;
          onChanged();
        } else {
          assignPartitionsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <pre>
       *optional WorkerStatsMessage WorkerStats = 4;
       * </pre>
       *
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.AssignPartitionsMessage AssignPartitions = 5;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage.Builder getAssignPartitionsBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getAssignPartitionsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *optional WorkerStatsMessage WorkerStats = 4;
       * </pre>
       *
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.AssignPartitionsMessage AssignPartitions = 5;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessageOrBuilder getAssignPartitionsOrBuilder() {
        if (assignPartitionsBuilder_ != null) {
          return assignPartitionsBuilder_.getMessageOrBuilder();
        } else {
          return assignPartitions_ == null ?
              mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage.getDefaultInstance() : assignPartitions_;
        }
      }
      /**
       * <pre>
       *optional WorkerStatsMessage WorkerStats = 4;
       * </pre>
       *
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.AssignPartitionsMessage AssignPartitions = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessageOrBuilder> 
          getAssignPartitionsFieldBuilder() {
        if (assignPartitionsBuilder_ == null) {
          assignPartitionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessage.AssignPartitionsMessageOrBuilder>(
                  getAssignPartitions(),
                  getParentForChildren(),
                  isClean());
          assignPartitions_ = null;
        }
        return assignPartitionsBuilder_;
      }

      private com.google.protobuf.ByteString queryValues_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes QueryValues = 6;</code>
       */
      public boolean hasQueryValues() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bytes QueryValues = 6;</code>
       */
      public com.google.protobuf.ByteString getQueryValues() {
        return queryValues_;
      }
      /**
       * <code>optional bytes QueryValues = 6;</code>
       */
      public Builder setQueryValues(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        queryValues_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes QueryValues = 6;</code>
       */
      public Builder clearQueryValues() {
        bitField0_ = (bitField0_ & ~0x00000010);
        queryValues_ = getDefaultInstance().getQueryValues();
        onChanged();
        return this;
      }

      private mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage workerInitialized_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessageOrBuilder> workerInitializedBuilder_;
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerInitializedMessage WorkerInitialized = 7;</code>
       */
      public boolean hasWorkerInitialized() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerInitializedMessage WorkerInitialized = 7;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage getWorkerInitialized() {
        if (workerInitializedBuilder_ == null) {
          return workerInitialized_ == null ? mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage.getDefaultInstance() : workerInitialized_;
        } else {
          return workerInitializedBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerInitializedMessage WorkerInitialized = 7;</code>
       */
      public Builder setWorkerInitialized(mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage value) {
        if (workerInitializedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          workerInitialized_ = value;
          onChanged();
        } else {
          workerInitializedBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerInitializedMessage WorkerInitialized = 7;</code>
       */
      public Builder setWorkerInitialized(
          mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage.Builder builderForValue) {
        if (workerInitializedBuilder_ == null) {
          workerInitialized_ = builderForValue.build();
          onChanged();
        } else {
          workerInitializedBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerInitializedMessage WorkerInitialized = 7;</code>
       */
      public Builder mergeWorkerInitialized(mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage value) {
        if (workerInitializedBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              workerInitialized_ != null &&
              workerInitialized_ != mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage.getDefaultInstance()) {
            workerInitialized_ =
              mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage.newBuilder(workerInitialized_).mergeFrom(value).buildPartial();
          } else {
            workerInitialized_ = value;
          }
          onChanged();
        } else {
          workerInitializedBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerInitializedMessage WorkerInitialized = 7;</code>
       */
      public Builder clearWorkerInitialized() {
        if (workerInitializedBuilder_ == null) {
          workerInitialized_ = null;
          onChanged();
        } else {
          workerInitializedBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerInitializedMessage WorkerInitialized = 7;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage.Builder getWorkerInitializedBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getWorkerInitializedFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerInitializedMessage WorkerInitialized = 7;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessageOrBuilder getWorkerInitializedOrBuilder() {
        if (workerInitializedBuilder_ != null) {
          return workerInitializedBuilder_.getMessageOrBuilder();
        } else {
          return workerInitialized_ == null ?
              mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage.getDefaultInstance() : workerInitialized_;
        }
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerInitializedMessage WorkerInitialized = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessageOrBuilder> 
          getWorkerInitializedFieldBuilder() {
        if (workerInitializedBuilder_ == null) {
          workerInitializedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerInitializedMessageOrBuilder>(
                  getWorkerInitialized(),
                  getParentForChildren(),
                  isClean());
          workerInitialized_ = null;
        }
        return workerInitializedBuilder_;
      }

      private mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage startBarrier_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessageOrBuilder> startBarrierBuilder_;
      /**
       * <pre>
       *optional QueriesIntersectionsMessage QueriesIntersections = 8;
       *optional SendQueryVerticesMessage SendQueryVertices = 9;
       *optional ReceiveQueryVerticesMessage ReceiveQueryVertices = 10;
       * </pre>
       *
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage StartBarrier = 11;</code>
       */
      public boolean hasStartBarrier() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       *optional QueriesIntersectionsMessage QueriesIntersections = 8;
       *optional SendQueryVerticesMessage SendQueryVertices = 9;
       *optional ReceiveQueryVerticesMessage ReceiveQueryVertices = 10;
       * </pre>
       *
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage StartBarrier = 11;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage getStartBarrier() {
        if (startBarrierBuilder_ == null) {
          return startBarrier_ == null ? mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.getDefaultInstance() : startBarrier_;
        } else {
          return startBarrierBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *optional QueriesIntersectionsMessage QueriesIntersections = 8;
       *optional SendQueryVerticesMessage SendQueryVertices = 9;
       *optional ReceiveQueryVerticesMessage ReceiveQueryVertices = 10;
       * </pre>
       *
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage StartBarrier = 11;</code>
       */
      public Builder setStartBarrier(mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage value) {
        if (startBarrierBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          startBarrier_ = value;
          onChanged();
        } else {
          startBarrierBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <pre>
       *optional QueriesIntersectionsMessage QueriesIntersections = 8;
       *optional SendQueryVerticesMessage SendQueryVertices = 9;
       *optional ReceiveQueryVerticesMessage ReceiveQueryVertices = 10;
       * </pre>
       *
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage StartBarrier = 11;</code>
       */
      public Builder setStartBarrier(
          mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.Builder builderForValue) {
        if (startBarrierBuilder_ == null) {
          startBarrier_ = builderForValue.build();
          onChanged();
        } else {
          startBarrierBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <pre>
       *optional QueriesIntersectionsMessage QueriesIntersections = 8;
       *optional SendQueryVerticesMessage SendQueryVertices = 9;
       *optional ReceiveQueryVerticesMessage ReceiveQueryVertices = 10;
       * </pre>
       *
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage StartBarrier = 11;</code>
       */
      public Builder mergeStartBarrier(mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage value) {
        if (startBarrierBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              startBarrier_ != null &&
              startBarrier_ != mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.getDefaultInstance()) {
            startBarrier_ =
              mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.newBuilder(startBarrier_).mergeFrom(value).buildPartial();
          } else {
            startBarrier_ = value;
          }
          onChanged();
        } else {
          startBarrierBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <pre>
       *optional QueriesIntersectionsMessage QueriesIntersections = 8;
       *optional SendQueryVerticesMessage SendQueryVertices = 9;
       *optional ReceiveQueryVerticesMessage ReceiveQueryVertices = 10;
       * </pre>
       *
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage StartBarrier = 11;</code>
       */
      public Builder clearStartBarrier() {
        if (startBarrierBuilder_ == null) {
          startBarrier_ = null;
          onChanged();
        } else {
          startBarrierBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <pre>
       *optional QueriesIntersectionsMessage QueriesIntersections = 8;
       *optional SendQueryVerticesMessage SendQueryVertices = 9;
       *optional ReceiveQueryVerticesMessage ReceiveQueryVertices = 10;
       * </pre>
       *
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage StartBarrier = 11;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.Builder getStartBarrierBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getStartBarrierFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *optional QueriesIntersectionsMessage QueriesIntersections = 8;
       *optional SendQueryVerticesMessage SendQueryVertices = 9;
       *optional ReceiveQueryVerticesMessage ReceiveQueryVertices = 10;
       * </pre>
       *
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage StartBarrier = 11;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessageOrBuilder getStartBarrierOrBuilder() {
        if (startBarrierBuilder_ != null) {
          return startBarrierBuilder_.getMessageOrBuilder();
        } else {
          return startBarrier_ == null ?
              mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.getDefaultInstance() : startBarrier_;
        }
      }
      /**
       * <pre>
       *optional QueriesIntersectionsMessage QueriesIntersections = 8;
       *optional SendQueryVerticesMessage SendQueryVertices = 9;
       *optional ReceiveQueryVerticesMessage ReceiveQueryVertices = 10;
       * </pre>
       *
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.StartBarrierMessage StartBarrier = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessageOrBuilder> 
          getStartBarrierFieldBuilder() {
        if (startBarrierBuilder_ == null) {
          startBarrierBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartBarrierMessageOrBuilder>(
                  getStartBarrier(),
                  getParentForChildren(),
                  isClean());
          startBarrier_ = null;
        }
        return startBarrierBuilder_;
      }

      private mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage workerStats_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessageOrBuilder> workerStatsBuilder_;
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage WorkerStats = 12;</code>
       */
      public boolean hasWorkerStats() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage WorkerStats = 12;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage getWorkerStats() {
        if (workerStatsBuilder_ == null) {
          return workerStats_ == null ? mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.getDefaultInstance() : workerStats_;
        } else {
          return workerStatsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage WorkerStats = 12;</code>
       */
      public Builder setWorkerStats(mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage value) {
        if (workerStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          workerStats_ = value;
          onChanged();
        } else {
          workerStatsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage WorkerStats = 12;</code>
       */
      public Builder setWorkerStats(
          mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.Builder builderForValue) {
        if (workerStatsBuilder_ == null) {
          workerStats_ = builderForValue.build();
          onChanged();
        } else {
          workerStatsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage WorkerStats = 12;</code>
       */
      public Builder mergeWorkerStats(mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage value) {
        if (workerStatsBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              workerStats_ != null &&
              workerStats_ != mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.getDefaultInstance()) {
            workerStats_ =
              mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.newBuilder(workerStats_).mergeFrom(value).buildPartial();
          } else {
            workerStats_ = value;
          }
          onChanged();
        } else {
          workerStatsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage WorkerStats = 12;</code>
       */
      public Builder clearWorkerStats() {
        if (workerStatsBuilder_ == null) {
          workerStats_ = null;
          onChanged();
        } else {
          workerStatsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage WorkerStats = 12;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.Builder getWorkerStatsBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getWorkerStatsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage WorkerStats = 12;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessageOrBuilder getWorkerStatsOrBuilder() {
        if (workerStatsBuilder_ != null) {
          return workerStatsBuilder_.getMessageOrBuilder();
        } else {
          return workerStats_ == null ?
              mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.getDefaultInstance() : workerStats_;
        }
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.WorkerStatsMessage WorkerStats = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessageOrBuilder> 
          getWorkerStatsFieldBuilder() {
        if (workerStatsBuilder_ == null) {
          workerStatsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessage.WorkerStatsMessageOrBuilder>(
                  getWorkerStats(),
                  getParentForChildren(),
                  isClean());
          workerStats_ = null;
        }
        return workerStatsBuilder_;
      }

      private mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage startSuperstep_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessageOrBuilder> startSuperstepBuilder_;
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.StartSuperstepMessage StartSuperstep = 13;</code>
       */
      public boolean hasStartSuperstep() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.StartSuperstepMessage StartSuperstep = 13;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage getStartSuperstep() {
        if (startSuperstepBuilder_ == null) {
          return startSuperstep_ == null ? mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage.getDefaultInstance() : startSuperstep_;
        } else {
          return startSuperstepBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.StartSuperstepMessage StartSuperstep = 13;</code>
       */
      public Builder setStartSuperstep(mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage value) {
        if (startSuperstepBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          startSuperstep_ = value;
          onChanged();
        } else {
          startSuperstepBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.StartSuperstepMessage StartSuperstep = 13;</code>
       */
      public Builder setStartSuperstep(
          mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage.Builder builderForValue) {
        if (startSuperstepBuilder_ == null) {
          startSuperstep_ = builderForValue.build();
          onChanged();
        } else {
          startSuperstepBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.StartSuperstepMessage StartSuperstep = 13;</code>
       */
      public Builder mergeStartSuperstep(mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage value) {
        if (startSuperstepBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              startSuperstep_ != null &&
              startSuperstep_ != mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage.getDefaultInstance()) {
            startSuperstep_ =
              mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage.newBuilder(startSuperstep_).mergeFrom(value).buildPartial();
          } else {
            startSuperstep_ = value;
          }
          onChanged();
        } else {
          startSuperstepBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.StartSuperstepMessage StartSuperstep = 13;</code>
       */
      public Builder clearStartSuperstep() {
        if (startSuperstepBuilder_ == null) {
          startSuperstep_ = null;
          onChanged();
        } else {
          startSuperstepBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.StartSuperstepMessage StartSuperstep = 13;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage.Builder getStartSuperstepBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getStartSuperstepFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.StartSuperstepMessage StartSuperstep = 13;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessageOrBuilder getStartSuperstepOrBuilder() {
        if (startSuperstepBuilder_ != null) {
          return startSuperstepBuilder_.getMessageOrBuilder();
        } else {
          return startSuperstep_ == null ?
              mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage.getDefaultInstance() : startSuperstep_;
        }
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.StartSuperstepMessage StartSuperstep = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessageOrBuilder> 
          getStartSuperstepFieldBuilder() {
        if (startSuperstepBuilder_ == null) {
          startSuperstepBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessage.StartSuperstepMessageOrBuilder>(
                  getStartSuperstep(),
                  getParentForChildren(),
                  isClean());
          startSuperstep_ = null;
        }
        return startSuperstepBuilder_;
      }

      private mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage queryVertexChunks_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessageOrBuilder> queryVertexChunksBuilder_;
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMessage QueryVertexChunks = 14;</code>
       */
      public boolean hasQueryVertexChunks() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMessage QueryVertexChunks = 14;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage getQueryVertexChunks() {
        if (queryVertexChunksBuilder_ == null) {
          return queryVertexChunks_ == null ? mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage.getDefaultInstance() : queryVertexChunks_;
        } else {
          return queryVertexChunksBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMessage QueryVertexChunks = 14;</code>
       */
      public Builder setQueryVertexChunks(mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage value) {
        if (queryVertexChunksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          queryVertexChunks_ = value;
          onChanged();
        } else {
          queryVertexChunksBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMessage QueryVertexChunks = 14;</code>
       */
      public Builder setQueryVertexChunks(
          mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage.Builder builderForValue) {
        if (queryVertexChunksBuilder_ == null) {
          queryVertexChunks_ = builderForValue.build();
          onChanged();
        } else {
          queryVertexChunksBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMessage QueryVertexChunks = 14;</code>
       */
      public Builder mergeQueryVertexChunks(mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage value) {
        if (queryVertexChunksBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              queryVertexChunks_ != null &&
              queryVertexChunks_ != mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage.getDefaultInstance()) {
            queryVertexChunks_ =
              mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage.newBuilder(queryVertexChunks_).mergeFrom(value).buildPartial();
          } else {
            queryVertexChunks_ = value;
          }
          onChanged();
        } else {
          queryVertexChunksBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMessage QueryVertexChunks = 14;</code>
       */
      public Builder clearQueryVertexChunks() {
        if (queryVertexChunksBuilder_ == null) {
          queryVertexChunks_ = null;
          onChanged();
        } else {
          queryVertexChunksBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMessage QueryVertexChunks = 14;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage.Builder getQueryVertexChunksBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getQueryVertexChunksFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMessage QueryVertexChunks = 14;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessageOrBuilder getQueryVertexChunksOrBuilder() {
        if (queryVertexChunksBuilder_ != null) {
          return queryVertexChunksBuilder_.getMessageOrBuilder();
        } else {
          return queryVertexChunks_ == null ?
              mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage.getDefaultInstance() : queryVertexChunks_;
        }
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.ControlMessage.QueryVertexChunksMessage QueryVertexChunks = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessageOrBuilder> 
          getQueryVertexChunksFieldBuilder() {
        if (queryVertexChunksBuilder_ == null) {
          queryVertexChunksBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessage.Builder, mthesis.concurrent_graph.communication.Messages.ControlMessage.QueryVertexChunksMessageOrBuilder>(
                  getQueryVertexChunks(),
                  getParentForChildren(),
                  isClean());
          queryVertexChunks_ = null;
        }
        return queryVertexChunksBuilder_;
      }

      private int superstepQueryExecution_ = 1;
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.WorkerQueryExecutionMode SuperstepQueryExecution = 15;</code>
       */
      public boolean hasSuperstepQueryExecution() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.WorkerQueryExecutionMode SuperstepQueryExecution = 15;</code>
       */
      public mthesis.concurrent_graph.communication.Messages.WorkerQueryExecutionMode getSuperstepQueryExecution() {
        mthesis.concurrent_graph.communication.Messages.WorkerQueryExecutionMode result = mthesis.concurrent_graph.communication.Messages.WorkerQueryExecutionMode.valueOf(superstepQueryExecution_);
        return result == null ? mthesis.concurrent_graph.communication.Messages.WorkerQueryExecutionMode.NonLocal : result;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.WorkerQueryExecutionMode SuperstepQueryExecution = 15;</code>
       */
      public Builder setSuperstepQueryExecution(mthesis.concurrent_graph.communication.Messages.WorkerQueryExecutionMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000400;
        superstepQueryExecution_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .mthesis.concurrent_graph.communication.messages.WorkerQueryExecutionMode SuperstepQueryExecution = 15;</code>
       */
      public Builder clearSuperstepQueryExecution() {
        bitField0_ = (bitField0_ & ~0x00000400);
        superstepQueryExecution_ = 1;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:mthesis.concurrent_graph.communication.messages.ControlMessage)
    }

    // @@protoc_insertion_point(class_scope:mthesis.concurrent_graph.communication.messages.ControlMessage)
    private static final mthesis.concurrent_graph.communication.Messages.ControlMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new mthesis.concurrent_graph.communication.Messages.ControlMessage();
    }

    public static mthesis.concurrent_graph.communication.Messages.ControlMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ControlMessage>
        PARSER = new com.google.protobuf.AbstractParser<ControlMessage>() {
      public ControlMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ControlMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ControlMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ControlMessage> getParserForType() {
      return PARSER;
    }

    public mthesis.concurrent_graph.communication.Messages.ControlMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mthesis_concurrent_graph_communication_messages_MessageEnvelope_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mthesis_concurrent_graph_communication_messages_MessageEnvelope_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_AssignPartitionsMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_AssignPartitionsMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_WorkerInitializedMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_WorkerInitializedMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartSuperstepMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartSuperstepMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_QuerySuperstepsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_QuerySuperstepsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_SendQueryChunkMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_SendQueryChunkMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_ReceiveQueryChunkMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_ReceiveQueryChunkMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_WorkerStatsMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_WorkerStatsMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_WorkerStatsMessage_WorkerStatSample_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_WorkerStatsMessage_WorkerStatSample_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_QueryVertexChunksMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_QueryVertexChunksMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_QueryVertexChunksMapMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_QueryVertexChunksMapMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_QueryVertexQueryMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_QueryVertexQueryMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016Messages.proto\022/mthesis.concurrent_gra" +
      "ph.communication.messages\"j\n\017MessageEnve" +
      "lope\022W\n\016ControlMessage\030\001 \001(\0132?.mthesis.c" +
      "oncurrent_graph.communication.messages.C" +
      "ontrolMessage\"\276\023\n\016ControlMessage\022Q\n\004Type" +
      "\030\001 \001(\0162C.mthesis.concurrent_graph.commun" +
      "ication.messages.ControlMessageType\022\023\n\013S" +
      "uperstepNo\030\002 \001(\005\022\022\n\nSrcMachine\030\003 \001(\005\022q\n\020" +
      "AssignPartitions\030\005 \001(\0132W.mthesis.concurr" +
      "ent_graph.communication.messages.Control",
      "Message.AssignPartitionsMessage\022\023\n\013Query" +
      "Values\030\006 \001(\014\022s\n\021WorkerInitialized\030\007 \001(\0132" +
      "X.mthesis.concurrent_graph.communication" +
      ".messages.ControlMessage.WorkerInitializ" +
      "edMessage\022i\n\014StartBarrier\030\013 \001(\0132S.mthesi" +
      "s.concurrent_graph.communication.message" +
      "s.ControlMessage.StartBarrierMessage\022g\n\013" +
      "WorkerStats\030\014 \001(\0132R.mthesis.concurrent_g" +
      "raph.communication.messages.ControlMessa" +
      "ge.WorkerStatsMessage\022m\n\016StartSuperstep\030",
      "\r \001(\0132U.mthesis.concurrent_graph.communi" +
      "cation.messages.ControlMessage.StartSupe" +
      "rstepMessage\022s\n\021QueryVertexChunks\030\016 \001(\0132" +
      "X.mthesis.concurrent_graph.communication" +
      ".messages.ControlMessage.QueryVertexChun" +
      "ksMessage\022j\n\027SuperstepQueryExecution\030\017 \001" +
      "(\0162I.mthesis.concurrent_graph.communicat" +
      "ion.messages.WorkerQueryExecutionMode\032J\n" +
      "\027AssignPartitionsMessage\022\027\n\017MasterStartT" +
      "ime\030\001 \001(\003\022\026\n\016PartitionFiles\030\002 \003(\t\032/\n\030Wor",
      "kerInitializedMessage\022\023\n\013VertexCount\030\001 \001" +
      "(\005\032\230\001\n\025StartSuperstepMessage\022g\n\024WorkerQu" +
      "eryExecution\030\001 \001(\0162I.mthesis.concurrent_" +
      "graph.communication.messages.WorkerQuery" +
      "ExecutionMode\022\026\n\016WorkersWaitFor\030\002 \003(\005\032\246\005" +
      "\n\023StartBarrierMessage\022\201\001\n\017QuerySuperstep" +
      "s\030\001 \003(\0132h.mthesis.concurrent_graph.commu" +
      "nication.messages.ControlMessage.StartBa" +
      "rrierMessage.QuerySuperstepsEntry\022\202\001\n\017Se" +
      "ndQueryChunks\030\002 \003(\0132i.mthesis.concurrent",
      "_graph.communication.messages.ControlMes" +
      "sage.StartBarrierMessage.SendQueryChunkM" +
      "essage\022\210\001\n\022ReceiveQueryChunks\030\003 \003(\0132l.mt" +
      "hesis.concurrent_graph.communication.mes" +
      "sages.ControlMessage.StartBarrierMessage" +
      ".ReceiveQueryChunkMessage\0326\n\024QuerySupers" +
      "tepsEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028" +
      "\001\032u\n\025SendQueryChunkMessage\022\026\n\016IncludeQue" +
      "ries\030\001 \003(\005\022\027\n\017TolreateQueries\030\002 \003(\005\022\025\n\rM" +
      "oveToMachine\030\003 \001(\005\022\024\n\014MaxMoveCount\030\004 \001(\005",
      "\032L\n\030ReceiveQueryChunkMessage\022\024\n\014ChunkQue" +
      "ries\030\001 \003(\005\022\032\n\022ReceiveFromMachine\030\002 \001(\005\032\300" +
      "\001\n\022WorkerStatsMessage\022t\n\007Samples\030\001 \003(\0132c" +
      ".mthesis.concurrent_graph.communication." +
      "messages.ControlMessage.WorkerStatsMessa" +
      "ge.WorkerStatSample\0324\n\020WorkerStatSample\022" +
      "\014\n\004Time\030\001 \001(\003\022\022\n\nStatsBytes\030\002 \001(\014\032\361\001\n\030Qu" +
      "eryVertexChunksMessage\022k\n\006Chunks\030\001 \003(\0132[" +
      ".mthesis.concurrent_graph.communication." +
      "messages.ControlMessage.QueryVertexChunk",
      "sMapMessage\022h\n\007Queries\030\002 \003(\0132W.mthesis.c" +
      "oncurrent_graph.communication.messages.C" +
      "ontrolMessage.QueryVertexQueryMessage\032=\n" +
      "\033QueryVertexChunksMapMessage\022\017\n\007Queries\030" +
      "\001 \003(\005\022\r\n\005Count\030\002 \001(\005\032X\n\027QueryVertexQuery" +
      "Message\022\020\n\010IsActive\030\001 \001(\010\022\022\n\nSupersteps\030" +
      "\002 \001(\005\022\027\n\017LocalSupersteps\030\003 \001(\005*\306\003\n\022Contr" +
      "olMessageType\022\025\n\021Channel_Handshake\020\001\022\026\n\022" +
      "Worker_Initialized\020\002\022\"\n\036Worker_Query_Sup" +
      "erstep_Barrier\020\003\022#\n\037Worker_Query_Superst",
      "ep_Finished\020\004\022\031\n\025Worker_Query_Finished\020\005" +
      "\022\032\n\026Worker_Barrier_Started\020\014\022#\n\037Worker_B" +
      "arrier_Receive_Finished\020\017\022\033\n\027Worker_Barr" +
      "ier_Finished\020\r\022\034\n\030Master_Worker_Initiali" +
      "ze\020\006\022\026\n\022Master_Query_Start\020\007\022\037\n\033Master_Q" +
      "uery_Next_Superstep\020\010\022\031\n\025Master_Query_Fi" +
      "nished\020\t\022\023\n\017Master_Shutdown\020\n\022\030\n\024Master_" +
      "Start_Barrier\020\013\022\036\n\032Worker_Query_Vertex_C" +
      "hunks\020\016*]\n\030WorkerQueryExecutionMode\022\014\n\010N" +
      "onLocal\020\001\022\020\n\014NonLocalSkip\020\002\022\017\n\013LocalOnTh",
      "is\020\003\022\020\n\014LocalOnOther\020\004B2\n&mthesis.concur" +
      "rent_graph.communicationB\010Messages"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_mthesis_concurrent_graph_communication_messages_MessageEnvelope_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_mthesis_concurrent_graph_communication_messages_MessageEnvelope_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mthesis_concurrent_graph_communication_messages_MessageEnvelope_descriptor,
        new java.lang.String[] { "ControlMessage", });
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_descriptor,
        new java.lang.String[] { "Type", "SuperstepNo", "SrcMachine", "AssignPartitions", "QueryValues", "WorkerInitialized", "StartBarrier", "WorkerStats", "StartSuperstep", "QueryVertexChunks", "SuperstepQueryExecution", });
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_AssignPartitionsMessage_descriptor =
      internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_descriptor.getNestedTypes().get(0);
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_AssignPartitionsMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_AssignPartitionsMessage_descriptor,
        new java.lang.String[] { "MasterStartTime", "PartitionFiles", });
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_WorkerInitializedMessage_descriptor =
      internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_descriptor.getNestedTypes().get(1);
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_WorkerInitializedMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_WorkerInitializedMessage_descriptor,
        new java.lang.String[] { "VertexCount", });
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartSuperstepMessage_descriptor =
      internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_descriptor.getNestedTypes().get(2);
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartSuperstepMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartSuperstepMessage_descriptor,
        new java.lang.String[] { "WorkerQueryExecution", "WorkersWaitFor", });
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_descriptor =
      internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_descriptor.getNestedTypes().get(3);
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_descriptor,
        new java.lang.String[] { "QuerySupersteps", "SendQueryChunks", "ReceiveQueryChunks", });
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_QuerySuperstepsEntry_descriptor =
      internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_descriptor.getNestedTypes().get(0);
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_QuerySuperstepsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_QuerySuperstepsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_SendQueryChunkMessage_descriptor =
      internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_descriptor.getNestedTypes().get(1);
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_SendQueryChunkMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_SendQueryChunkMessage_descriptor,
        new java.lang.String[] { "IncludeQueries", "TolreateQueries", "MoveToMachine", "MaxMoveCount", });
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_ReceiveQueryChunkMessage_descriptor =
      internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_descriptor.getNestedTypes().get(2);
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_ReceiveQueryChunkMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_StartBarrierMessage_ReceiveQueryChunkMessage_descriptor,
        new java.lang.String[] { "ChunkQueries", "ReceiveFromMachine", });
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_WorkerStatsMessage_descriptor =
      internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_descriptor.getNestedTypes().get(4);
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_WorkerStatsMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_WorkerStatsMessage_descriptor,
        new java.lang.String[] { "Samples", });
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_WorkerStatsMessage_WorkerStatSample_descriptor =
      internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_WorkerStatsMessage_descriptor.getNestedTypes().get(0);
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_WorkerStatsMessage_WorkerStatSample_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_WorkerStatsMessage_WorkerStatSample_descriptor,
        new java.lang.String[] { "Time", "StatsBytes", });
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_QueryVertexChunksMessage_descriptor =
      internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_descriptor.getNestedTypes().get(5);
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_QueryVertexChunksMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_QueryVertexChunksMessage_descriptor,
        new java.lang.String[] { "Chunks", "Queries", });
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_QueryVertexChunksMapMessage_descriptor =
      internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_descriptor.getNestedTypes().get(6);
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_QueryVertexChunksMapMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_QueryVertexChunksMapMessage_descriptor,
        new java.lang.String[] { "Queries", "Count", });
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_QueryVertexQueryMessage_descriptor =
      internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_descriptor.getNestedTypes().get(7);
    internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_QueryVertexQueryMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mthesis_concurrent_graph_communication_messages_ControlMessage_QueryVertexQueryMessage_descriptor,
        new java.lang.String[] { "IsActive", "Supersteps", "LocalSupersteps", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
